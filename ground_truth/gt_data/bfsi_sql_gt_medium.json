[
  {
    "query": "Count the number of transactions per account with ID 123.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE acc_id = 123;",
    "cypher_command": "MATCH (a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE a.account_id = 123\nRETURN COUNT(t) AS transaction_count",
    "answer": "3",
    "id": "48a51163-5cfe-4f2b-b589-34fabbc64099"
  },
  {
    "query": "What is the average deposit interest rate across all deposit types?",
    "sql_command": "SELECT AVG(interest) AS average_interest_rate FROM deposits;",
    "cypher_command": "MATCH (d:Deposits)\nRETURN avg(d.interest_rate) AS average_interest_rate",
    "answer": "5.5095",
    "id": "b29504ed-4e30-4da8-a992-64b1ea91f28f"
  },
  {
    "query": "How many customers are under 18 years old?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE AGE(cus_dob) < INTERVAL '18 years';",
    "cypher_command": "MATCH (c:Customers)\nWHERE date(c.date_of_birth) > date({ year: date().year - 18, month: 1, day: 1 })\nRETURN count(c) AS under_18_customers",
    "answer": "1",
    "id": "98d12476-12a9-462c-92f4-3bd7b19d8999"
  },
  {
    "query": "What is the total loan balance for customers from branch 3?",
    "sql_command": "SELECT SUM(bal) AS total_loan_balance FROM loans l JOIN customers c ON l.cus_id = c.id WHERE c.brc = 3;",
    "cypher_command": "MATCH (c:Customers)-[:BELONGS_TO_BRANCH]->(b:Branches {branch_id: 3})<-[:BELONGS_TO_BRANCH]-(l:Loans)\nRETURN SUM(l.balance) AS total_loan_balance",
    "answer": "0",
    "id": "0ab0e25e-ca01-448d-9bd2-c1c3bed912ea"
  },
  {
    "query": "Count the number of transactions per account with ID 129.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE acc_id = 129;",
    "cypher_command": "MATCH (a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE a.account_id = 129\nRETURN COUNT(t) AS transaction_count",
    "answer": "3",
    "id": "38c92431-9273-4dac-b069-dfdea3755679"
  },
  {
    "query": "Count the number of customers with more than one loan.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) FROM loans GROUP BY cus_id HAVING COUNT(id) > 1;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWITH c, COUNT(l) AS loanCount\nWHERE loanCount > 1\nRETURN COUNT(c) AS customerCount",
    "answer": "50",
    "id": "e6e1cb1a-f03e-4739-a687-e42e066ba6ed"
  },
  {
    "query": "What is the number of accounts created before 2020 for customers with loans?",
    "sql_command": "SELECT COUNT(DISTINCT accounts.id) AS num_accounts_before_2020 FROM accounts JOIN loans ON accounts.cus_id = loans.cus_id WHERE accounts.created_at < '2020-01-01';",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nWHERE date(a.created_at) < date('2020-01-01')\nRETURN count(a) AS numberOfAccounts",
    "answer": "0",
    "id": "95fe1253-0f9e-467a-8fc5-1c78f69c97ec"
  },
  {
    "query": "What is the total balance of accounts for customers who have more than one card?",
    "sql_command": "SELECT SUM(accounts.acc_bal) AS total_balance FROM accounts WHERE accounts.cus_id IN (SELECT cus_id FROM cards GROUP BY cus_id HAVING COUNT(*) > 1);",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(cards:Cards)\nWITH c, COUNT(cards) AS cardCount\nWHERE cardCount > 1\nMATCH (c)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN SUM(a.account_balance) AS total_balance",
    "answer": "2184695.64",
    "id": "7b1a902b-bbb4-454f-9ade-476bb3adb45b"
  },
  {
    "query": "Count the number of loans per branch with ID 123.",
    "sql_command": "SELECT b.id AS branch_id, COUNT(l.id) AS number_of_loans\nFROM loans l\nJOIN customers c ON l.cus_id = c.id\nJOIN branches b ON c.brc = b.id\nWHERE b.id = 123\nGROUP BY b.id;",
    "cypher_command": "MATCH (b:Branches {branch_id: 123})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN COUNT(l) AS numberOfLoansPerBranch",
    "answer": "0",
    "id": "d55b8503-1e4c-4c6a-9484-94c61b4ffa84"
  },
  {
    "query": "Count the number of loans per customer with ID 130.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE cus_id = 130;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWHERE c.customer_id = 130\nRETURN count(l) AS numberOfLoans",
    "answer": "1",
    "id": "40f3b813-018e-4672-992a-d1393d50b22c"
  },
  {
    "query": "How many customers have both loans and deposits?",
    "sql_command": "SELECT COUNT(DISTINCT l.cus_id) FROM loans l JOIN deposits d ON l.cus_id = d.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans), (c)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "90",
    "id": "70c62fc3-7fe8-4c58-a764-91e52aadf819"
  },
  {
    "query": "Count the number of customers with accounts created in 2022.",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE EXTRACT(YEAR FROM created_at) = 2022;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nWHERE date(a.created_at) >= date({ year: 2022, month: 1, day: 1 }) AND date(a.created_at) < date({ year: 2023, month: 1, day: 1 })\nRETURN count(c) AS customer_count",
    "answer": "0",
    "id": "40a70a8c-7853-4a27-894c-bb8f7913ee5a"
  },
  {
    "query": "Count the number of deposits per customer with ID 127.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE cus_id = 127;",
    "cypher_command": "MATCH (c:Customers {customer_id: 127})<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN count(d) AS number_of_deposits",
    "answer": "3",
    "id": "bc8a507c-6a1e-4cd9-91ff-7e73574d0b0e"
  },
  {
    "query": "What is the number of transactions for customers with cards?",
    "sql_command": "SELECT COUNT(t.id) AS transaction_count FROM transactions AS t JOIN accounts AS a ON t.acc_id = a.id JOIN cards AS c ON a.cus_id = c.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions) MATCH (c)<-[:BELONGS_TO_CUSTOMER]-(k:Cards) RETURN COUNT(t) AS numberOfTransactions",
    "answer": "763",
    "id": "a24fe6fe-d765-4527-b6f0-c81dfe2541aa"
  },
  {
    "query": "Count the number of loans per customer with ID 127.",
    "sql_command": "SELECT COUNT(*) AS loan_count FROM loans WHERE cus_id = 127;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWHERE c.customer_id = 127\nRETURN count(l) AS numberOfLoans",
    "answer": "1",
    "id": "aa0dce6a-f469-43d7-a191-5e5ce25f3a48"
  },
  {
    "query": "How many loans are overdue?",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE ln_en_dt < CURRENT_DATE;",
    "cypher_command": "MATCH (l:Loans)\nWHERE date(l.end_date) < date()\nRETURN count(l) AS overdue_loans",
    "answer": "12",
    "id": "77e32818-27e8-4e09-9807-d490562236f0"
  },
  {
    "query": "Count the number of deposits with term greater than 24 months.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE CAST(SUBSTRING(tem FROM '\\d+') AS INTEGER) > 24;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWHERE toInteger(d.term) > 24\nRETURN count(d) AS numberOfDeposits",
    "answer": "0",
    "id": "7ddec252-44be-4907-b2ef-947a23c761a1"
  },
  {
    "query": "Count the number of transactions per customer with ID 123.",
    "sql_command": "SELECT COUNT(t.id) AS transaction_count\nFROM transactions t\nJOIN accounts a ON t.acc_id = a.id\nWHERE a.cus_id = 123;",
    "cypher_command": "MATCH (c:Customers {customer_id: 123})<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN COUNT(t) AS transaction_count",
    "answer": "3",
    "id": "40855017-7cc2-45c3-b4ec-542df8b83b2f"
  },
  {
    "query": "What is the number of customers who own accounts, cards, and loans?",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS num_customers\nFROM customers c\nJOIN accounts a ON c.id = a.cus_id\nJOIN cards cr ON c.id = cr.cus_id\nJOIN loans l ON c.id = l.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts),\n      (c)<-[:BELONGS_TO_CUSTOMER]-(l:Loans),\n      (c)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(DISTINCT c) AS numberOfCustomers",
    "answer": "58",
    "id": "c99fa623-0879-465b-8442-9f17139da836"
  },
  {
    "query": "Count the number of transactions per account with ID 128.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE acc_id = 128;",
    "cypher_command": "MATCH (a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE a.account_id = 128\nRETURN COUNT(t) AS transaction_count",
    "answer": "4",
    "id": "0c043855-9154-48fb-b4da-164e30c3cea1"
  },
  {
    "query": "What is the total transaction amount for customers with loans?",
    "sql_command": "SELECT SUM(transactions.tran_amt) AS total_transaction_amount \nFROM transactions \nJOIN accounts ON transactions.acc_id = accounts.id \nJOIN customers ON accounts.cus_id = customers.id \nWHERE customers.id IN (SELECT DISTINCT cus_id FROM loans);",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)<-[:HAS_LOAN_TYPE]-(lt:LoanTypes)\nMATCH (a:Accounts)<-[:BELONGS_TO_CUSTOMER]-(c)\nMATCH (a)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN SUM(t.transaction_amount) AS total_transaction_amount",
    "answer": "86763.23",
    "id": "72aedee6-424d-48a6-99ae-d9208581d43a"
  },
  {
    "query": "What is the number of customers who own accounts, cards, and deposits?",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS num_customers_with_all_products\nFROM customers c\nJOIN accounts a ON c.id = a.cus_id\nJOIN cards cr ON c.id = cr.cus_id\nJOIN deposits d ON c.id = d.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts),\n      (c)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits),\n      (c)<-[:BELONGS_TO_CUSTOMER]-(k:Cards)\nRETURN COUNT(DISTINCT c) AS number_of_customers",
    "answer": "53",
    "id": "33df0e4b-9e43-4d26-862f-17b68bd25de4"
  },
  {
    "query": "What is the total transaction amount of customers with loans?",
    "sql_command": "SELECT SUM(t.tran_amt) AS total_transaction_amount FROM transactions t JOIN accounts a ON t.acc_id = a.id JOIN customers c ON a.cus_id = c.id JOIN loans l ON c.id = l.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN SUM(t.transaction_amount) AS total_transaction_amount",
    "answer": "181314.81",
    "id": "38563b5a-dcb3-4bff-afda-e70bbdddb7ba"
  },
  {
    "query": "Count the number of customers with more than two loans.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) FROM loans GROUP BY cus_id HAVING COUNT(id) > 2;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWITH c, COUNT(l) AS loanCount\nWHERE loanCount > 2\nRETURN COUNT(c) AS customerCount",
    "answer": "20",
    "id": "92e8e6f6-70bc-4eec-aa84-249408b47e1a"
  },
  {
    "query": "Count the number of loans per customer with ID 128.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE cus_id = 128;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWHERE c.customer_id = 128\nRETURN COUNT(l) AS numberOfLoans",
    "answer": "1",
    "id": "72074bba-f6dd-4be3-9793-f26c0404205e"
  },
  {
    "query": "Count the number of cards per branch with ID 129.",
    "sql_command": "SELECT brc AS branch_id, COUNT(cards.id) AS card_count\nFROM cards\nJOIN customers ON cards.cus_id = customers.id\nWHERE customers.brc = 129\nGROUP BY branch_id\nLIMIT 5;",
    "cypher_command": "MATCH (b:Branches {branch_id: 129})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(card) AS numberOfCardsPerBranch",
    "answer": "0",
    "id": "a809664a-8610-426c-b694-314c9ed39d2e"
  },
  {
    "query": "What is the number of customers with both blocked and expired cards?",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) AS num_customers_with_blocked_and_expired_cards FROM cards WHERE is_blocked = TRUE AND card_exp_date < CURRENT_DATE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWHERE card.is_blocked = true AND date(card.expiration_date) < date()\nRETURN COUNT(DISTINCT c) AS numberOfCustomers",
    "answer": "0",
    "id": "7dd1ed3b-8d6f-4b95-8013-ee3e4156f697"
  },
  {
    "query": "Count the number of loans per branch with ID 126.",
    "sql_command": "SELECT COUNT(loans.id) FROM loans JOIN customers ON loans.cus_id = customers.id WHERE customers.brc = 126;",
    "cypher_command": "MATCH (b:Branches {branch_id: 126})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN COUNT(l) AS numberOfLoansPerBranch",
    "answer": "0",
    "id": "92a8cef1-d13f-40b1-aef7-eb6011a26e55"
  },
  {
    "query": "Count the number of loans with end date before 2026.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE ln_en_dt < '2026-01-01';",
    "cypher_command": "MATCH (l:Loans)\nWHERE date(l.end_date) < date('2026-01-01')\nRETURN count(l) AS numberOfLoans",
    "answer": "16",
    "id": "09df6960-12c9-475e-81ac-cdc55155d253"
  },
  {
    "query": "How many customers have an email registered?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE cus_email IS NOT NULL;",
    "cypher_command": "MATCH (c:Customers)\nWHERE c.email IS NOT NULL\nRETURN COUNT(c) AS registered_customers",
    "answer": "200",
    "id": "ddbbcc6f-def9-498a-8245-43fce5f50397"
  },
  {
    "query": "What is the number of customers with deposits and transactions larger than 5000?",
    "sql_command": "SELECT COUNT(DISTINCT cus.id) AS num_customers\nFROM customers cus\nJOIN deposits dep ON cus.id = dep.cus_id\nJOIN transactions trans ON dep.cus_id = trans.acc_id\nWHERE dep.bal > 5000 AND trans.tran_amt > 5000;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits), (c)<-[:BELONGS_TO_CUSTOMER]-(t:Transactions)\nWHERE d.balance > 5000 AND t.transaction_amount > 5000\nRETURN COUNT(DISTINCT c) AS numberOfCustomers",
    "answer": "0",
    "id": "e3181009-89fd-4dad-94b1-e1e5744a179d"
  },
  {
    "query": "Count the number of customers with more than three accounts.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) AS customer_count\nFROM accounts\nGROUP BY cus_id\nHAVING COUNT(acc_num) > 3;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nWITH c, COUNT(a) AS accountCount\nWHERE accountCount > 3\nRETURN COUNT(c) AS customerCount",
    "answer": "12",
    "id": "6d674149-fec4-46c5-bece-eab41c369687"
  },
  {
    "query": "What is the number of customers who have both a loan and a deposit?",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS num_customers_with_both_loan_and_deposit\nFROM customers c\nJOIN deposits d ON c.id = d.cus_id\nJOIN loans l ON c.id = l.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans), (c)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN COUNT(DISTINCT c) AS numberOfCustomersWithLoanAndDeposit",
    "answer": "90",
    "id": "8d1abaa2-05ad-4447-bd2f-c790a06594e5"
  },
  {
    "query": "What is the number of customers with more than one account?",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) FROM accounts GROUP BY cus_id HAVING COUNT(acc_num) > 1;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nWITH c, COUNT(a) AS accountCount\nWHERE accountCount > 1\nRETURN COUNT(c) AS numberOfCustomersWithMultipleAccounts",
    "answer": "86",
    "id": "0d8200ef-2a7c-4333-b07c-d097a03dbccd"
  },
  {
    "query": "Count the number of transactions per customer with ID 127.",
    "sql_command": "SELECT COUNT(t.id) AS transaction_count \nFROM transactions t \nJOIN accounts a ON t.acc_id = a.id \nWHERE a.cus_id = 127;",
    "cypher_command": "MATCH (c:Customers {customer_id: 127})<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN COUNT(t) AS transaction_count",
    "answer": "4",
    "id": "59843346-eddd-4166-acb3-4d9f1067c71b"
  },
  {
    "query": "What is the total balance of deposits for customers from branch 2?",
    "sql_command": "SELECT SUM(deposits.bal) AS total_balance FROM deposits JOIN customers ON deposits.cus_id = customers.id WHERE customers.brc = 2;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)-[:HAS_DEPOSIT_TYPE]->(dt:DepositTypes)\nWHERE c.branch_id = 2\nRETURN SUM(d.balance) AS total_balance_of_deposits",
    "answer": "1463967.16",
    "id": "c898f30a-df1d-4e60-88d5-178d25b108f2"
  },
  {
    "query": "Count the number of cards per customer with ID 126.",
    "sql_command": "SELECT COUNT(*) FROM cards WHERE cus_id = 126;",
    "cypher_command": "MATCH (c:Customers {customer_id: 126})<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN count(card) AS number_of_cards",
    "answer": "0",
    "id": "47dbc525-f894-40dd-85cb-dd51e1154f89"
  },
  {
    "query": "What is the total number of blocked cards linked to branches?",
    "sql_command": "SELECT COUNT(cards.id) AS total_blocked_cards\nFROM cards\nJOIN customers ON cards.cus_id = customers.id\nJOIN branches ON customers.brc = branches.id\nWHERE cards.is_blocked = TRUE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWHERE card.is_blocked = true\nRETURN count(card) AS total_blocked_cards",
    "answer": "72",
    "id": "31c44d7f-bff7-44e2-95df-07f8ee686c99"
  },
  {
    "query": "What is the average loan interest rate across all loan types?",
    "sql_command": "SELECT AVG(interest) AS average_interest_rate FROM loans;",
    "cypher_command": "MATCH (l:Loans)\nRETURN avg(l.interest_rate) AS average_interest_rate",
    "answer": "5.135",
    "id": "093dc1ee-b080-48e3-ac25-84f605627315"
  },
  {
    "query": "Count the number of deposits with end date in the next 12 months.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE de_en_dt IS NOT NULL AND de_en_dt <= CURRENT_DATE + INTERVAL '12 months';",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits) WHERE date(d.end_date) <= date({ year: date().year + (date().month + 12 - 1) / 12, month: ((date().month + 12 - 1) % 12) + 1, day: date().day }) RETURN count(d) AS deposit_count",
    "answer": "21",
    "id": "3d973dc8-ece4-4a08-834b-e087f0e99656"
  },
  {
    "query": "Count the number of deposits per deposit type with ID 125.",
    "sql_command": "SELECT dt.de_type, COUNT(d.id) as deposit_count \nFROM deposits d\nJOIN deposit_types dt ON d.de_type_id = dt.id\nWHERE d.de_type_id = 125\nGROUP BY dt.de_type\nLIMIT 5;",
    "cypher_command": "MATCH (d:Deposits)-[:HAS_DEPOSIT_TYPE]->(dt:DepositTypes)\nWHERE dt.deposit_type_id = 125\nRETURN COUNT(d) AS numberOfDeposits",
    "answer": "0",
    "id": "6eb98794-b84a-42ac-bb12-c2e973bf365f"
  },
  {
    "query": "Count the number of deposits with term greater than 12 months.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE CAST(LEFT(tem, LENGTH(tem)-1) AS INT) > 12 AND RIGHT(tem, 1) = 'M'",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWHERE d.term > '12'\nRETURN COUNT(d) AS numberOfDeposits",
    "answer": "200",
    "id": "d2e35a2b-ba5d-441f-b89a-84e1f18f4712"
  },
  {
    "query": "What is the total deposit balance for customers who also made more than 5 transactions?",
    "sql_command": "SELECT SUM(d.bal) as total_deposit_balance FROM deposits d INNER JOIN accounts a ON d.cus_id = a.cus_id WHERE a.id IN (SELECT acc_id FROM transactions GROUP BY acc_id HAVING COUNT(*) > 5);",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions) \nWITH c, t, COUNT(a) AS account_count, SUM(a.account_balance) AS total_balance \nWHERE account_count > 5 \nRETURN total_balance",
    "answer": "927238.66",
    "id": "7689f548-86bc-498e-8b9b-3ca1926eea8d"
  },
  {
    "query": "How many customers live in California?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE cus_addr LIKE '%CA%';",
    "cypher_command": "MATCH (c:Customers)\nWHERE c.address CONTAINS 'California'\nRETURN count(c) AS numberOfCustomersInCalifornia",
    "answer": "4",
    "id": "a3bd1e26-fe2c-46a0-968f-846e640b20eb"
  },
  {
    "query": "Count the total number of unique customers with deposits.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) AS unique_customer_count FROM deposits;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN COUNT(DISTINCT c.customer_id) AS unique_customers_with_deposits",
    "answer": "131",
    "id": "8d2de494-2b7d-43b8-8d20-ace38b34bda4"
  },
  {
    "query": "How many branches does the bank have?",
    "sql_command": "SELECT COUNT(*) FROM branches;",
    "cypher_command": "MATCH (b:Branches)\nRETURN count(b) AS number_of_branches",
    "answer": "4",
    "id": "6bb590a5-bc9d-4547-a66b-5cf382cc7b9a"
  },
  {
    "query": "Count the number of deposits with end date in the next 6 months.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE de_en_dt > CURRENT_DATE AND de_en_dt <= CURRENT_DATE + INTERVAL '6 months'",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits) WHERE d.end_date >= date() AND d.end_date < date() + duration({ months: 6 }) RETURN count(d) AS deposit_count",
    "answer": "10",
    "id": "fb352274-16c4-4814-a746-9fa2d4ff5775"
  },
  {
    "query": "Count the number of cards per customer with ID 130.",
    "sql_command": "SELECT COUNT(*) FROM cards WHERE cus_id = 130;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWHERE c.customer_id = 130\nRETURN count(card) AS numberOfCards",
    "answer": "1",
    "id": "692531ea-ea54-47d9-a12f-52b7030b1045"
  },
  {
    "query": "Count the number of accounts per branch with ID 129.",
    "sql_command": "SELECT branches.id, COUNT(accounts.id) AS account_count FROM branches LEFT JOIN accounts ON branches.id = accounts.cus_id WHERE branches.id = 129 GROUP BY branches.id;",
    "cypher_command": "MATCH (b:Branches {branch_id: 129})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN COUNT(a) AS account_count",
    "answer": "0",
    "id": "a663ee0a-9d37-4b5b-a03e-a8e988233e0f"
  },
  {
    "query": "What is the total loan balance for all customers?",
    "sql_command": "SELECT SUM(bal) AS total_loan_balance FROM loans;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN SUM(l.balance) AS total_loan_balance",
    "answer": "-5123070.45",
    "id": "cc719a16-4080-4aeb-bb5a-f39625a4e810"
  },
  {
    "query": "Count the number of cards per branch with ID 123.",
    "sql_command": "SELECT COUNT(cards.id) AS card_count, branches.id AS branch_id\nFROM cards\nJOIN customers ON cards.cus_id = customers.id\nJOIN branches ON customers.brc = branches.id\nWHERE branches.id = 123\nGROUP BY branches.id\nLIMIT 5;",
    "cypher_command": "MATCH (b:Branches {branch_id: 123})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(card) AS number_of_cards_per_branch",
    "answer": "0",
    "id": "50a5d376-475d-4f0a-89c0-a463248eaa92"
  },
  {
    "query": "How many customers have both transactions and cards?",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS customer_count\nFROM customers c\nJOIN cards ON c.id = cards.cus_id\nJOIN accounts a ON c.id = a.cus_id\nJOIN transactions t ON a.id = t.acc_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions),\n      (c)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "85",
    "id": "d90c6b9f-4806-4547-b3e9-9f70bb3abc92"
  },
  {
    "query": "How many deposits are currently active?",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE de_en_dt IS NULL OR de_en_dt > CURRENT_DATE;",
    "cypher_command": "MATCH (d:Deposits)\nWHERE date(d.end_date) > date()\nRETURN count(d) AS active_deposits",
    "answer": "200",
    "id": "ff725398-4746-4584-8b0b-1dffcdc509e5"
  },
  {
    "query": "Count the number of cards per customer with ID 123.",
    "sql_command": "SELECT COUNT(id) FROM cards WHERE cus_id = 123;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWHERE c.customer_id = 123\nRETURN count(card) AS numberOfCards",
    "answer": "0",
    "id": "7721f40c-a492-4e57-a114-ecf1b5330c28"
  },
  {
    "query": "Count the number of accounts per branch with ID 127.",
    "sql_command": "SELECT branches.id AS branch_id, branches.brc AS branch_name, COUNT(accounts.id) AS num_accounts \nFROM accounts \nJOIN customers ON accounts.cus_id = customers.id \nJOIN branches ON customers.brc = branches.id \nWHERE branches.id = 127 \nGROUP BY branches.id, branches.brc;",
    "cypher_command": "MATCH (b:Branches {branch_id: 127})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN COUNT(a) AS account_count",
    "answer": "0",
    "id": "d742add0-c8cd-44b0-b2b9-2ee6862c8c71"
  },
  {
    "query": "Count the number of cards per customer with ID 129.",
    "sql_command": "SELECT COUNT(*) FROM cards WHERE cus_id = 129;",
    "cypher_command": "MATCH (c:Customers {customer_id: 129})<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN count(card) AS number_of_cards",
    "answer": "1",
    "id": "7787ae2b-aca4-4784-8372-5d788558c7fa"
  },
  {
    "query": "How many customers have first names starting with 'A'?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE cus_name LIKE 'A%';",
    "cypher_command": "MATCH (c:Customers)\nWHERE c.customer_name STARTS WITH 'A'\nRETURN COUNT(c) AS customer_count",
    "answer": "22",
    "id": "c686d5bb-ba3c-41ef-85eb-1f5e51f5a867"
  },
  {
    "query": "Count the number of transactions per customer with ID 124.",
    "sql_command": "SELECT COUNT(t.id) AS transaction_count FROM transactions t JOIN accounts a ON t.acc_id = a.id WHERE a.cus_id = 124;",
    "cypher_command": "MATCH (c:Customers {customer_id: 124})<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN count(t) AS transaction_count",
    "answer": "6",
    "id": "bb8c32d6-5bb0-4371-8cc0-39257b2f97e4"
  },
  {
    "query": "What is the number of expired cards belonging to customers with deposits?",
    "sql_command": "SELECT COUNT(*) AS expired_card_count\nFROM cards c\nJOIN customers cu ON c.cus_id = cu.id\nJOIN deposits d ON cu.id = d.cus_id\nWHERE c.card_exp_date < CURRENT_DATE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)<-[:HAS_DEPOSIT_TYPE]-(a:Accounts)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWHERE date(card.expiration_date) < date()\nRETURN count(card) AS expired_card_count",
    "answer": "0",
    "id": "b93fef84-dd8b-46fe-b9a2-46e053d19ecc"
  },
  {
    "query": "Count the number of loans with payment term between 6 and 12 months.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE pmt_term BETWEEN '6M' AND '12M';",
    "cypher_command": "MATCH (l:Loans)\nWHERE l.payment_term >= '6' AND l.payment_term <= '12'\nRETURN count(l) AS loan_count",
    "answer": "0",
    "id": "7a1f9124-84ec-459c-ad27-5ed927989f0b"
  },
  {
    "query": "Count the number of loans with interest rate between 3% and 5%.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE interest BETWEEN 0.03 AND 0.05;",
    "cypher_command": "MATCH (l:Loans)\nWHERE l.interest_rate >= 3 AND l.interest_rate <= 5\nRETURN COUNT(l) AS loan_count",
    "answer": "41",
    "id": "aa0af11d-a8df-42e6-a565-2a7178a1d274"
  },
  {
    "query": "Count the number of accounts per branch with ID 126.",
    "sql_command": "SELECT branches.id AS branch_id, branches.brc, COUNT(accounts.id) AS account_count FROM branches LEFT JOIN accounts ON branches.id = accounts.cus_id WHERE branches.id = 126 GROUP BY branches.id, branches.brc;",
    "cypher_command": "MATCH (b:Branches {branch_id: 126})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN COUNT(a) AS account_count",
    "answer": "0",
    "id": "5af9c97a-22b5-4c0b-994a-096c65a036c5"
  },
  {
    "query": "How many branches are in Los Angeles?",
    "sql_command": "SELECT COUNT(*) FROM branches WHERE brc_address LIKE '%Los Angeles%';",
    "cypher_command": "MATCH (b:Branches)\nWHERE b.branch_address CONTAINS 'Los Angeles'\nRETURN COUNT(b) AS number_of_branches",
    "answer": "0",
    "id": "6288c0b8-b7c2-41bc-8f1e-e7d3e2f15551"
  },
  {
    "query": "Count the number of loans with interest rate above 7%.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE interest > 7;",
    "cypher_command": "MATCH (l:Loans)\nWHERE l.interest_rate > 7\nRETURN count(l) AS numberOfLoans",
    "answer": "69",
    "id": "95bc5180-01e1-4d25-bd01-08cee0951a41"
  },
  {
    "query": "Count the number of loans with interest rate above average interest rate.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE interest > (SELECT AVG(interest) FROM loans);",
    "cypher_command": "MATCH (l:Loans)\nWITH AVG(l.interest_rate) AS avg_interest_rate\nMATCH (l:Loans)\nWHERE l.interest_rate > avg_interest_rate\nRETURN COUNT(l) AS loans_above_average_interest_rate",
    "answer": "101",
    "id": "16cebeee-c436-4c78-80a0-0f118c068ace"
  },
  {
    "query": "Count the number of customers with more than three cards.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) FROM cards GROUP BY cus_id HAVING COUNT(id) > 3;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWITH c, COUNT(card) AS cardCount\nWHERE cardCount > 3\nRETURN COUNT(c) AS customerCount",
    "answer": "3",
    "id": "87a2ae0b-bf23-4ae4-839c-538b734110b4"
  },
  {
    "query": "Count the number of deposits per deposit type with ID 128.",
    "sql_command": "SELECT deposit_types.de_type, COUNT(deposits.id) AS deposit_count \nFROM deposits \nJOIN deposit_types ON deposits.de_type_id = deposit_types.id \nWHERE deposits.de_type_id = 128 \nGROUP BY deposit_types.de_type\nLIMIT 5;",
    "cypher_command": "MATCH (d:Deposits)-[:HAS_DEPOSIT_TYPE]->(dt:DepositTypes)\nWHERE dt.deposit_type_id = 128\nRETURN COUNT(d) AS numberOfDeposits",
    "answer": "0",
    "id": "667ad1fe-dd91-4d20-b4f8-6aeb989ba813"
  },
  {
    "query": "What is the number of customers with more than one deposit?",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) AS number_of_customers\nFROM deposits\nGROUP BY cus_id\nHAVING COUNT(id) > 1;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWITH c, COUNT(d) AS depositCount\nWHERE depositCount > 1\nRETURN COUNT(c) AS numberOfCustomers",
    "answer": "52",
    "id": "6d2f762c-ea2e-4d91-926a-66aa606301c6"
  },
  {
    "query": "How many deposits are closed?",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE de_en_dt IS NOT NULL;",
    "cypher_command": "MATCH (d:Deposits)\nWHERE d.end_date IS NOT NULL\nRETURN count(d) AS closed_deposits",
    "answer": "200",
    "id": "eb005205-b812-4060-852b-b166dd14b3d0"
  },
  {
    "query": "How many loans are closed?",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE ln_en_dt IS NOT NULL;",
    "cypher_command": "MATCH (l:Loans)\nWHERE l.end_date IS NOT NULL\nRETURN count(l) AS closed_loans",
    "answer": "200",
    "id": "bfcde7bd-89fd-417d-9722-5c6c80c2a504"
  },
  {
    "query": "Count the number of customers with deposits and cards.",
    "sql_command": "SELECT COUNT(DISTINCT customers.id) AS customer_count\nFROM customers\nJOIN deposits ON customers.id = deposits.cus_id\nJOIN cards ON customers.id = cards.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits), (c)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "66",
    "id": "2e8b5028-e3a8-4ac5-a003-3bcfe4d313a5"
  },
  {
    "query": "How many customers have a phone number registered?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE cus_phone IS NOT NULL;",
    "cypher_command": "MATCH (c:Customers)\nWHERE c.phone IS NOT NULL\nRETURN COUNT(c) AS registered_customers",
    "answer": "200",
    "id": "000df651-c2b8-4040-bd22-164af22507a2"
  },
  {
    "query": "Count the number of deposits with balance above average deposit balance.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE bal > (SELECT AVG(bal) FROM deposits);",
    "cypher_command": "MATCH (d:Deposits)\nWITH AVG(d.balance) AS avg_balance\nMATCH (d:Deposits)\nWHERE d.balance > avg_balance\nRETURN COUNT(d) AS count_above_average_deposits",
    "answer": "208",
    "id": "ca8af448-cc2a-4fc0-b4f3-2776fe461ea5"
  },
  {
    "query": "Count the number of transactions per deposit type with ID 128.",
    "sql_command": "SELECT dt.de_type, COUNT(t.id) AS transaction_count\nFROM deposits d \nJOIN transactions t ON d.id = t.acc_id\nJOIN deposit_types dt ON d.de_type_id = dt.id\nWHERE d.de_type_id = 128\nGROUP BY dt.de_type\nLIMIT 5;",
    "cypher_command": "MATCH (d:Deposits)-[:HAS_DEPOSIT_TYPE]->(dt:DepositTypes)\nWHERE dt.deposit_type_id = 128\nRETURN COUNT(d) AS transaction_count",
    "answer": "0",
    "id": "3b35c344-cb08-4940-98fe-0582c634bee8"
  },
  {
    "query": "How many accounts are checking accounts?",
    "sql_command": "SELECT COUNT(*) FROM deposits d JOIN deposit_types dt ON d.de_type_id = dt.id WHERE dt.de_type = 'Checking Account';",
    "cypher_command": "MATCH (a:Accounts)\nWHERE a.account_type = 'checking'\nRETURN count(a) AS checking_account_count",
    "answer": "0",
    "id": "b3e5e088-db02-46ad-a8fa-c909538f69d0"
  },
  {
    "query": "Count the number of cards per branch with ID 126.",
    "sql_command": "SELECT COUNT(cards.id) as card_count FROM cards JOIN customers ON cards.cus_id = customers.id WHERE customers.brc = 126;",
    "cypher_command": "MATCH (b:Branches {branch_id: 126})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(card) AS number_of_cards_per_branch",
    "answer": "0",
    "id": "5dc2a160-6b45-4791-9b80-406c06f5c152"
  },
  {
    "query": "Count the number of customers with transactions in 2025.",
    "sql_command": "SELECT COUNT(DISTINCT customers.id) \nFROM customers\nJOIN accounts ON customers.id = accounts.cus_id \nJOIN transactions ON accounts.id = transactions.acc_id \nWHERE EXTRACT(YEAR FROM transactions.tran_dt) = 2025;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE date(t.transaction_date) >= date({ year: 2025, month: 1, day: 1 }) AND date(t.transaction_date) < date({ year: 2026, month: 1, day: 1 })\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "81",
    "id": "f314770a-394f-43c8-b6ac-7188d8e13f5d"
  },
  {
    "query": "What is the average number of loans per customer?",
    "sql_command": "SELECT AVG(loan_count) AS average_loans_per_customer\nFROM (\n    SELECT cus_id, COUNT(*) AS loan_count\n    FROM loans\n    GROUP BY cus_id\n) AS loans_per_customer;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans) WITH c, COUNT(l) AS numLoans RETURN AVG(numLoans) AS average_loans_per_customer",
    "answer": "1.5873015873015873",
    "id": "aadc1ee0-a0cf-4ebb-a65b-c82181614846"
  },
  {
    "query": "Count the number of transactions per account with ID 124.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE acc_id = 124;",
    "cypher_command": "MATCH (a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE a.account_id = 124\nRETURN COUNT(t) AS transaction_count",
    "answer": "2",
    "id": "d073693a-e684-424e-8914-a331dc8eb056"
  },
  {
    "query": "Count the number of deposits with start date after 2024.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE de_st_dt > '2024-12-31'",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWHERE date(d.start_date) > date('2024-01-01')\nRETURN count(d) AS numberOfDeposits",
    "answer": "200",
    "id": "66a0bb2e-9556-4e6f-a9b8-5b41879bc5bd"
  },
  {
    "query": "Count the number of loans with interest rate above 6%.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE interest > 6.0;",
    "cypher_command": "MATCH (l:Loans)\nWHERE l.interest_rate > 6\nRETURN count(l) AS numberOfLoans",
    "answer": "89",
    "id": "3db77a14-8b08-4c04-8671-6fe28944816e"
  },
  {
    "query": "How many transactions happened in 2024?",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE EXTRACT(YEAR FROM tran_dt) = 2024;",
    "cypher_command": "MATCH (t:Transactions)\nWHERE date(t.transaction_date) >= date({ year: 2024, month: 1, day: 1 }) AND date(t.transaction_date) < date({ year: 2025, month: 1, day: 1 })\nRETURN count(t) AS transaction_count",
    "answer": "222",
    "id": "5f3d2c68-65d8-4eff-8c28-2b6c5e7ea836"
  },
  {
    "query": "How many accounts are savings accounts?",
    "sql_command": "SELECT COUNT(*) FROM deposits d\nJOIN deposit_types dt ON d.de_type_id = dt.id\nWHERE dt.de_type = 'Savings Account';",
    "cypher_command": "MATCH (a:Accounts)\nWHERE a.account_type = 'savings'\nRETURN count(a) AS savings_account_count",
    "answer": "0",
    "id": "1ff0ffeb-02bb-4fd3-a4fa-07bfaafadcb0"
  },
  {
    "query": "How many customers registered in 2022?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE EXTRACT(YEAR FROM created_at) = 2022;",
    "cypher_command": "MATCH (c:Customers)\nWHERE date(c.created_at) >= date({ year: 2022, month: 1, day: 1 }) AND date(c.created_at) < date({ year: 2023, month: 1, day: 1 })\nRETURN count(c) AS registered_customers_2022",
    "answer": "0",
    "id": "8d3723e0-1ea9-4e62-8a81-e72a5de463a4"
  },
  {
    "query": "Count the number of transactions per deposit type with ID 129.",
    "sql_command": "SELECT dt.de_type, COUNT(t.id) AS num_transactions \nFROM deposit_types dt \nJOIN deposits d ON dt.id = d.de_type_id\nJOIN transactions t ON d.id = t.acc_id\nWHERE dt.id = 129\nGROUP BY dt.de_type \nLIMIT 5;",
    "cypher_command": "MATCH (d:Deposits)-[:HAS_DEPOSIT_TYPE]->(dt:DepositTypes {deposit_type_id: 129})<-[:BELONGS_TO_CUSTOMER]-(c:Customers)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN COUNT(t) AS transaction_count",
    "answer": "0",
    "id": "8303913d-16e2-4d3d-b398-95711336addc"
  },
  {
    "query": "Count the number of loans with end date before 2025.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE ln_en_dt < '2025-01-01';",
    "cypher_command": "MATCH (l:Loans)\nWHERE date(l.end_date) < date('2025-01-01')\nRETURN count(l) AS numberOfLoans",
    "answer": "5",
    "id": "6d957359-d155-4e21-9a79-2f2a7bce8610"
  },
  {
    "query": "Count the number of loans with interest rate between 4% and 6%.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE interest BETWEEN 4.0000 AND 6.0000;",
    "cypher_command": "MATCH (l:Loans)\nWHERE l.interest_rate >= 4 AND l.interest_rate <= 6\nRETURN COUNT(l) AS loan_count",
    "answer": "33",
    "id": "4a6220b3-7807-475d-86b0-dcc7d4587d64"
  },
  {
    "query": "Count the number of customers with more than three loans.",
    "sql_command": "SELECT COUNT(*) FROM (SELECT cus_id FROM loans GROUP BY cus_id HAVING COUNT(*) > 3) AS subquery;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWITH c, COUNT(l) AS loanCount\nWHERE loanCount > 3\nRETURN COUNT(c) AS customerCount",
    "answer": "4",
    "id": "34c1f631-9c26-4333-93c8-9c72fc5d5c50"
  },
  {
    "query": "How many deposits have a balance greater than 20000?",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE bal > 20000;",
    "cypher_command": "MATCH (d:Deposits)\nWHERE d.balance > 20000\nRETURN count(d) AS numberOfDeposits",
    "answer": "130",
    "id": "ac29ea9b-2461-4b00-8db2-3f67d4c33a9d"
  },
  {
    "query": "What is the total balance of accounts for customers who also own deposits with interest rate greater than 7%?",
    "sql_command": "SELECT SUM(accounts.acc_bal) AS total_balance\nFROM accounts\nJOIN deposits ON accounts.cus_id = deposits.cus_id\nWHERE deposits.interest > 7;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWHERE d.interest_rate > 7\nMATCH (c)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN SUM(a.account_balance) AS total_balance",
    "answer": "2868918.12",
    "id": "e671e07f-04ee-42c5-8ee1-d895cd25cdb2"
  },
  {
    "query": "Count the number of customers with more than two cards.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) FROM cards GROUP BY cus_id HAVING COUNT(id) > 2;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWITH c, COUNT(card) AS cardCount\nWHERE cardCount > 2\nRETURN COUNT(c) AS customerCount",
    "answer": "9",
    "id": "6a573ed1-c8ea-491e-a35f-b9e2fad97468"
  },
  {
    "query": "Count the number of transactions with amount between 100 and 1000.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE tran_amt BETWEEN 100 AND 1000;",
    "cypher_command": "MATCH (t:Transactions)\nWHERE t.transaction_amount >= 100 AND t.transaction_amount <= 1000\nRETURN COUNT(t) AS transaction_count",
    "answer": "90",
    "id": "6c46986c-bdaf-4c57-a5af-6e847a69cba9"
  },
  {
    "query": "Count the number of loans per loan type with ID 125.",
    "sql_command": "SELECT COUNT(l.id) AS loan_count, lt.ln_type FROM loans l JOIN loan_types lt ON l.ln_type_id = lt.id WHERE l.ln_type_id = 125 GROUP BY lt.ln_type;",
    "cypher_command": "MATCH (lt:LoanTypes)<-[:HAS_LOAN_TYPE]-(l:Loans)\nWHERE lt.loan_type_id = 125\nRETURN COUNT(l) AS numberOfLoans",
    "answer": "0",
    "id": "a1bed20f-f97f-434b-a6b0-2a522dbb262b"
  },
  {
    "query": "Count the number of transactions per account with ID 126.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE acc_id = 126;",
    "cypher_command": "MATCH (a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE a.account_id = 126\nRETURN COUNT(t) AS transaction_count",
    "answer": "2",
    "id": "3db3a75d-976e-4455-af5e-1081aa5369bf"
  },
  {
    "query": "Count the number of loans with payment term between 24 and 36 months.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE CAST(REPLACE(pmt_term, 'M', '') AS INTEGER) BETWEEN 24 AND 36;",
    "cypher_command": "MATCH (l:Loans)\nWHERE toInteger(l.payment_term) >= 24 AND toInteger(l.payment_term) <= 36\nRETURN count(l) AS loan_count",
    "answer": "0",
    "id": "ae1c7e62-a969-437c-a911-2c903f720f7a"
  },
  {
    "query": "What is the total account balance of customers who made transactions this year?",
    "sql_command": "SELECT SUM(a.acc_bal) as total_balance\nFROM accounts a\nJOIN transactions t ON a.id = t.acc_id\nWHERE DATE_PART('year', t.tran_dt) = DATE_PART('year', CURRENT_DATE);",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE date(t.transaction_date) >= date({ year: date().year, month: 1, day: 1 })\nRETURN SUM(a.account_balance) AS total_account_balance",
    "answer": "6532119.06",
    "id": "ae89c1ae-8334-40d8-8354-1077a95abe8a"
  },
  {
    "query": "How many deposits were made in 2021?",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE EXTRACT(YEAR FROM de_st_dt) = 2021;",
    "cypher_command": "MATCH (d:Deposits)\nWHERE date(d.created_at) >= date({ year: 2021, month: 1, day: 1 }) AND date(d.created_at) < date({ year: 2022, month: 1, day: 1 })\nRETURN count(d) AS total_deposits_2021",
    "answer": "0",
    "id": "5686d22c-2f33-43c9-b8cd-c716889a450f"
  },
  {
    "query": "How many accounts exist per branch?",
    "sql_command": "SELECT branches.brc, COUNT(accounts.id) AS account_count \nFROM accounts \nJOIN customers ON accounts.cus_id = customers.id \nJOIN branches ON customers.brc = branches.id \nGROUP BY branches.brc \nORDER BY account_count DESC \nLIMIT 5;",
    "cypher_command": "MATCH (b:Branches)<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts) WITH b.branch_id AS branch_id, COUNT(a) AS account_count RETURN branch_id, account_count",
    "answer": "[87, 84, 81, 48]",
    "id": "16089c0a-ad22-4113-856f-9cfa51e4fe00"
  },
  {
    "query": "Count the number of deposits per branch with ID 123.",
    "sql_command": "SELECT COUNT(d.id) as deposits_count FROM deposits d JOIN transactions t ON d.cus_id = t.acc_id JOIN accounts a ON t.acc_id = a.id JOIN branches b ON a.id = b.id WHERE b.id = 123;",
    "cypher_command": "MATCH (b:Branches {branch_id: 123})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN COUNT(d) AS deposit_count",
    "answer": "0",
    "id": "48973c19-4250-4326-b797-6eeffdb54829"
  },
  {
    "query": "How many employees were hired before 2010?",
    "sql_command": "SELECT COUNT(*) AS employee_count FROM customers WHERE created_at < '2010-01-01';",
    "cypher_command": "MATCH (c:Customers)\nWHERE date(c.created_at) < date('2010-01-01')\nRETURN count(c) AS employees_hired_before_2010",
    "answer": "0",
    "id": "cff0209b-b579-451f-a6a7-c37809a097c9"
  },
  {
    "query": "Count the number of transactions with amount between 50 and 200.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE tran_amt BETWEEN 50 AND 200;",
    "cypher_command": "MATCH (t:Transactions)\nWHERE t.transaction_amount >= 50 AND t.transaction_amount <= 200\nRETURN COUNT(t) AS transaction_count",
    "answer": "13",
    "id": "84d8abcf-a19a-4d8d-aecf-4e5f2a07a64e"
  },
  {
    "query": "What is the total deposit balance for all customers?",
    "sql_command": "SELECT SUM(bal) AS total_deposit_balance FROM deposits;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN SUM(d.balance) AS total_deposit_balance",
    "answer": "5301555.72",
    "id": "caed05a7-06b6-45be-8f5e-50101f0e1428"
  },
  {
    "query": "How many accounts have a balance greater than 5000?",
    "sql_command": "SELECT COUNT(*) FROM accounts WHERE acc_bal > 5000;",
    "cypher_command": "MATCH (a:Accounts)\nWHERE a.account_balance > 5000\nRETURN count(a) AS accounts_with_balance_above_5000",
    "answer": "266",
    "id": "3b744903-5665-4852-9bea-76b31bb1ab42"
  },
  {
    "query": "Count the number of deposits per branch with ID 124.",
    "sql_command": "SELECT COUNT(*) AS deposit_count FROM deposits WHERE de_type_id = 124;",
    "cypher_command": "MATCH (b:Branches {branch_id: 124})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN COUNT(d) AS number_of_deposits_per_branch",
    "answer": "0",
    "id": "d81b5dd1-ad5d-4998-9d83-5580243c6fc2"
  },
  {
    "query": "Count the number of deposits per customer with ID 130.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE cus_id = 130;",
    "cypher_command": "MATCH (c:Customers {customer_id: 130})<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN count(d) AS number_of_deposits",
    "answer": "0",
    "id": "67bb77a9-d716-4fbc-92a8-c364d6d80b44"
  },
  {
    "query": "How many loans are linked to customers?",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) FROM loans;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN count(l) AS numberOfLoans",
    "answer": "200",
    "id": "1be106a7-4449-4b4a-90b5-fa75253051bf"
  },
  {
    "query": "Count the number of cards per branch with ID 128.",
    "sql_command": "SELECT b.id AS branch_id, COUNT(c.id) AS number_of_cards\nFROM branches b\nJOIN customers cu ON cu.brc = b.id\nJOIN cards c ON c.cus_id = cu.id\nWHERE b.id = 128\nGROUP BY b.id;",
    "cypher_command": "MATCH (b:Branches {branch_id: 128})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(card) AS number_of_cards_per_branch",
    "answer": "0",
    "id": "415d8aa9-0cc9-43ef-a0a0-c1795b1e0836"
  },
  {
    "query": "Count the number of transactions per customer with ID 128.",
    "sql_command": "SELECT COUNT(t.id) AS transaction_count FROM transactions t JOIN accounts a ON t.acc_id = a.id WHERE a.cus_id = 128;",
    "cypher_command": "MATCH (c:Customers {customer_id: 128})<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN COUNT(t) AS transaction_count",
    "answer": "0",
    "id": "af9aa552-757a-4b2c-8b63-731a7b60ef23"
  },
  {
    "query": "Count the number of accounts per branch with ID 124.",
    "sql_command": "SELECT COUNT(a.id) AS account_count FROM accounts a JOIN branches b ON a.id = b.id WHERE b.id = 124;",
    "cypher_command": "MATCH (b:Branches {branch_id: 124})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN COUNT(a) AS account_count",
    "answer": "0",
    "id": "0c7e590c-2344-4c62-9c4e-0eb5b54260b5"
  },
  {
    "query": "Count the number of deposits per customer with ID 125.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE cus_id = 125;",
    "cypher_command": "MATCH (c:Customers {customer_id: 125})<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN count(d) AS number_of_deposits",
    "answer": "2",
    "id": "49f3a00b-ca66-49c8-a494-d798edad13d4"
  },
  {
    "query": "Count the number of deposits per customer with ID 129.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE cus_id = 129;",
    "cypher_command": "MATCH (c:Customers {customer_id: 129})<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN count(d) AS number_of_deposits",
    "answer": "1",
    "id": "b2c2305d-d123-4648-9ae7-a0d9a361a21c"
  },
  {
    "query": "How many deposits are linked to customers?",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE cus_id IS NOT NULL;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN count(d) AS numberOfDeposits",
    "answer": "200",
    "id": "4e301b23-25bd-4d71-8fd0-4e11e8b8ebba"
  },
  {
    "query": "Count the number of loans per customer with ID 126.",
    "sql_command": "SELECT COUNT(*) AS loan_count FROM loans WHERE cus_id = 126;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWHERE c.customer_id = 126\nRETURN count(l) AS number_of_loans",
    "answer": "0",
    "id": "7c4837b5-77f3-447a-926c-7e9afebbff4f"
  },
  {
    "query": "Count the number of deposits with term between 6 and 12 months.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE tem LIKE '6M' OR tem LIKE '7M' OR tem LIKE '8M' OR tem LIKE '9M' OR tem LIKE '10M' OR tem LIKE '11M' OR tem LIKE '12M'",
    "cypher_command": "MATCH (d:Deposits)\nWHERE d.term >= '6' AND d.term <= '12'\nRETURN count(d) AS numberOfDeposits",
    "answer": "0",
    "id": "5c284af0-53aa-47f0-8f78-af9c35bb5176"
  },
  {
    "query": "What is the total balance of customers with both accounts and cards?",
    "sql_command": "SELECT SUM(acc.acc_bal) AS total_balance FROM accounts acc INNER JOIN cards crd ON acc.cus_id = crd.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts), (c)<-[:BELONGS_TO_CUSTOMER]-(k:Cards)\nRETURN SUM(a.account_balance) AS total_balance",
    "answer": "10284618.82",
    "id": "0df6c18f-163d-47d5-89e2-9a3b95113cfb"
  },
  {
    "query": "Count the number of loans per branch with ID 127.",
    "sql_command": "SELECT COUNT(*) AS loan_count FROM loans WHERE ln_id = '127' GROUP BY ln_type_id LIMIT 5;",
    "cypher_command": "MATCH (b:Branches {branch_id: 127})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN COUNT(l) AS numberOfLoansPerBranch",
    "answer": "0",
    "id": "ec8f33cc-71a0-4d01-9a16-e29ac49c4a69"
  },
  {
    "query": "Count the number of loans per loan type with ID 128.",
    "sql_command": "SELECT COUNT(*) AS loan_count, ln_type_id FROM loans WHERE ln_type_id = 128 GROUP BY ln_type_id;",
    "cypher_command": "MATCH (l:Loans)-[:HAS_LOAN_TYPE]->(lt:LoanTypes)\nWHERE lt.loan_type_id = 128\nRETURN COUNT(l) AS loan_count",
    "answer": "0",
    "id": "f8963a37-7d92-401b-97f0-361bd38abd69"
  },
  {
    "query": "Count the number of transactions per account with ID 130.",
    "sql_command": "SELECT COUNT(*) AS transaction_count FROM transactions WHERE acc_id = 130;",
    "cypher_command": "MATCH (a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE a.account_id = 130\nRETURN COUNT(t) AS transaction_count",
    "answer": "4",
    "id": "825ea22a-1dc3-4b5d-81b5-a49313294153"
  },
  {
    "query": "Count the number of loans per customer with ID 124.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE cus_id = 124;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWHERE c.customer_id = 124\nRETURN count(l) AS numberOfLoans",
    "answer": "0",
    "id": "b1b552ba-ff51-4e46-8d50-95d7223df9b0"
  },
  {
    "query": "Count the number of deposits per customer with ID 123.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE cus_id = 123;",
    "cypher_command": "MATCH (c:Customers {customer_id: 123})<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN count(d) AS number_of_deposits",
    "answer": "1",
    "id": "dd162f6d-d5d6-484a-9553-1b91a24f1921"
  },
  {
    "query": "Count the number of customers with cards and accounts.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) AS customer_count FROM accounts WHERE cus_id IN (SELECT cus_id FROM cards);",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts), (c)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "85",
    "id": "c0a4f1ff-957a-41f4-87d6-71b3e4de8c26"
  },
  {
    "query": "Count the number of deposits per branch with ID 129.",
    "sql_command": "SELECT COUNT(*) as deposit_count FROM deposits WHERE cus_id IN (SELECT id FROM customers WHERE brc = 129)",
    "cypher_command": "MATCH (b:Branches {branch_id: 129})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN COUNT(d) AS number_of_deposits",
    "answer": "0",
    "id": "c1f5ddc8-18f3-4d06-8bfe-fb6eaa1c5036"
  },
  {
    "query": "What is the total balance of accounts belonging to customers?",
    "sql_command": "SELECT SUM(acc_bal) AS total_balance FROM accounts;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN SUM(a.account_balance) AS total_balance",
    "answer": "13796040.49",
    "id": "dcda2e5d-d35e-4ebe-8f94-327140caad00"
  },
  {
    "query": "What is the number of expired loans linked to customers?",
    "sql_command": "SELECT COUNT(*) as expired_loans_count FROM loans WHERE ln_en_dt < CURRENT_DATE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWHERE date(l.end_date) < date()\nRETURN count(l) AS expired_loans_count",
    "answer": "12",
    "id": "08b47fa2-f7aa-4c73-a42b-01e114c36c12"
  },
  {
    "query": "Count the number of deposits with end date in the next 3 months.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE de_en_dt >= CURRENT_DATE AND de_en_dt < CURRENT_DATE + INTERVAL '3 months';",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits) WHERE d.end_date >= date() AND d.end_date < date() + duration('P3M') RETURN count(d) AS deposit_count",
    "answer": "4",
    "id": "88014337-d659-4499-8b20-c873e8631437"
  },
  {
    "query": "Count the number of customers with more than 2000 in deposits.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) FROM deposits WHERE bal > 2000;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWHERE d.balance > 2000\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "131",
    "id": "28b1f2d5-7078-4fa3-aae5-69be9d11cca0"
  },
  {
    "query": "What is the average number of accounts per customer?",
    "sql_command": "SELECT AVG(account_count) AS avg_accounts_per_customer FROM (SELECT cus_id, COUNT(*) AS account_count FROM accounts GROUP BY cus_id) AS account_counts;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts) WITH c, count(a) AS account_count RETURN AVG(account_count) AS average_accounts_per_customer",
    "answer": "1.9480519480519481",
    "id": "d5c598f1-1e90-4727-b25d-ef5693dcbb9a"
  },
  {
    "query": "Count the number of loans per loan type with ID 124.",
    "sql_command": "SELECT loan_types.ln_type, COUNT(loans.id) AS loan_count \nFROM loans\nJOIN loan_types ON loans.ln_type_id = loan_types.id\nWHERE loan_types.id = 124\nGROUP BY loan_types.ln_type;",
    "cypher_command": "MATCH (l:Loans)-[:HAS_LOAN_TYPE]->(lt:LoanTypes)\nWHERE lt.loan_type_id = 124\nRETURN COUNT(l) AS numberOfLoans",
    "answer": "0",
    "id": "b8bf7e3b-5e22-4b80-9336-fc5f086471fb"
  },
  {
    "query": "Count the number of deposits per branch with ID 128.",
    "sql_command": "SELECT COUNT(deposits.id) AS num_deposits \nFROM deposits \nJOIN customers ON deposits.cus_id = customers.id \nWHERE customers.brc = 128;",
    "cypher_command": "MATCH (b:Branches {branch_id: 128})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN COUNT(d) AS number_of_deposits",
    "answer": "0",
    "id": "ffc1d5a0-fdb5-4ea1-ba34-090643e8e24a"
  },
  {
    "query": "How many customers have accounts and cards?",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS customer_count \nFROM customers c\nJOIN accounts a ON c.id = a.cus_id\nJOIN cards ca ON c.id = ca.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts), (c)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "85",
    "id": "0297be39-9953-49ca-a8d5-cd7afe3c61b9"
  },
  {
    "query": "How many customers were born after 1990?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE cus_dob > '1990-12-31'",
    "cypher_command": "MATCH (c:Customers)\nWHERE date(c.date_of_birth) > date('1990-01-01')\nRETURN count(c) AS customers_born_after_1990",
    "answer": "75",
    "id": "401e9655-8a95-482e-86e5-eef9f190c0c1"
  },
  {
    "query": "Count the number of cards per customer with ID 125.",
    "sql_command": "SELECT COUNT(*) FROM cards WHERE cus_id = 125;",
    "cypher_command": "MATCH (c:Customers {customer_id: 125})<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN count(card) AS number_of_cards",
    "answer": "0",
    "id": "df1532e0-7c1c-4973-91e5-aaa2e5e97fb6"
  },
  {
    "query": "How many customers have last names starting with 'S'?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE cus_name LIKE 'S%';",
    "cypher_command": "MATCH (c:Customers)\nWHERE c.customer_name STARTS WITH 'S'\nRETURN COUNT(c) AS customer_count",
    "answer": "12",
    "id": "0b8554d3-5947-4f65-a07a-ec808ec794e6"
  },
  {
    "query": "Count the number of accounts per branch with ID 128.",
    "sql_command": "SELECT COUNT(a.id) AS account_count, b.brc FROM accounts a JOIN branches b ON a.id = b.id WHERE b.id = 128 GROUP BY b.brc;",
    "cypher_command": "MATCH (b:Branches {branch_id: 128})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN COUNT(a) AS account_count",
    "answer": "0",
    "id": "00767fb6-3c82-41f3-be6b-e21c61958916"
  },
  {
    "query": "What is the total number of transactions for customers who have cards?",
    "sql_command": "SELECT COUNT(t.id) AS total_transactions\nFROM transactions t\nJOIN accounts a ON t.acc_id = a.id\nJOIN customers c ON a.cus_id = c.id\nWHERE c.id IN (SELECT cus_id FROM cards);",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions) \nMATCH (c)<-[:BELONGS_TO_CUSTOMER]-(k:Cards) \nRETURN COUNT(t) AS total_transactions",
    "answer": "763",
    "id": "84a35c4b-4e48-455e-bfa9-63a7adcb72ad"
  },
  {
    "query": "Count the number of loans per loan type with ID 126.",
    "sql_command": "SELECT lt.id AS loan_type_id, lt.ln_type, COUNT(*) AS loan_count\nFROM loans l\nJOIN loan_types lt ON l.ln_type_id = lt.id\nWHERE l.ln_type_id = 126\nGROUP BY lt.id, lt.ln_type\nLIMIT 5;",
    "cypher_command": "MATCH (lt:LoanTypes)<-[:HAS_LOAN_TYPE]-(l:Loans)\nWHERE lt.loan_type_id = 126\nRETURN COUNT(l) AS numberOfLoans",
    "answer": "0",
    "id": "66fb3c83-b4c7-4dd6-a00d-942cbe4a2447"
  },
  {
    "query": "What is the total balance of accounts belonging to customers who also have a deposit?",
    "sql_command": "SELECT SUM(acc.acc_bal) as total_balance FROM accounts acc JOIN deposits dep ON acc.cus_id = dep.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN SUM(a.account_balance) AS total_balance",
    "answer": "13475209.41",
    "id": "88662d44-c546-45a5-80b0-f0e77b7353e3"
  },
  {
    "query": "How many accounts were opened before 2015?",
    "sql_command": "SELECT COUNT(*) FROM accounts WHERE created_at < '2015-01-01'",
    "cypher_command": "MATCH (a:Accounts)\nWHERE date(a.created_at) < date('2015-01-01')\nRETURN count(a) AS accounts_opened_before_2015",
    "answer": "0",
    "id": "124f09f7-7c8f-4cac-9793-27eed2d9b570"
  },
  {
    "query": "Count the number of accounts per branch with ID 125.",
    "sql_command": "SELECT b.id, COUNT(a.id) AS account_count \nFROM branches b \nJOIN customers c ON b.id = c.brc \nJOIN accounts a ON c.id = a.cus_id \nWHERE b.id = 125 \nGROUP BY b.id;",
    "cypher_command": "MATCH (b:Branches {branch_id: 125})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN COUNT(a) AS account_count",
    "answer": "0",
    "id": "2dd695da-e084-4f42-ad92-fc62ac79f5d2"
  },
  {
    "query": "Count the number of cards expiring before 2025 per customer.",
    "sql_command": "SELECT cus_id, COUNT(*) AS card_count \nFROM cards \nWHERE card_exp_date < '2025-01-01' \nGROUP BY cus_id \nLIMIT 5;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWHERE date(card.expiration_date) < date('2025-01-01')\nRETURN c.customer_id, COUNT(card) AS expiring_cards_count",
    "answer": "[]",
    "id": "b5be4e38-6bf1-47cc-afe3-771105e6ac38"
  },
  {
    "query": "Count the number of customers with more than two deposits.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) AS customer_count\nFROM deposits\nWHERE cus_id IN (SELECT cus_id FROM deposits GROUP BY cus_id HAVING COUNT(id) > 2);",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWITH c, COUNT(d) AS depositCount\nWHERE depositCount > 2\nRETURN COUNT(c) AS customerCount",
    "answer": "11",
    "id": "d0c1812e-0e1d-468d-a440-fd8ee631047a"
  },
  {
    "query": "Count the number of loans per loan type with ID 127.",
    "sql_command": "SELECT lt.ln_type, COUNT(l.id) AS number_of_loans \nFROM loans l \nJOIN loan_types lt ON l.ln_type_id = lt.id \nWHERE l.ln_type_id = 127 \nGROUP BY lt.ln_type;",
    "cypher_command": "MATCH (lt:LoanTypes)<-[:HAS_LOAN_TYPE]-(l:Loans)\nWHERE lt.loan_type_id = 127\nRETURN lt.type AS LoanType, COUNT(l) AS LoanCount",
    "answer": "[]",
    "id": "fd94cbc6-3453-42d9-beaa-2ccd074449d5"
  },
  {
    "query": "Count the number of customers with loans and accounts.",
    "sql_command": "SELECT COUNT(DISTINCT a.cus_id) AS customer_count\nFROM accounts a\nJOIN loans l ON a.cus_id = l.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nMATCH (c)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "101",
    "id": "5f63a262-c056-492e-84e8-b18f349d3ba7"
  },
  {
    "query": "Count the number of loans with balance above average per loan type.",
    "sql_command": "SELECT lt.ln_type, COUNT(l.id) AS num_loans_above_avg\nFROM loans l\nJOIN loan_types lt ON l.ln_type_id = lt.id\nGROUP BY lt.id, lt.ln_type\nHAVING AVG(l.bal) < (SELECT AVG(l2.bal) FROM loans l2 WHERE l2.ln_type_id = lt.id)\nLIMIT 5;",
    "cypher_command": "MATCH (l:Loans)\nWITH AVG(l.balance) AS avg_balance\nMATCH (l:Loans)\nWHERE l.balance > avg_balance\nWITH l.loan_type_id AS loan_type_id, COUNT(l) AS loan_count\nRETURN loan_type_id, loan_count",
    "answer": "[{\"loan_type_id\":10,\"loan_count\":\"11\"},{\"loan_type_id\":7,\"loan_count\":\"11\"},{\"loan_type_id\":8,\"loan_count\":\"10\"},{\"loan_type_id\":3,\"loan_count\":\"8\"},{\"loan_type_id\":5,\"loan_count\":\"12\"},{\"loan_type_id\":4,\"loan_count\":\"14\"},{\"loan_type_id\":1,\"loan_count\":\"10\"},{\"loan_type_id\":6,\"loan_count\":\"6\"},{\"loan_type_id\":9,\"loan_count\":\"8\"},{\"loan_type_id\":2,\"loan_count\":\"8\"}]",
    "id": "7968421f-ec88-4ae0-be83-98afc42a78fd"
  },
  {
    "query": "What is the number of loans with interest rate greater than 10% for customers with deposits?",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE interest > 10.0 AND cus_id IN (SELECT DISTINCT cus_id FROM deposits);",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWHERE l.interest_rate > 10\nRETURN count(l) AS numberOfLoans",
    "answer": "0",
    "id": "8f76d541-7671-4349-9968-4540b1e43815"
  },
  {
    "query": "Count the number of cards per customer with ID 127.",
    "sql_command": "SELECT COUNT(*) FROM cards WHERE cus_id = 127;",
    "cypher_command": "MATCH (c:Customers {customer_id: 127})<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN count(card) AS number_of_cards",
    "answer": "1",
    "id": "68f502f5-3dd4-44b7-b5e1-48b801cb8afd"
  },
  {
    "query": "Count the number of customers with more than three deposits.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) AS customer_count FROM deposits GROUP BY cus_id HAVING COUNT(id) > 3;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWITH c, COUNT(d) AS depositCount\nWHERE depositCount > 3\nRETURN COUNT(c) AS customerCount",
    "answer": "5",
    "id": "779e911c-e521-42c1-81ee-39b9036ebd4b"
  },
  {
    "query": "Count the number of customers with more than one deposit.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) FROM deposits GROUP BY cus_id HAVING COUNT(id) > 1;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWITH c, COUNT(d) AS depositCount\nWHERE depositCount > 1\nRETURN COUNT(c) AS customerCount",
    "answer": "52",
    "id": "1a6a7049-f7df-4458-a6ab-2a7c4258ea5c"
  },
  {
    "query": "Count the number of deposits per customer with ID 126.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE cus_id = 126;",
    "cypher_command": "MATCH (c:Customers {customer_id: 126})<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN count(d) AS number_of_deposits",
    "answer": "0",
    "id": "441f8962-17c1-490c-a570-c1a72e3c3e70"
  },
  {
    "query": "Count the number of loans with interest rate between 2% and 4%.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE interest BETWEEN 0.02 AND 0.04;",
    "cypher_command": "MATCH (l:Loans)\nWHERE l.interest_rate >= 2 AND l.interest_rate <= 4\nRETURN COUNT(l) AS loan_count",
    "answer": "45",
    "id": "9c3e89fc-9e5a-42ab-9381-90106df09ef0"
  },
  {
    "query": "What is the number of active loans linked to customers?",
    "sql_command": "SELECT COUNT(*) as active_loan_count FROM loans WHERE ln_en_dt IS NULL;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN count(l) AS active_loans_count",
    "answer": "200",
    "id": "ba971bfd-8bc2-4490-be67-423d13f8d6a0"
  },
  {
    "query": "What is the number of expired deposits linked to customers?",
    "sql_command": "SELECT COUNT(*) AS expired_deposits_count FROM deposits WHERE de_en_dt < CURRENT_DATE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWHERE date(d.end_date) < date()\nRETURN count(d) AS expired_deposits_count",
    "answer": "0",
    "id": "1ea8fa8f-265b-4b3b-9e0c-5cbc7e3a7a85"
  },
  {
    "query": "Count the number of cards per customer with ID 124.",
    "sql_command": "SELECT COUNT(*) FROM cards WHERE cus_id = 124;",
    "cypher_command": "MATCH (c:Customers {customer_id: 124})<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN count(card) AS number_of_cards",
    "answer": "2",
    "id": "ad83765b-f45d-4423-b4b0-302e8243f996"
  },
  {
    "query": "Count the number of deposits with start date after 2023.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE de_st_dt > '2023-12-31';",
    "cypher_command": "MATCH (d:Deposits)\nWHERE date(d.start_date) > date({ year: 2023, month: 1, day: 1 })\nRETURN count(d) AS numberOfDeposits",
    "answer": "200",
    "id": "aaac5341-0d12-409d-bd3a-f08f2263722b"
  },
  {
    "query": "How many transactions were made in accounts with balance greater than 5000?",
    "sql_command": "SELECT COUNT(*) \nFROM transactions \nJOIN accounts ON transactions.acc_id = accounts.id \nWHERE accounts.acc_bal > 5000;",
    "cypher_command": "MATCH (a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE a.account_balance > 5000\nRETURN count(t) AS transaction_count",
    "answer": "875",
    "id": "c8be4fda-00f9-416e-a32e-67099e483504"
  },
  {
    "query": "What is the total transaction amount of customers with deposits?",
    "sql_command": "SELECT SUM(t.tran_amt) AS total_transaction_amount FROM transactions t JOIN accounts a ON t.acc_id = a.id JOIN deposits d ON a.cus_id = d.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN SUM(t.transaction_amount) AS total_transaction_amount",
    "answer": "269906.81",
    "id": "6c3eb79d-405c-4ff0-9caf-9a0fff7b3698"
  },
  {
    "query": "What is the total loan balance of customers who also have deposits?",
    "sql_command": "SELECT SUM(loans.bal) AS total_loan_balance\nFROM customers\nJOIN deposits ON customers.id = deposits.cus_id\nJOIN loans ON customers.id = loans.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits), (c)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN SUM(l.balance) AS total_loan_balance",
    "answer": "-5932854.47",
    "id": "1150dc61-f0fb-4ec4-8868-c5cff95ef23c"
  },
  {
    "query": "Count the number of customers with accounts created in 2023.",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE EXTRACT(YEAR FROM created_at) = 2023;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nWHERE date(a.created_at) >= date({ year: date().year, month: 1, day: 1 })\nRETURN count(c) AS customer_count",
    "answer": "300",
    "id": "2fea290e-fd49-4720-8b78-56926c0c4513"
  },
  {
    "query": "Count the number of transactions with amount greater than average transaction amount.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE tran_amt > (SELECT AVG(tran_amt) FROM transactions);",
    "cypher_command": "MATCH (t:Transactions)\nWITH AVG(t.transaction_amount) AS avg_amount\nMATCH (t:Transactions)\nWHERE t.transaction_amount > avg_amount\nRETURN COUNT(t) AS transaction_count",
    "answer": "513",
    "id": "daaa5dfd-da53-4e66-b015-418ddd85bf14"
  },
  {
    "query": "How many loans are active in the bank?",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE ln_en_dt IS NULL OR ln_en_dt > CURRENT_DATE;",
    "cypher_command": "MATCH (l:Loans)\nWHERE l.end_date IS NULL\nRETURN count(l) AS active_loans",
    "answer": "188",
    "id": "6b5b474b-dfb6-4906-b6c3-79755c67fc3e"
  },
  {
    "query": "Count the number of transactions per deposit type with ID 124.",
    "sql_command": "SELECT dt.de_type, COUNT(t.id) as transaction_count\nFROM transactions t\nJOIN deposits d ON t.acc_id = d.id\nJOIN deposit_types dt ON d.de_type_id = dt.id\nWHERE d.de_type_id = 124\nGROUP BY dt.de_type\nLIMIT 5;",
    "cypher_command": "MATCH (d:Deposits)<-[:BELONGS_TO_CUSTOMER]-(c:Customers)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE d.deposit_type_id = 124\nRETURN COUNT(t) AS transaction_count",
    "answer": "0",
    "id": "773480c4-2d77-428b-bf59-14ff1548509f"
  },
  {
    "query": "Count the number of cards per customer with ID 128.",
    "sql_command": "SELECT COUNT(*) FROM cards WHERE cus_id = 128;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWHERE c.customer_id = 128\nRETURN count(card) AS numberOfCards",
    "answer": "1",
    "id": "7770c2a0-9020-42f8-b36b-2fbdcbf65dcc"
  },
  {
    "query": "How many loans were approved in 2022?",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE EXTRACT(YEAR FROM ln_st_dt) = 2022;",
    "cypher_command": "MATCH (l:Loans)\nWHERE date(l.created_at) >= date({ year: 2022, month: 1, day: 1 }) AND date(l.created_at) < date({ year: 2023, month: 1, day: 1 })\nRETURN count(l) AS approved_loans_2022",
    "answer": "0",
    "id": "64602413-ea9d-4e89-ae8f-7afc2ecca882"
  },
  {
    "query": "Count the number of cards per branch with ID 124.",
    "sql_command": "SELECT COUNT(cards.id) AS card_count FROM cards JOIN customers ON cards.cus_id = customers.id WHERE customers.brc = 124;",
    "cypher_command": "MATCH (b:Branches {branch_id: 124})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(card) AS numberOfCardsPerBranch",
    "answer": "0",
    "id": "dc6c976b-5035-4aee-9c56-88e3879a7e6d"
  },
  {
    "query": "How many transactions have been recorded?",
    "sql_command": "SELECT COUNT(*) AS total_transactions FROM transactions;",
    "cypher_command": "MATCH (t:Transactions)\nRETURN count(t) AS total_transactions",
    "answer": "1000",
    "id": "6fefdeaa-e337-43a4-8613-dd94713d7e8a"
  },
  {
    "query": "What is the number of customers who own accounts, loans, and deposits?",
    "sql_command": "SELECT COUNT(DISTINCT c.id) as customer_count FROM customers c JOIN accounts a ON c.id = a.cus_id JOIN loans l ON c.id = l.cus_id JOIN deposits d ON c.id = d.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts),\n      (c)<-[:BELONGS_TO_CUSTOMER]-(l:Loans),\n      (c)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN COUNT(DISTINCT c) AS numberOfCustomers",
    "answer": "70",
    "id": "e89e4efd-bde4-4911-853f-af68e997e844"
  },
  {
    "query": "Count the number of transactions updated in the last week.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE updated_at >= NOW() - INTERVAL '7 days';",
    "cypher_command": "MATCH (t:Transactions)\nWHERE date(t.updated_at) >= date({ year: date().year, month: date().month, day: date().day - 7 })\nRETURN count(t) AS updated_transactions_last_week",
    "answer": "1000",
    "id": "6b24e36c-62aa-4f6d-92e3-427b1e9b0a3e"
  },
  {
    "query": "Count the number of deposits per deposit type with ID 126.",
    "sql_command": "SELECT dt.de_type, COUNT(d.id) as number_of_deposits\nFROM deposits d\nJOIN deposit_types dt ON d.de_type_id = dt.id\nWHERE d.de_type_id = 126\nGROUP BY dt.de_type\nLIMIT 5;",
    "cypher_command": "MATCH (d:Deposits)<-[:BELONGS_TO_CUSTOMER]-(c:Customers)-[:HAS_DEPOSIT_TYPE]->(dt:DepositTypes)\nWHERE dt.deposit_type_id = 126\nRETURN COUNT(d) AS numberOfDeposits",
    "answer": "0",
    "id": "13ecd21c-fca2-4a65-b9bb-7921bd04caba"
  },
  {
    "query": "What is the number of customers who own both a loan and an account with balance greater than 10000?",
    "sql_command": "SELECT COUNT(DISTINCT accounts.cus_id) AS customer_count\nFROM accounts\nJOIN loans ON accounts.cus_id = loans.cus_id\nWHERE accounts.acc_bal > 10000;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans), (c)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nWHERE a.account_balance > 10000\nRETURN COUNT(DISTINCT c) AS number_of_customers",
    "answer": "92",
    "id": "ccf3c47e-cfd7-42e4-b9f1-fbe724f09787"
  },
  {
    "query": "What is the total loan balance for customers with active deposits?",
    "sql_command": "SELECT SUM(loans.bal) as total_loan_balance\nFROM loans\nJOIN deposits ON loans.cus_id = deposits.cus_id\nWHERE deposits.de_en_dt IS NULL;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN SUM(l.balance) AS total_loan_balance",
    "answer": "0",
    "id": "ce0c9dc9-cabf-436f-9bca-5ef7b6ecab66"
  },
  {
    "query": "Count the number of deposits per deposit type with ID 124.",
    "sql_command": "SELECT dt.de_type, COUNT(d.id) AS deposit_count \nFROM deposits d\nJOIN deposit_types dt ON d.de_type_id = dt.id\nWHERE d.de_type_id = 124\nGROUP BY dt.de_type\nLIMIT 5;",
    "cypher_command": "MATCH (d:Deposits)-[:HAS_DEPOSIT_TYPE]->(dt:DepositTypes)\nWHERE dt.deposit_type_id = 124\nRETURN COUNT(d) AS numberOfDeposits",
    "answer": "0",
    "id": "6c696819-5f91-417c-b701-c46c75f7d2f0"
  },
  {
    "query": "What is the number of customers who own both accounts and cards?",
    "sql_command": "SELECT COUNT(DISTINCT accounts.cus_id) AS num_customers_with_accounts_and_cards\nFROM accounts\nJOIN cards ON accounts.cus_id = cards.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts), (c)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(DISTINCT c) AS numberOfCustomers",
    "answer": "85",
    "id": "a7b34aaa-e2c2-42f5-8ecf-01be4b572ef4"
  },
  {
    "query": "Count the total number of unique customers with loans.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) AS unique_customer_count FROM loans;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN COUNT(DISTINCT c.customer_id) AS unique_customers_with_loans",
    "answer": "126",
    "id": "bfcabe8e-009e-4870-a6dd-3c1ce5207f86"
  },
  {
    "query": "Count the total number of unique customers with cards.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) AS unique_customers_with_cards FROM cards;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(DISTINCT c.customer_id) AS unique_customers_with_cards",
    "answer": "106",
    "id": "3278c2e1-07b5-415a-990d-436029dc7cb6"
  },
  {
    "query": "Count the number of loans per loan type with ID 129.",
    "sql_command": "SELECT l.ln_type_id, lt.ln_type, COUNT(*) AS loan_count FROM loans l JOIN loan_types lt ON l.ln_type_id = lt.id WHERE l.ln_type_id = 129 GROUP BY l.ln_type_id, lt.ln_type LIMIT 5;",
    "cypher_command": "MATCH (l:Loans)-[:HAS_LOAN_TYPE]->(lt:LoanTypes)\nWHERE lt.loan_type_id = 129\nRETURN COUNT(l) AS numberOfLoans",
    "answer": "0",
    "id": "725c07b5-f5b4-449b-8ec5-8b8a28a44c02"
  },
  {
    "query": "How many deposits exist in the bank?",
    "sql_command": "SELECT COUNT(*) AS total_deposits FROM deposits;",
    "cypher_command": "MATCH (d:Deposits)\nRETURN count(d) AS total_deposits",
    "answer": "200",
    "id": "4edd026e-cb19-4c1d-acb2-c265f4d934b4"
  },
  {
    "query": "Count the number of transactions per customer with ID 126.",
    "sql_command": "SELECT COUNT(t.id) AS transaction_count FROM transactions t JOIN accounts a ON t.acc_id = a.id WHERE a.cus_id = 126;",
    "cypher_command": "MATCH (c:Customers {customer_id: 126})<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN COUNT(t) AS transaction_count",
    "answer": "4",
    "id": "75712724-9760-4de7-89da-d9e1a20dba0a"
  },
  {
    "query": "What is the number of active deposits linked to customers?",
    "sql_command": "SELECT COUNT(*) AS active_deposits_count\nFROM deposits\nWHERE de_en_dt IS NULL OR de_en_dt > CURRENT_DATE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWHERE d.end_date IS NULL OR d.end_date >= date()\nRETURN count(d) AS active_deposits",
    "answer": "200",
    "id": "83c317ad-7088-4b66-81c7-54512c025ea1"
  },
  {
    "query": "What is the total transaction amount for customers with unblocked cards?",
    "sql_command": "SELECT SUM(t.tran_amt) AS total_transaction_amount \nFROM transactions t\nJOIN cards c ON t.acc_id = c.id\nWHERE c.is_blocked = FALSE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards {is_blocked: false})<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN SUM(t.transaction_amount) AS total_transaction_amount",
    "answer": "92449.51",
    "id": "2cfe29f5-b2b8-4ec1-ab32-378c38c60d42"
  },
  {
    "query": "Count the number of deposits per branch with ID 126.",
    "sql_command": "SELECT COUNT(deposits.id) AS deposit_count FROM deposits JOIN customers ON deposits.cus_id = customers.id WHERE customers.brc = 126;",
    "cypher_command": "MATCH (b:Branches {branch_id: 126})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN COUNT(d) AS number_of_deposits_per_branch",
    "answer": "0",
    "id": "3767abbc-8e65-4b4d-a688-da5b732f7870"
  },
  {
    "query": "How many transactions were made by customers with blocked cards?",
    "sql_command": "SELECT COUNT(t.id) AS blocked_card_transactions_count\nFROM transactions t\nJOIN accounts a ON t.acc_id = a.id\nJOIN cards c ON a.cus_id = c.cus_id\nWHERE c.is_blocked = TRUE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards {is_blocked: true})<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN count(t) AS blocked_card_transactions",
    "answer": "353",
    "id": "194ab387-9924-40b4-9b75-8777d4c0c5eb"
  },
  {
    "query": "Count the number of deposits per customer with ID 124.",
    "sql_command": "SELECT COUNT(*) AS deposit_count FROM deposits WHERE cus_id = 124;",
    "cypher_command": "MATCH (c:Customers {customer_id: 124})<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN count(d) AS number_of_deposits",
    "answer": "2",
    "id": "80c4e4b7-402d-41e4-9d39-a967e81949e4"
  },
  {
    "query": "Count the number of accounts with transactions in the last 15 days.",
    "sql_command": "SELECT COUNT(DISTINCT acc_id) FROM transactions WHERE tran_dt >= NOW() - INTERVAL '15 days';",
    "cypher_command": "MATCH (a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE date(t.transaction_date) >= date() - duration('P15D')\nRETURN count(DISTINCT a) AS account_count",
    "answer": "9",
    "id": "3ab3eaf6-072c-4eb1-9cd9-1ec34aa834ef"
  },
  {
    "query": "Count the number of transactions per account with ID 127.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE acc_id = 127;",
    "cypher_command": "MATCH (a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE a.account_id = 127\nRETURN COUNT(t) AS transaction_count",
    "answer": "2",
    "id": "dac61d45-f0f3-4d45-b486-de4d57220b83"
  },
  {
    "query": "What is the total loan balance for customers with expired cards?",
    "sql_command": "SELECT SUM(loans.bal) as total_loan_balance \nFROM loans \nJOIN cards ON loans.cus_id = cards.cus_id \nWHERE cards.card_exp_date < CURRENT_DATE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nMATCH (c)<-[:BELONGS_TO_CUSTOMER]-(loan:Loans)\nWHERE date(card.expiration_date) < date()\nRETURN SUM(loan.balance) AS total_loan_balance",
    "answer": "0",
    "id": "772e7071-322b-4c97-893c-5e6297df8962"
  },
  {
    "query": "Count the number of accounts per branch with ID 130.",
    "sql_command": "SELECT branches.brc, COUNT(accounts.id) as account_count \nFROM accounts \nJOIN customers ON accounts.cus_id = customers.id \nJOIN branches ON customers.brc = branches.id \nWHERE branches.id = 130 \nGROUP BY branches.brc LIMIT 5;",
    "cypher_command": "MATCH (b:Branches {branch_id: 130})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN COUNT(a) AS account_count",
    "answer": "0",
    "id": "e730faf5-149a-44e6-bd4c-b9d1a85bed1e"
  },
  {
    "query": "How many transactions are above 1000?",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE tran_amt > 1000;",
    "cypher_command": "MATCH (t:Transactions)\nWHERE t.transaction_amount > 1000\nRETURN count(t) AS transactions_above_1000",
    "answer": "430",
    "id": "19a0f958-f1ec-44fc-81c2-2a87de9d70ff"
  },
  {
    "query": "Count the number of customers with accounts and loans.",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS customer_count FROM customers c JOIN accounts a ON c.id = a.cus_id JOIN loans l ON c.id = l.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nMATCH (c)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "101",
    "id": "f0ffcc51-4b85-461f-8e11-c49a2fe114d4"
  },
  {
    "query": "Count the number of transactions per deposit type with ID 127.",
    "sql_command": "SELECT dt.de_type, COUNT(t.id) AS transaction_count \nFROM transactions t \nJOIN deposits d ON t.acc_id = d.id \nJOIN deposit_types dt ON d.de_type_id = dt.id \nWHERE d.de_type_id = 127 \nGROUP BY dt.de_type \nLIMIT 5;",
    "cypher_command": "MATCH (d:Deposits)-[:HAS_DEPOSIT_TYPE]->(dt:DepositTypes {deposit_type_id: 127})<-[:BELONGS_TO_CUSTOMER]-(c:Customers)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN COUNT(t) AS transaction_count",
    "answer": "0",
    "id": "8a4a6bd1-dad7-4d5d-a71e-d3c54be7af88"
  },
  {
    "query": "How many transactions exist for each branch?",
    "sql_command": "SELECT branches.brc, COUNT(transactions.id) AS total_transactions\nFROM transactions\nJOIN accounts ON transactions.acc_id = accounts.id\nJOIN customers ON accounts.cus_id = customers.id\nJOIN branches ON customers.brc = branches.id\nGROUP BY branches.brc\nORDER BY total_transactions DESC\nLIMIT 5;",
    "cypher_command": "MATCH (b:Branches)<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions) WITH b.branch_id AS branch_id, COUNT(t) AS transaction_count RETURN branch_id, transaction_count",
    "answer": "[280, 272, 268, 180]",
    "id": "9cb4c340-b228-4ae8-8d2d-9d35f7c75261"
  },
  {
    "query": "Count the number of customers with more than one account.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) FROM accounts GROUP BY cus_id HAVING COUNT(acc_num) > 1;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nWITH c, COUNT(a) AS accountCount\nWHERE accountCount > 1\nRETURN COUNT(c) AS customerCount",
    "answer": "86",
    "id": "56116f96-5da4-45dd-804f-338064aa79b8"
  },
  {
    "query": "Count the number of deposits per deposit type with ID 123.",
    "sql_command": "SELECT dt.de_type, COUNT(d.id) AS deposit_count \nFROM deposits d \nJOIN deposit_types dt ON d.de_type_id = dt.id \nWHERE d.de_type_id = 123 \nGROUP BY dt.de_type \nLIMIT 5;",
    "cypher_command": "MATCH (d:Deposits)<-[:BELONGS_TO_CUSTOMER]-(c:Customers)-[:HAS_DEPOSIT_TYPE]->(dt:DepositTypes)\nWHERE dt.deposit_type_id = 123\nRETURN COUNT(d) AS deposit_count",
    "answer": "0",
    "id": "a120b283-9143-4c31-bd3b-73daf485cad4"
  },
  {
    "query": "How many customers have zip codes starting with '90'?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE cus_addr LIKE '90%';",
    "cypher_command": "MATCH (c:Customers)\nWHERE c.address STARTS WITH '90'\nRETURN COUNT(c) AS customer_count",
    "answer": "2",
    "id": "1c09856d-78b9-4132-805c-54e3c8385859"
  },
  {
    "query": "Count the number of loans per customer with ID 125.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE cus_id = 125;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWHERE c.customer_id = 125\nRETURN count(l) AS numberOfLoans",
    "answer": "0",
    "id": "38663cca-623a-499b-acb6-199ff789e641"
  },
  {
    "query": "Count the number of loans per customer with ID 129.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE cus_id = 129;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWHERE c.customer_id = 129\nRETURN COUNT(l) AS numberOfLoans",
    "answer": "0",
    "id": "7e4f10ee-131c-4a0f-8a58-a009ce75f8e3"
  },
  {
    "query": "How many accounts are registered in the bank?",
    "sql_command": "SELECT COUNT(*) AS total_accounts FROM accounts",
    "cypher_command": "MATCH (a:Accounts)\nRETURN count(a) AS total_accounts",
    "answer": "300",
    "id": "2a97ffb6-d83f-4846-aa32-ec8e04650a2d"
  },
  {
    "query": "Count the number of loans per customer with ID 123.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE cus_id = 123;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWHERE c.customer_id = 123\nRETURN count(l) AS number_of_loans",
    "answer": "1",
    "id": "bb3ec5db-486c-4713-bc4a-20c62a268b96"
  },
  {
    "query": "Count the number of customers with transactions in 2024.",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS customer_count_2024\nFROM customers c\nJOIN accounts a ON c.id = a.cus_id\nJOIN transactions t ON a.id = t.acc_id\nWHERE EXTRACT(YEAR FROM t.tran_dt) = 2024;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE date(t.transaction_date) >= date({ year: 2024, month: 1, day: 1 }) AND date(t.transaction_date) < date({ year: 2025, month: 1, day: 1 })\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "104",
    "id": "e0a766e7-b3cb-497b-8044-5382d1b77aa8"
  },
  {
    "query": "Count the number of loans with balance above average loan balance.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE bal < (SELECT AVG(bal) FROM loans);",
    "cypher_command": "MATCH (l:Loans)\nWITH AVG(l.balance) AS average_balance\nMATCH (l:Loans)\nWHERE l.balance > average_balance\nRETURN COUNT(l) AS loans_above_average_balance",
    "answer": "102",
    "id": "ce497c31-9dfb-4090-912d-65bc62b8cff1"
  },
  {
    "query": "How many branches are located in New York?",
    "sql_command": "SELECT COUNT(*) FROM branches WHERE brc_address LIKE '%New York%'",
    "cypher_command": "MATCH (b:Branches)\nWHERE b.branch_address CONTAINS 'New York'\nRETURN COUNT(b) AS number_of_branches",
    "answer": "0",
    "id": "cbadd048-8f9c-46ef-abc5-a17c3add32fb"
  },
  {
    "query": "Count the number of deposits with start date after 2022.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE de_st_dt > '2022-01-01';",
    "cypher_command": "MATCH (d:Deposits)\nWHERE date(d.start_date) > date('2022-12-31')\nRETURN count(d) AS numberOfDeposits",
    "answer": "200",
    "id": "2f771eb5-f90b-4a18-aabd-72376f474617"
  },
  {
    "query": "Count the number of deposits per customer with ID 128.",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE cus_id = 128;",
    "cypher_command": "MATCH (c:Customers {customer_id: 128})<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN count(d) AS number_of_deposits",
    "answer": "1",
    "id": "785a55f2-f844-4054-b4d2-a4c9462e5b86"
  },
  {
    "query": "How many accounts were opened after 2020?",
    "sql_command": "SELECT COUNT(*) FROM accounts WHERE created_at > '2020-12-31';",
    "cypher_command": "MATCH (a:Accounts)\nWHERE date(a.created_at) > date({ year: 2020, month: 12, day: 31 })\nRETURN count(a) AS accounts_opened_after_2020",
    "answer": "300",
    "id": "e799ddb7-0860-4504-89b3-3094399d8b6d"
  },
  {
    "query": "Count the total number of unique customers with accounts.",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) AS unique_customers_with_accounts FROM accounts;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)\nRETURN COUNT(DISTINCT c.customer_id) AS unique_customers_with_accounts",
    "answer": "154",
    "id": "2b40d32e-6dce-475c-8b87-38713f01a145"
  },
  {
    "query": "Count the number of transactions per account with ID 125.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE acc_id = 125;",
    "cypher_command": "MATCH (a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE a.account_id = 125\nRETURN COUNT(t) AS transaction_count",
    "answer": "1",
    "id": "57ee602e-6f01-4ba3-883b-b0bae1b3864e"
  },
  {
    "query": "Count the number of transactions per customer with ID 129.",
    "sql_command": "SELECT COUNT(t.id) AS transaction_count FROM transactions t JOIN accounts a ON t.acc_id = a.id WHERE a.cus_id = 129;",
    "cypher_command": "MATCH (c:Customers {customer_id: 129})<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN COUNT(t) AS transaction_count",
    "answer": "6",
    "id": "d02b45e7-48a3-4237-850d-6699b9eab909"
  },
  {
    "query": "Count the number of deposits per deposit type with ID 127.",
    "sql_command": "SELECT dt.de_type, COUNT(d.id) AS deposit_count \nFROM deposits d\nJOIN deposit_types dt ON d.de_type_id = dt.id\nWHERE d.de_type_id = 127\nGROUP BY dt.de_type\nLIMIT 5;",
    "cypher_command": "MATCH (d:Deposits)-[:HAS_DEPOSIT_TYPE]->(dt:DepositTypes)\nWHERE dt.deposit_type_id = 127\nRETURN COUNT(d) AS numberOfDeposits",
    "answer": "0",
    "id": "16d4f6df-ac18-4b96-ac78-a8bb1ec14463"
  },
  {
    "query": "Count the number of deposits with balance below 1000 per customer.",
    "sql_command": "SELECT cus_id, COUNT(*) AS deposit_count \nFROM deposits \nWHERE bal < 1000 \nGROUP BY cus_id \nLIMIT 5;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWHERE d.balance < 1000\nRETURN c.customer_id, COUNT(d) AS deposit_count",
    "answer": "[42, 64, 157]",
    "id": "3454a178-9530-46ee-8699-9d2ea68fdc65"
  },
  {
    "query": "How many loans have a balance equal to 0?",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE bal = 0",
    "cypher_command": "MATCH (l:Loans)\nWHERE l.balance = 0\nRETURN count(l) AS zero_balance_loans",
    "answer": "0",
    "id": "6e21d16a-0b3b-4a79-9684-c21f41e9c34c"
  },
  {
    "query": "How many customers live in Texas?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE cus_addr LIKE '%TX%' OR cus_addr LIKE '%Texas%'",
    "cypher_command": "MATCH (c:Customers)\nWHERE c.address CONTAINS 'Texas'\nRETURN count(c) AS numberOfCustomersInTexas",
    "answer": "3",
    "id": "82b55269-af5c-4673-8093-103e2b498ba7"
  },
  {
    "query": "Count the number of loans with end date before 2024.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE ln_en_dt < '2024-01-01';",
    "cypher_command": "MATCH (l:Loans)\nWHERE date(l.end_date) < date('2024-01-01')\nRETURN count(l) AS numberOfLoans",
    "answer": "0",
    "id": "9f763b93-7af8-4659-ba7c-0b588ed69ec8"
  },
  {
    "query": "Count the number of deposits per branch with ID 125.",
    "sql_command": "SELECT COUNT(d.id) AS deposit_count\nFROM deposits d\nJOIN customers c ON d.cus_id = c.id\nWHERE c.brc = 125;",
    "cypher_command": "MATCH (b:Branches {branch_id: 125})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN COUNT(d) AS numberOfDeposits",
    "answer": "0",
    "id": "d00a671c-5a60-4a4f-b1c3-bcf440d75417"
  },
  {
    "query": "Count the number of deposits with balance below 500 per customer.",
    "sql_command": "SELECT cus_id, COUNT(*) as deposit_count \nFROM deposits\nWHERE bal < 500\nGROUP BY cus_id\nLIMIT 5;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nWHERE d.balance < 500\nRETURN c.customer_id, COUNT(d) AS deposit_count",
    "answer": "[64, 42]",
    "id": "2d52cfa2-c858-4c00-bdf9-ad390b3f5496"
  },
  {
    "query": "Count the number of customers with cards and loans.",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS num_customers_with_cards_and_loans\nFROM customers c\nJOIN cards ca ON c.id = ca.cus_id\nJOIN loans l ON c.id = l.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans), (c)<-[:BELONGS_TO_CUSTOMER]-(ca:Cards)\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "70",
    "id": "aab74d05-9269-414e-b4fc-d6b58cea4ef8"
  },
  {
    "query": "How many customers have accounts and transactions?",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS num_customers_with_accounts_and_transactions\nFROM customers c\nJOIN accounts a ON c.id = a.cus_id\nJOIN transactions t ON a.id = t.acc_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN COUNT(DISTINCT c) AS customer_count",
    "answer": "152",
    "id": "dd9dd26e-3435-4743-9675-88ac30840925"
  },
  {
    "query": "Count the number of transactions per customer with ID 125.",
    "sql_command": "SELECT COUNT(t.id) as transaction_count\nFROM transactions t\nJOIN accounts a ON t.acc_id = a.id\nWHERE a.cus_id = 125;",
    "cypher_command": "MATCH (c:Customers {customer_id: 125})<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN count(t) AS transaction_count",
    "answer": "0",
    "id": "2d9bb845-d84f-4bc1-a547-611c4bc8bc45"
  },
  {
    "query": "How many transactions are linked to accounts owned by customers?",
    "sql_command": "SELECT COUNT(*) FROM transactions t \nJOIN accounts a ON t.acc_id = a.id \nJOIN customers c ON a.cus_id = c.id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN count(t) AS transaction_count",
    "answer": "1000",
    "id": "b74de8fd-57c9-40a2-8070-a51e5cdeb656"
  },
  {
    "query": "What is the total loan balance per branch?",
    "sql_command": "SELECT b.brc, SUM(l.bal) AS total_loan_balance \nFROM loans l \nJOIN customers c ON l.cus_id = c.id \nJOIN branches b ON c.brc = b.id \nGROUP BY b.brc\nORDER BY total_loan_balance DESC\nLIMIT 5;",
    "cypher_command": "MATCH (b:Branches)<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans) \nWITH b.branch_id AS branch_id, SUM(l.balance) AS total_loan_balance \nRETURN branch_id, total_loan_balance",
    "answer": "[{\"branch_id\": 3, \"total_loan_balance\": -1035517.47}, {\"branch_id\": 1, \"total_loan_balance\": -1778866.59}, {\"branch_id\": 2, \"total_loan_balance\": -1289766.11}, {\"branch_id\": 4, \"total_loan_balance\": -1018920.28}]",
    "id": "4e7177b3-22b7-4d02-ac2d-53b7645a3980"
  },
  {
    "query": "Count the number of transactions with amount between 1000 and 5000.",
    "sql_command": "SELECT COUNT(*) FROM transactions WHERE tran_amt BETWEEN 1000 AND 5000;",
    "cypher_command": "MATCH (t:Transactions)\nWHERE t.transaction_amount >= 1000 AND t.transaction_amount <= 5000\nRETURN COUNT(t) AS transaction_count",
    "answer": "430",
    "id": "332256fb-3cd3-48a8-b86f-85f0a266ce52"
  },
  {
    "query": "What is the number of loans created in the last year for customers with transactions?",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE cus_id IN (SELECT DISTINCT cus_id FROM transactions JOIN accounts ON transactions.acc_id = accounts.id JOIN customers ON accounts.cus_id = customers.id) AND ln_st_dt >= CURRENT_DATE - INTERVAL '1 year';",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans) WHERE date(l.created_at) >= date({ year: date().year - 1, month: 1, day: 1 }) WITH DISTINCT c, l MATCH (c)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions) RETURN count(DISTINCT l) AS number_of_loans",
    "answer": "158",
    "id": "0202fbae-c86f-4911-8559-0f3f43f8295c"
  },
  {
    "query": "Count the number of loans per branch with ID 124.",
    "sql_command": "SELECT b.id AS branch_id, COUNT(l.id) AS loan_count \nFROM branches b\nJOIN customers c ON c.brc = b.id\nJOIN loans l ON l.cus_id = c.id\nWHERE b.id = 124 \nGROUP BY b.id;",
    "cypher_command": "MATCH (b:Branches {branch_id: 124})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN COUNT(l) AS numberOfLoansPerBranch",
    "answer": "0",
    "id": "3b18bfe3-2dcf-412b-b244-598826c08662"
  },
  {
    "query": "How many employees were hired after 2020?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE EXTRACT(YEAR FROM created_at) > 2020;",
    "cypher_command": "MATCH (c:Customers)\nWHERE date(c.created_at) > date('2020-12-31')\nRETURN count(c) AS employees_hired_after_2020",
    "answer": "200",
    "id": "562ab14e-a7e7-4b6e-ab7d-185cfa5a25aa"
  },
  {
    "query": "Count the number of loans per loan type with ID 123.",
    "sql_command": "SELECT loan_types.ln_type, COUNT(loans.id) AS loan_count \nFROM loans\nJOIN loan_types ON loans.ln_type_id = loan_types.id\nWHERE loans.ln_type_id = 123\nGROUP BY loan_types.ln_type;",
    "cypher_command": "MATCH (l:Loans)-[:HAS_LOAN_TYPE]->(lt:LoanTypes)\nWHERE lt.loan_type_id = 123\nRETURN COUNT(l) AS loan_count",
    "answer": "0",
    "id": "1ec8395b-ae87-4362-b0f5-ec5f3e3e78cc"
  },
  {
    "query": "Count the number of cards per branch with ID 125.",
    "sql_command": "SELECT b.id AS branch_id, COUNT(c.id) AS card_count\nFROM branches b\nJOIN customers cu ON b.id = cu.brc\nJOIN cards c ON cu.id = c.cus_id\nWHERE b.id = 125\nGROUP BY b.id;",
    "cypher_command": "MATCH (b:Branches {branch_id: 125})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(card) AS number_of_cards_per_branch",
    "answer": "0",
    "id": "cf45e51c-1995-4f27-82d2-fe35d655e115"
  },
  {
    "query": "Count the number of cards expiring before 2024 per customer.",
    "sql_command": "SELECT cus_id, COUNT(*) AS num_expiring_cards FROM cards WHERE card_exp_date < '2024-01-01' GROUP BY cus_id ORDER BY num_expiring_cards DESC LIMIT 5;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWHERE date(card.expiration_date) < date('2024-01-01')\nRETURN c.customer_id, COUNT(card) AS expiring_cards_count",
    "answer": "[]",
    "id": "b55b444f-e906-49f7-a170-87c986fc0b01"
  },
  {
    "query": "What is the number of customers who own loans, deposits, and cards?",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS customer_count\nFROM customers c\nJOIN loans l ON c.id = l.cus_id\nJOIN deposits d ON c.id = d.cus_id\nJOIN cards ca ON c.id = ca.cus_id;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans), (c)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits), (c)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nRETURN COUNT(DISTINCT c) AS number_of_customers",
    "answer": "49",
    "id": "d5f86434-cdb7-41de-ae48-27532336809d"
  },
  {
    "query": "What is the total deposit balance for customers with active loans?",
    "sql_command": "SELECT SUM(d.bal) as total_deposit_balance\nFROM deposits d\nJOIN loans l ON d.cus_id = l.cus_id\nWHERE l.ln_en_dt IS NULL OR l.ln_en_dt > CURRENT_DATE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)<-[:BELONGS_TO_CUSTOMER]-(d:Deposits)\nRETURN SUM(d.balance) AS total_deposit_balance",
    "answer": "5531988.09",
    "id": "b30f5496-d7c6-48be-a6cc-55f5d0405042"
  },
  {
    "query": "What is the total number of unblocked cards linked to branches?",
    "sql_command": "SELECT COUNT(cards.id) AS total_unblocked_cards\nFROM cards\nJOIN customers ON cards.cus_id = customers.id\nJOIN branches ON customers.brc = branches.id\nWHERE cards.is_blocked = FALSE;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(card:Cards)\nWHERE card.is_blocked = false\nRETURN count(card) AS total_unblocked_cards",
    "answer": "78",
    "id": "3817a63b-c7ed-4018-be99-abf1b99c7010"
  },
  {
    "query": "Count the number of transactions with amount greater than average per branch.",
    "sql_command": "SELECT COUNT(t.id) AS transaction_count, c.brc \nFROM transactions t\nJOIN accounts a ON t.acc_id = a.id\nJOIN customers c ON a.cus_id = c.id\nWHERE t.tran_amt > (\n    SELECT AVG(t2.tran_amt)\n    FROM transactions t2\n    JOIN accounts a2 ON t2.acc_id = a2.id\n    JOIN customers c2 ON a2.cus_id = c2.id\n    WHERE c2.brc = c.brc\n)\nGROUP BY c.brc\nLIMIT 5;",
    "cypher_command": "MATCH (t:Transactions)\nWITH AVG(t.transaction_amount) AS avg_amount\nMATCH (b:Branches)<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nWHERE t.transaction_amount > avg_amount\nRETURN b.branch_id, COUNT(t) AS transaction_count",
    "answer": "[136, 135, 105, 137]",
    "id": "838aaa91-720b-47d6-8f2e-c98080051903"
  },
  {
    "query": "What is the number of customers with more than one loan?",
    "sql_command": "SELECT COUNT(DISTINCT cus_id) FROM (SELECT cus_id FROM loans GROUP BY cus_id HAVING COUNT(id) > 1) AS multiple_loans_customers;",
    "cypher_command": "MATCH (c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nWITH c, COUNT(l) AS loanCount\nWHERE loanCount > 1\nRETURN COUNT(c) AS numberOfCustomersWithMultipleLoans",
    "answer": "50",
    "id": "69963176-0f9f-43dd-b3b4-c736f4f95aec"
  },
  {
    "query": "What is the number of customers from branch 5 with at least one transaction?",
    "sql_command": "SELECT COUNT(DISTINCT c.id) AS customer_count\nFROM customers c\nJOIN accounts a ON c.id = a.cus_id\nJOIN transactions t ON a.id = t.acc_id\nWHERE c.brc = 5;",
    "cypher_command": "MATCH (c:Customers)-[:BELONGS_TO_BRANCH]->(b:Branches {branch_id: 5})<-[:BELONGS_TO_BRANCH]-(a:Accounts)<-[:HAS_TRANSACTION]-(t:Transactions)\nRETURN COUNT(DISTINCT c) AS number_of_customers",
    "answer": "0",
    "id": "f0e62f3a-5686-4b5c-a69e-58d715979b25"
  },
  {
    "query": "How many customers were born before 1980?",
    "sql_command": "SELECT COUNT(*) FROM customers WHERE cus_dob < '1980-01-01'",
    "cypher_command": "MATCH (c:Customers)\nWHERE date(c.date_of_birth) < date('1980-01-01')\nRETURN count(c) AS customers_born_before_1980",
    "answer": "92",
    "id": "17dbb20b-0fd4-4ab2-93e3-13cb02ce6bae"
  },
  {
    "query": "How many deposits are less than 5000?",
    "sql_command": "SELECT COUNT(*) FROM deposits WHERE bal < 5000;",
    "cypher_command": "MATCH (d:Deposits)\nWHERE d.balance < 5000\nRETURN count(d) AS numberOfDeposits",
    "answer": "13",
    "id": "495cf582-0425-4d88-a251-efcbd83a3f7e"
  },
  {
    "query": "Count the number of loans per branch with ID 128.",
    "sql_command": "SELECT COUNT(*) FROM loans WHERE ln_id = '128'",
    "cypher_command": "MATCH (b:Branches {branch_id: 128})<-[:BELONGS_TO_BRANCH]-(c:Customers)<-[:BELONGS_TO_CUSTOMER]-(l:Loans)\nRETURN COUNT(l) AS numberOfLoansPerBranch",
    "answer": "0",
    "id": "aaba9c67-2399-4fe4-bfe9-1668a77ef80d"
  }
]