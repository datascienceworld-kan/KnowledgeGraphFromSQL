[
  {
    "query": "Find the top 5 customers with the highest total account balance across all their accounts.",
    "sql_command": "SELECT \n    c.customer_id, \n    c.customer_name, \n    SUM(a.account_balance) AS total_account_balance\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nGROUP BY \n    c.customer_id, c.customer_name\nORDER BY \n    total_account_balance DESC\nLIMIT 5;",
    "answer": "Alice Peterson, Mckenzie Price, Robert Munoz, Tiffany Newton, Jennifer Bryan",
    "id": "6841c300-5521-4c6a-a60b-27607be76a46",
    "llm_generation_time": 3.343935012817383,
    "sql_execution_time": 0.004869222640991211,
    "total_token": 2390,
    "success": true
  },
  {
    "query": "Retrieve customers who have both loans and deposits, listing their total loan balance and total deposit balance.",
    "sql_command": "SELECT \n    c.customer_id,\n    c.customer_name,\n    COALESCE(SUM(l.balance), 0) AS total_loan_balance,\n    COALESCE(SUM(d.balance), 0) AS total_deposit_balance\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN \n    banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nGROUP BY \n    c.customer_id, c.customer_name;",
    "answer": "-127534.53",
    "id": "980f382a-ff1b-4dd4-a16d-0243a0dba7ba",
    "llm_generation_time": 3.700735330581665,
    "sql_execution_time": 0.005198001861572266,
    "total_token": 2421,
    "success": true
  },
  {
    "query": "List all branches with the number of customers, number of accounts, and total balance across accounts.",
    "sql_command": "SELECT \n    b.branch_code,\n    COUNT(DISTINCT c.customer_id) AS customer_count,\n    COUNT(DISTINCT a.account_id) AS account_count,\n    SUM(a.account_balance) AS total_account_balance\nFROM \n    banking_new.\"Branches\" b\nLEFT JOIN \n    banking_new.\"Customers\" c ON b.branch_id = c.branch_id\nLEFT JOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nGROUP BY \n    b.branch_code;",
    "answer": "Allison Group:38:48:2198433.26,Anthony, Rogers and Fields:58:84:3728911.44,Gallagher-Mullen:47:81:3957402.39,Harris Ltd:57:87:3911293.40",
    "id": "53bffb4d-841a-4d55-8664-2114b4089b35",
    "llm_generation_time": 4.039372682571411,
    "sql_execution_time": 0.006350278854370117,
    "total_token": 2415,
    "success": true
  },
  {
    "query": "Find customers whose total deposits are greater than twice their total loans.",
    "sql_command": "SELECT \n    c.customer_id,\n    c.customer_name,\n    SUM(d.balance) AS total_deposits,\n    SUM(l.balance) AS total_loans\nFROM \n    banking_new.\"Customers\" c\nLEFT JOIN \n    banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nLEFT JOIN \n    banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nGROUP BY \n    c.customer_id, c.customer_name\nHAVING \n    SUM(d.balance) > 2 * SUM(l.balance);",
    "answer": "31928.83",
    "id": "d6e31c95-30ca-4cc3-b0c8-a687adbdff5a",
    "llm_generation_time": 2.037109136581421,
    "sql_execution_time": 0.005339622497558594,
    "total_token": 2420,
    "success": true
  },
  {
    "query": "Get the top 10 customers who made the largest number of transactions in the last year.",
    "sql_command": "SELECT \n    c.customer_id, \n    c.customer_name, \n    COUNT(t.transaction_id) AS transaction_count\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE \n    t.transaction_date >= CURRENT_DATE - INTERVAL '1 year'\nGROUP BY \n    c.customer_id, c.customer_name\nORDER BY \n    transaction_count DESC\nLIMIT 10;",
    "answer": "Robert Munoz, Mckenzie Price, John Wright, Shelley Powell, Deborah Hamilton, Jennifer Bryan, Nancy Scott, Dr. Jennifer Allen, Scott Allen, Kathryn Jones",
    "id": "70172d66-64a4-4fe4-9289-f0ce15ea20b8",
    "llm_generation_time": 4.247314453125,
    "sql_execution_time": 0.0055904388427734375,
    "total_token": 2422,
    "success": true
  },
  {
    "query": "Identify accounts that have never had a transaction.",
    "sql_command": "SELECT account_id\nFROM banking_new.\"Accounts\"\nWHERE account_id NOT IN (\n    SELECT DISTINCT account_id\n    FROM banking_new.\"Transactions\"\n)",
    "answer": "61,63,68,112,187,201,207",
    "id": "06ed3285-8f23-4611-a5f0-65f86ad18bda",
    "llm_generation_time": 1.138920545578003,
    "sql_execution_time": 0.004624605178833008,
    "total_token": 2334,
    "success": true
  },
  {
    "query": "Find the average loan balance by loan type and branch.",
    "sql_command": "SELECT \n    \"LoanTypes\".type AS loan_type,\n    \"Branches\".branch_code AS branch_code,\n    AVG(\"Loans\".balance) AS average_loan_balance\nFROM \n    banking_new.\"Loans\"\nJOIN \n    banking_new.\"Customers\" ON \"Loans\".customer_id = \"Customers\".customer_id\nJOIN \n    banking_new.\"Branches\" ON \"Customers\".branch_id = \"Branches\".branch_id\nJOIN \n    banking_new.\"LoanTypes\" ON \"Loans\".loan_type_id = \"LoanTypes\".loan_type_id\nGROUP BY \n    \"LoanTypes\".type,\n    \"Branches\".branch_code;",
    "answer": "Personal Loan,Allison Group,-17448.390000000000;Overdraft Facility,Gallagher-Mullen,-30864.232500000000;Personal Loan,Gallagher-Mullen,-22226.410000000000;Home Loan,Gallagher-Mullen,-19574.570000000000;Agricultural Loan,Harris Ltd,-23862.163333333333;Mortgage Loan,Gallagher-Mullen,-18070.005000000000;Credit Card Loan,Allison Group,-27179.510000000000;Mortgage Loan,Allison Group,-21085.255000000000;Mortgage Loan,Harris Ltd,-30006.456000000000;Overdraft Facility,Anthony, Rogers and Fields,-25753.001538461538;Mortgage Loan,Anthony, Rogers and Fields,-31762.551428571429;Personal Loan,Harris Ltd,-25162.725714285714;Education Loan,Harris Ltd,-15275.263333333333;Agricultural Loan,Anthony, Rogers and Fields,-28484.285000000000;Gold Loan,Allison Group,-35575.406666666667;Business Loan,Gallagher-Mullen,-19153.240000000000;Gold Loan,Anthony, Rogers and Fields,-34260.577500000000;Auto Loan,Gallagher-Mullen,-29197.458750000000;Agricultural Loan,Allison Group,-31233.965714285714;Credit Card Loan,Harris Ltd,-21806.560000000000;Auto Loan,Anthony, Rogers and Fields,-21444.035000000000;Business Loan,Harris Ltd,-7118.4750000000000000;Auto Loan,Allison Group,-33237.703333333333;Overdraft Facility,Harris Ltd,-20561.476666666667;Education Loan,Anthony, Rogers and Fields,-25227.517142857143;Education Loan,Gallagher-Mullen,-21567.586666666667;Personal Loan,Anthony, Rogers and Fields,-32387.468000000000;Auto Loan,Harris Ltd,-25446.282000000000;Overdraft Facility,Allison Group,-20868.415000000000;Business Loan,Allison Group,-26151.298000000000;Business Loan,Anthony, Rogers and Fields,-17836.495000000000;Education Loan,Allison Group,-18743.181428571429;Gold Loan,Gallagher-Mullen,-27485.575000000000;Credit Card Loan,Anthony, Rogers and Fields,-32082.955000000000;Agricultural Loan,Gallagher-Mullen,-25626.517500000000;Gold Loan,Harris Ltd,-20190.950000000000;Credit Card Loan,Gallagher-Mullen,-33716.992000000000;Home Loan,Anthony, Rogers and Fields,-31450.745000000000;Home Loan,Allison Group,-24562.797500000000;Home Loan,Harris Ltd,-26198.342000000000",
    "id": "3f048d7f-a3fb-41b1-8f05-816511b034cf",
    "llm_generation_time": 3.8048489093780518,
    "sql_execution_time": 0.004904270172119141,
    "total_token": 2440,
    "success": true
  },
  {
    "query": "Retrieve customers who own more than 2 cards and at least 1 loan.",
    "sql_command": "SELECT c.customer_id, c.customer_name\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" ca ON c.customer_id = ca.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nGROUP BY c.customer_id, c.customer_name\nHAVING COUNT(DISTINCT ca.card_id) > 2\n   AND COUNT(DISTINCT l.loan_id) >= 1;",
    "answer": "Richard Vang, Regina Patel, Jennifer Rush, Alan Thompson, Cheryl Snow",
    "id": "b526346f-b67e-4272-956f-870e09b62c84",
    "llm_generation_time": 4.529016494750977,
    "sql_execution_time": 0.004877805709838867,
    "total_token": 2400,
    "success": true
  },
  {
    "query": "Find customers who made a transaction larger than their account balance at that time.",
    "sql_command": "SELECT DISTINCT c.customer_id, c.customer_name\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE t.transaction_amount > a.account_balance;",
    "answer": "[]",
    "id": "4d26d1a3-1d00-4092-959f-aac6ad166f59",
    "llm_generation_time": 4.059412479400635,
    "sql_execution_time": 0.006700277328491211,
    "total_token": 2369,
    "success": true
  },
  {
    "query": "Calculate the percentage of blocked cards per branch.",
    "sql_command": "SELECT \n    b.branch_code,\n    COUNT(DISTINCT c.card_id) * 100.0 / COUNT(*) AS blocked_cards_percentage\nFROM \n    banking_new.\"Cards\" c\nJOIN \n    banking_new.\"Customers\" cu ON c.customer_id = cu.customer_id\nJOIN \n    banking_new.\"Branches\" b ON cu.branch_id = b.branch_id\nWHERE \n    c.is_blocked = TRUE\nGROUP BY \n    b.branch_code;",
    "answer": "100.0000000000000000",
    "id": "0350d041-93ef-40c6-90ea-bbd209f91b42",
    "llm_generation_time": 4.184133052825928,
    "sql_execution_time": 0.006330728530883789,
    "total_token": 2397,
    "success": true
  },
  {
    "query": "Find deposits that have already matured but are not yet closed.",
    "sql_command": "",
    "answer": "",
    "id": "a3847704-b831-4bfe-87d9-cbf2419cd082",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "List the top 3 branches with the highest number of loans disbursed in the past 2 years.",
    "sql_command": "SELECT \n    b.branch_code,\n    COUNT(DISTINCT l.loan_id) AS loan_count\nFROM \n    banking_new.\"Branches\" b\nJOIN \n    banking_new.\"Customers\" c ON b.branch_id = c.branch_id\nJOIN \n    banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nWHERE \n    l.start_date >= CURRENT_DATE - INTERVAL '2 years'\nGROUP BY \n    b.branch_code\nORDER BY \n    loan_count DESC\nLIMIT 3;",
    "answer": "Anthony, Rogers and Fields, Gallagher-Mullen, Harris Ltd",
    "id": "c7afc597-21b4-40c5-97f4-6224ed8dca78",
    "llm_generation_time": 3.809081554412842,
    "sql_execution_time": 0.005139350891113281,
    "total_token": 2420,
    "success": true
  },
  {
    "query": "How many customers who have deposits and loans.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id;",
    "answer": "90",
    "id": "a63095c7-05af-4172-aca3-f840884e0bb9",
    "llm_generation_time": 4.011665105819702,
    "sql_execution_time": 0.0056421756744384766,
    "total_token": 2356,
    "success": true
  },
  {
    "query": "Retrieve customers who have the same phone number registered more than once.",
    "sql_command": "SELECT phone, COUNT(*) AS count\nFROM banking_new.\"Customers\"\nGROUP BY phone\nHAVING COUNT(*) > 1;",
    "answer": "",
    "id": "dd1b60c1-e281-46af-9118-05284de526d2",
    "llm_generation_time": 3.6204535961151123,
    "sql_execution_time": 0.0043468475341796875,
    "total_token": 2334,
    "success": true
  },
  {
    "query": "Find the average account balance for customers aged above 60.",
    "sql_command": "",
    "answer": "",
    "id": "c8f6b356-6f2d-4f81-9229-f029f8f0e0e2",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "List transactions that occurred on the same day a loan was disbursed for that customer.",
    "sql_command": "SELECT t.transaction_id, t.account_id, t.transaction_amount, t.transaction_date, l.loan_id, l.customer_id, l.start_date\nFROM banking_new.\"Transactions\" t\nJOIN banking_new.\"Loans\" l ON t.account_id = l.customer_id\nWHERE t.transaction_date::date = l.start_date::date;",
    "answer": "",
    "id": "17c7e0a4-4aa3-410b-848a-16b9f74e05da",
    "llm_generation_time": 4.401227235794067,
    "sql_execution_time": 0.00461268424987793,
    "total_token": 2380,
    "success": true
  },
  {
    "query": "Identify the loan type with the highest average interest rate.",
    "sql_command": "SELECT \"LoanTypes\".type, AVG(\"Loans\".interest_rate) AS average_interest_rate\nFROM banking_new.\"Loans\"\nJOIN banking_new.\"LoanTypes\" ON \"Loans\".loan_type_id = \"LoanTypes\".loan_type_id\nGROUP BY \"LoanTypes\".type\nORDER BY average_interest_rate DESC\nLIMIT 1;",
    "answer": "Overdraft Facility",
    "id": "8976fa04-b55c-4d6e-8fc1-25ebad52d8b6",
    "llm_generation_time": 3.9650304317474365,
    "sql_execution_time": 0.004791975021362305,
    "total_token": 2376,
    "success": true
  },
  {
    "query": "List customers whose account balance is below the average balance of all customers in their branch.",
    "sql_command": "SELECT \n    c.customer_id,\n    c.customer_name,\n    a.account_balance\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nWHERE \n    a.account_balance < (\n        SELECT \n            AVG(a2.account_balance)\n        FROM \n            banking_new.\"Accounts\" a2\n        WHERE \n            a2.customer_id IN (\n                SELECT \n                    c2.customer_id\n                FROM \n                    banking_new.\"Customers\" c2\n                WHERE \n                    c2.branch_id = c.branch_id\n            )\n    );",
    "answer": "47412.50",
    "id": "337d8b8e-db0a-4a7b-b150-9b251b879dc9",
    "llm_generation_time": 5.191590309143066,
    "sql_execution_time": 0.015125513076782227,
    "total_token": 2435,
    "success": true
  },
  {
    "query": "Find customers with at least one expired card but who are still active with deposits.",
    "sql_command": "SELECT DISTINCT c.customer_id, c.customer_name\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nWHERE cr.expiration_date < CURRENT_DATE\nAND d.end_date > CURRENT_DATE;",
    "answer": "",
    "id": "9124138d-a542-42ff-b59b-ba33ec7fd4bf",
    "llm_generation_time": 1.595642328262329,
    "sql_execution_time": 0.004969596862792969,
    "total_token": 2380,
    "success": true
  },
  {
    "query": "Get the total number of unique customers who hold both accounts and cards.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id;",
    "answer": "85",
    "id": "222b8ed5-bf56-4398-bc1a-4fa9635987cc",
    "llm_generation_time": 4.530802249908447,
    "sql_execution_time": 0.00542140007019043,
    "total_token": 2358,
    "success": true
  },
  {
    "query": "How many customers have more than one bank account?",
    "sql_command": "SELECT COUNT(DISTINCT customer_id) AS customer_count\nFROM banking_new.\"Customers\"\nWHERE customer_id IN (\n    SELECT customer_id\n    FROM banking_new.\"Accounts\"\n    GROUP BY customer_id\n    HAVING COUNT(account_id) > 1\n);",
    "answer": "86",
    "id": "e49a989a-baca-43f8-933b-ab85b2aa217c",
    "llm_generation_time": 5.977216958999634,
    "sql_execution_time": 0.005237102508544922,
    "total_token": 2358,
    "success": true
  },
  {
    "query": "What is the total balance of accounts for customers from the branch with code 'NYC-01'?",
    "sql_command": "SELECT SUM(a.account_balance) AS total_account_balance\nFROM banking_new.\"Accounts\" a\nJOIN banking_new.\"Customers\" c ON a.customer_id = c.customer_id\nJOIN banking_new.\"Branches\" b ON c.branch_id = b.branch_id\nWHERE b.branch_code = 'NYC-01';",
    "answer": "",
    "id": "48bcafd5-c2c3-4dbe-9f3b-1385b3f022c6",
    "llm_generation_time": 6.851498126983643,
    "sql_execution_time": 0.005118846893310547,
    "total_token": 2379,
    "success": true
  },
  {
    "query": "How many transactions were made by customers over the age of 60?",
    "sql_command": "SELECT COUNT(*) AS transaction_count\nFROM banking_new.\"Transactions\"\nJOIN banking_new.\"Accounts\" ON banking_new.\"Transactions\".account_id = banking_new.\"Accounts\".account_id\nJOIN banking_new.\"Customers\" ON banking_new.\"Accounts\".customer_id = banking_new.\"Customers\".customer_id\nWHERE EXTRACT(YEAR FROM AGE(banking_new.\"Customers\".date_of_birth)) < 18;",
    "answer": "0",
    "id": "70f898e2-fd8c-4912-ad27-ce882dbab545",
    "llm_generation_time": 4.945143222808838,
    "sql_execution_time": 0.005490303039550781,
    "total_token": 2389,
    "success": true
  },
  {
    "query": "What's the average transaction amount for accounts with over $20,000 in balance?",
    "sql_command": "SELECT AVG(transaction_amount) AS average_transaction_amount\nFROM banking_new.\"Transactions\"\nJOIN banking_new.\"Accounts\" ON banking_new.\"Transactions\".account_id = banking_new.\"Accounts\".account_id\nWHERE banking_new.\"Accounts\".account_balance > 20000;",
    "answer": "324.9925606469002695",
    "id": "83ed444e-5fe7-4d20-938d-87dccbe65d21",
    "llm_generation_time": 4.682961940765381,
    "sql_execution_time": 0.00531768798828125,
    "total_token": 2364,
    "success": true
  },
  {
    "query": "How many customers have a loan but do not have any deposits?",
    "sql_command": "SELECT COUNT(DISTINCT l.customer_id) AS customers_with_loans_without_deposits\nFROM banking_new.\"Loans\" l\nLEFT JOIN banking_new.\"Deposits\" d ON l.customer_id = d.customer_id\nWHERE d.deposit_id IS NULL;",
    "answer": "36",
    "id": "67f715a8-aa25-425d-98e3-999ea9790404",
    "llm_generation_time": 4.046147108078003,
    "sql_execution_time": 0.004972696304321289,
    "total_token": 2363,
    "success": true
  },
  {
    "query": "What is the total loan balance for customers who have at least one blocked card?",
    "sql_command": "",
    "answer": "",
    "id": "855fc08f-a499-417a-8a5f-8e0d957e1b29",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many distinct customers have taken out a 'Mortgage'?",
    "sql_command": "",
    "answer": "",
    "id": "af133fa5-9a44-4995-907e-d684aea61bca",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "What is the total number of transactions made by the customer 'Robert Williams'?",
    "sql_command": "SELECT COUNT(*) AS total_transactions\nFROM banking_new.\"Transactions\"\nJOIN banking_new.\"Accounts\" ON banking_new.\"Transactions\".account_id = banking_new.\"Accounts\".account_id\nJOIN banking_new.\"Customers\" ON banking_new.\"Accounts\".customer_id = banking_new.\"Customers\".customer_id\nWHERE banking_new.\"Customers\".customer_name = 'Robert Williams';",
    "answer": "0",
    "id": "65d6c97b-cdde-4005-bd6e-21e6ae438a28",
    "llm_generation_time": 3.8755807876586914,
    "sql_execution_time": 0.006002664566040039,
    "total_token": 2383,
    "success": true
  },
  {
    "query": "What is the average account balance for customers who also have a loan?",
    "sql_command": "",
    "answer": "",
    "id": "6cbc7b5f-d42e-45aa-8011-ff1aaebe2ccd",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers have both a 'Personal Loan' and a 'Fixed Deposit'?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"LoanTypes\" lt ON l.loan_type_id = lt.loan_type_id\nJOIN banking_new.\"DepositTypes\" dt ON d.deposit_type_id = dt.deposit_type_id\nWHERE lt.type = 'Personal Loan'\nAND dt.type = 'Fixed Deposit';",
    "answer": "0",
    "id": "5de81322-aab6-4f26-8c2a-4522e3da4cfd",
    "llm_generation_time": 2.0798301696777344,
    "sql_execution_time": 0.005768775939941406,
    "total_token": 2422,
    "success": true
  },
  {
    "query": "What was the total transaction amount last month for all customers in the 'CHI-03' branch?",
    "sql_command": "SELECT SUM(transaction_amount) AS total_transaction_amount\nFROM banking_new.\"Transactions\"\nJOIN banking_new.\"Accounts\" ON banking_new.\"Transactions\".account_id = banking_new.\"Accounts\".account_id\nJOIN banking_new.\"Customers\" ON banking_new.\"Accounts\".customer_id = banking_new.\"Customers\".customer_id\nWHERE banking_new.\"Customers\".branch_id = (\n    SELECT branch_id\n    FROM banking_new.\"Branches\"\n    WHERE branch_code = 'CHI-03'\n)\nAND transaction_date >= CURRENT_DATE - INTERVAL '1 month'\nAND transaction_date < CURRENT_DATE;",
    "answer": "",
    "id": "e117f86a-c98a-4f1c-995e-ac2f4a89b71e",
    "llm_generation_time": 2.106508731842041,
    "sql_execution_time": 0.0051839351654052734,
    "total_token": 2432,
    "success": true
  },
  {
    "query": "How many accounts have not had any transactions in the last year?",
    "sql_command": "SELECT COUNT(DISTINCT a.account_id)\nFROM banking_new.\"Accounts\" a\nLEFT JOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nAND t.transaction_date >= CURRENT_DATE - INTERVAL '1 year'\nWHERE t.transaction_id IS NULL;",
    "answer": "154",
    "id": "82de93a1-f3e3-4e0b-9ac8-e5390a04989e",
    "llm_generation_time": 4.933011054992676,
    "sql_execution_time": 0.005257368087768555,
    "total_token": 2362,
    "success": true
  },
  {
    "query": "How many customers have a total account balance that is greater than their total loan balance?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN (\n    SELECT customer_id, SUM(account_balance) AS total_account_balance\n    FROM banking_new.\"Accounts\"\n    GROUP BY customer_id\n) a ON c.customer_id = a.customer_id\nJOIN (\n    SELECT customer_id, SUM(balance) AS total_loan_balance\n    FROM banking_new.\"Loans\"\n    GROUP BY customer_id\n) l ON c.customer_id = l.customer_id\nWHERE a.total_account_balance > l.total_loan_balance;",
    "answer": "101",
    "id": "7548bcfc-fb66-4035-9484-7544b45ab267",
    "llm_generation_time": 4.036857843399048,
    "sql_execution_time": 0.00558781623840332,
    "total_token": 2420,
    "success": true
  },
  {
    "query": "How many customers hold more than 3 cards?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id\nGROUP BY c.customer_id\nHAVING COUNT(cr.card_id) > 3;",
    "answer": "3",
    "id": "7688245d-59fd-40e0-95b8-a37fa8becc69",
    "llm_generation_time": 1.37315034866333,
    "sql_execution_time": 0.0060312747955322266,
    "total_token": 2355,
    "success": true
  },
  {
    "query": "What is the highest total transaction amount generated by a single customer?",
    "sql_command": "SELECT \n    c.customer_id, \n    c.customer_name, \n    SUM(t.transaction_amount) AS total_transaction_amount\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nGROUP BY \n    c.customer_id, c.customer_name\nORDER BY \n    total_transaction_amount DESC\nLIMIT 1;",
    "answer": "24710.95",
    "id": "d458323b-4ebd-42f3-9f1c-e26b56ec8251",
    "llm_generation_time": 4.425233364105225,
    "sql_execution_time": 0.005454540252685547,
    "total_token": 2404,
    "success": true
  },
  {
    "query": "How many customers have a total deposit balance exceeding $250,000?",
    "sql_command": "SELECT COUNT(DISTINCT d.customer_id) AS customer_count\nFROM banking_new.\"Deposits\" d\nWHERE d.balance > 250000;",
    "answer": "0",
    "id": "01f3fe1b-18fe-4dc6-baf2-16ee7d8d44e6",
    "llm_generation_time": 1.2133159637451172,
    "sql_execution_time": 0.004744529724121094,
    "total_token": 2340,
    "success": true
  },
  {
    "query": "What is the total number of 'Student' loans given to customers under 25 years old?",
    "sql_command": "SELECT COUNT(*) AS student_loans_count\nFROM banking_new.\"Loans\"\nJOIN banking_new.\"Customers\" ON banking_new.\"Loans\".customer_id = banking_new.\"Customers\".customer_id\nWHERE banking_new.\"Customers\".date_of_birth >= CURRENT_DATE - INTERVAL '25 years'\nAND banking_new.\"Loans\".loan_type_id = (\n    SELECT loan_type_id\n    FROM banking_new.\"LoanTypes\"\n    WHERE type = 'Student'\n);",
    "answer": "0",
    "id": "c9844da0-4ebd-42c9-a391-1c06a6138a25",
    "llm_generation_time": 1.874002456665039,
    "sql_execution_time": 0.004904270172119141,
    "total_token": 2406,
    "success": true
  },
  {
    "query": "How many customers with an expired card have made a transaction in the last 30 days?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" cd ON c.customer_id = cd.customer_id\nJOIN banking_new.\"Transactions\" t ON cd.customer_id = t.account_id\nWHERE cd.expiration_date < CURRENT_DATE - INTERVAL '30 days'\nAND t.transaction_date >= CURRENT_DATE - INTERVAL '30 days';",
    "answer": "0",
    "id": "cd542037-1b9a-4bb7-8672-d5fc5cc7d7ed",
    "llm_generation_time": 1.6876540184020996,
    "sql_execution_time": 0.004845857620239258,
    "total_token": 2389,
    "success": true
  },
  {
    "query": "What is the average loan interest rate for customers whose total account balance is over $75,000?",
    "sql_command": "",
    "answer": "",
    "id": "f5940574-a101-48f0-bb4c-d0287f6a0a46",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many branches serve more than 500 customers?",
    "sql_command": "",
    "answer": "",
    "id": "f8b5fcc5-be16-4d2d-91b7-fdb9d4d9574a",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers have taken out a loan but have never made a deposit?",
    "sql_command": "SELECT COUNT(DISTINCT l.customer_id)\nFROM banking_new.\"Loans\" l\nLEFT JOIN banking_new.\"Deposits\" d ON l.customer_id = d.customer_id\nWHERE d.deposit_id IS NULL;",
    "answer": "36",
    "id": "95667c8e-76d8-41da-b70d-a2c9a3bba065",
    "llm_generation_time": 4.098573684692383,
    "sql_execution_time": 0.004714488983154297,
    "total_token": 2355,
    "success": true
  },
  {
    "query": "How many accounts were opened in the same month as the owner's birthday?",
    "sql_command": "SELECT COUNT(DISTINCT a.account_id) AS accounts_opened_in_same_month_as_birthday\nFROM banking_new.\"Accounts\" a\nJOIN banking_new.\"Customers\" c ON a.customer_id = c.customer_id\nWHERE EXTRACT(MONTH FROM a.created_at) = EXTRACT(MONTH FROM c.date_of_birth);",
    "answer": "22",
    "id": "46816891-e1ca-4ca9-9a6d-03e940ba56ea",
    "llm_generation_time": 4.763463973999023,
    "sql_execution_time": 0.006700754165649414,
    "total_token": 2377,
    "success": true
  },
  {
    "query": "What is the sum of balances for all deposits of the 'Retirement' type?",
    "sql_command": "SELECT SUM(d.balance) AS total_retirement_deposit_balance\nFROM banking_new.\"Deposits\" d\nJOIN banking_new.\"DepositTypes\" dt ON d.deposit_type_id = dt.deposit_type_id\nWHERE dt.type = 'Retirement';",
    "answer": "",
    "id": "23088e50-0046-41e6-a538-855495b04e81",
    "llm_generation_time": 4.022925615310669,
    "sql_execution_time": 0.005192995071411133,
    "total_token": 2363,
    "success": true
  },
  {
    "query": "How many customers have an average transaction amount of more than $500?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nGROUP BY c.customer_id\nHAVING AVG(t.transaction_amount) > 500;",
    "answer": "30",
    "id": "456179fa-ec79-40ea-ba55-8b623348c286",
    "llm_generation_time": 4.0782740116119385,
    "sql_execution_time": 0.0056264400482177734,
    "total_token": 2375,
    "success": true
  },
  {
    "query": "How many loans are set to be fully paid off by the end of the current calendar year?",
    "sql_command": "SELECT COUNT(*) AS total_loans_to_be_paid_off\nFROM banking_new.\"Loans\"\nWHERE end_date <= CURRENT_DATE\nAND end_date >= DATE_TRUNC('year', CURRENT_DATE);",
    "answer": "7",
    "id": "a809f911-3ebb-44ba-bfce-bc198a5de8a9",
    "llm_generation_time": 3.125926971435547,
    "sql_execution_time": 0.004292011260986328,
    "total_token": 2352,
    "success": true
  },
  {
    "query": "How many customers have a phone number with the '310' area code?",
    "sql_command": "SELECT COUNT(DISTINCT customer_id) AS customer_count\nFROM banking_new.\"Customers\"\nWHERE phone LIKE '310%';",
    "answer": "0",
    "id": "2fda6341-45fe-4beb-8d71-be0164de7445",
    "llm_generation_time": 3.3246827125549316,
    "sql_execution_time": 0.004910707473754883,
    "total_token": 2335,
    "success": true
  },
  {
    "query": "What was the total value of all transactions made during the last calendar week?",
    "sql_command": "SELECT SUM(transaction_amount) AS total_transaction_value\nFROM banking_new.\"Transactions\"\nWHERE transaction_date >= CURRENT_DATE - INTERVAL '6 days'\nAND transaction_date < CURRENT_DATE + INTERVAL '1 day';",
    "answer": "",
    "id": "bdc47a3d-3a76-49e0-8665-c16cf1669f4a",
    "llm_generation_time": 3.055847406387329,
    "sql_execution_time": 0.005368471145629883,
    "total_token": 2350,
    "success": true
  },
  {
    "query": "How many customers have a deposit with an interest rate lower than the bank's lowest loan rate?",
    "sql_command": "SELECT COUNT(DISTINCT d.customer_id) AS customers_with_low_interest_deposits\nFROM banking_new.\"Deposits\" d\nWHERE d.interest_rate < (\n    SELECT MIN(l.interest_rate)\n    FROM banking_new.\"Loans\" l\n    WHERE l.interest_rate IS NOT NULL\n);",
    "answer": "0",
    "id": "edb628a6-f4b7-48ba-8853-6a703c3fcdf0",
    "llm_generation_time": 3.407233238220215,
    "sql_execution_time": 0.004559755325317383,
    "total_token": 2378,
    "success": true
  },
  {
    "query": "How many unique customers performed a transaction in the last 24 hours?",
    "sql_command": "SELECT COUNT(DISTINCT t.account_id) AS unique_customers\nFROM banking_new.\"Transactions\" t\nJOIN banking_new.\"Accounts\" a ON t.account_id = a.account_id\nJOIN banking_new.\"Customers\" c ON a.customer_id = c.customer_id\nWHERE t.transaction_date >= CURRENT_TIMESTAMP - INTERVAL '24 hours';",
    "answer": "0",
    "id": "2faed1c9-ffb1-41a8-93e1-a4b08f5031bc",
    "llm_generation_time": 3.591938018798828,
    "sql_execution_time": 0.005386829376220703,
    "total_token": 2376,
    "success": true
  },
  {
    "query": "How many customers share a birthday with at least one other customer?",
    "sql_command": "SELECT COUNT(DISTINCT c1.customer_id)\nFROM banking_new.\"Customers\" c1\nJOIN banking_new.\"Customers\" c2 \nON DATE(c1.date_of_birth) = DATE(c2.date_of_birth)\nWHERE c1.customer_id < c2.customer_id;",
    "answer": "1",
    "id": "e9a1672e-4f3f-40e8-bd5e-9aa12f4322de",
    "llm_generation_time": 3.2362987995147705,
    "sql_execution_time": 0.0051229000091552734,
    "total_token": 2363,
    "success": true
  },
  {
    "query": "How many unblocked cards have a balance greater than $10,000?",
    "sql_command": "SELECT COUNT(*) AS unblocked_cards_over_10k\nFROM banking_new.\"Cards\"\nWHERE is_blocked = false AND balance > 10000;",
    "answer": "0",
    "id": "6fa40624-43dc-4f0a-a8c9-5f9f6f215970",
    "llm_generation_time": 2.9655585289001465,
    "sql_execution_time": 0.004599809646606445,
    "total_token": 2340,
    "success": true
  },
  {
    "query": "Find the number of customers who have an account but do not possess any cards.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nLEFT JOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id\nWHERE cr.card_id IS NULL;",
    "answer": "69",
    "id": "5b4f1d50-b084-4a81-b1bf-abd8f7a6ff00",
    "llm_generation_time": 3.752898931503296,
    "sql_execution_time": 0.005764961242675781,
    "total_token": 2368,
    "success": true
  },
  {
    "query": "What is the total account balance for accounts with more than 20 transactions this month?",
    "sql_command": "SELECT \n    a.customer_id,\n    SUM(a.account_balance) AS total_account_balance\nFROM \n    banking_new.\"Accounts\" a\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE \n    t.transaction_date >= CURRENT_DATE - INTERVAL '1 month'\n    AND t.transaction_date < CURRENT_DATE\nGROUP BY \n    a.customer_id\nHAVING \n    COUNT(t.transaction_id) > 20;",
    "answer": "",
    "id": "7039d0d1-4b47-43e2-bb52-63b94dd68994",
    "llm_generation_time": 4.130015134811401,
    "sql_execution_time": 0.00499725341796875,
    "total_token": 2403,
    "success": true
  },
  {
    "query": "How many customers opened their first account with the bank over 5 years ago?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN (\n    SELECT customer_id, MIN(created_at) AS first_account_date\n    FROM banking_new.\"Accounts\"\n    GROUP BY customer_id\n) a ON c.customer_id = a.customer_id\nWHERE a.first_account_date < CURRENT_DATE - INTERVAL '5 years';",
    "answer": "0",
    "id": "5790f94b-af47-4258-9992-51f23159628d",
    "llm_generation_time": 1.6846208572387695,
    "sql_execution_time": 0.00512385368347168,
    "total_token": 2382,
    "success": true
  },
  {
    "query": "How many 'Auto Loan' types were granted in the year 2024?",
    "sql_command": "SELECT COUNT(*) AS auto_loan_count\nFROM banking_new.\"Loans\"\nJOIN banking_new.\"LoanTypes\" ON banking_new.\"Loans\".loan_type_id = banking_new.\"LoanTypes\".loan_type_id\nWHERE banking_new.\"LoanTypes\".type = 'Auto Loan'\nAND EXTRACT(YEAR FROM banking_new.\"Loans\".start_date) = 2024;",
    "answer": "9",
    "id": "3547cddf-e91c-440a-88bd-945e5bb9cf85",
    "llm_generation_time": 3.450854778289795,
    "sql_execution_time": 0.004945516586303711,
    "total_token": 2387,
    "success": true
  },
  {
    "query": "What is the count of customers with the last name 'Jones'?",
    "sql_command": "SELECT COUNT(*) AS \"Jones_Customer_Count\"\nFROM banking_new.\"Customers\"\nWHERE \"customer_name\" LIKE '%Jones';",
    "answer": "5",
    "id": "358d142c-c1ff-439d-b24c-f906b54cc8de",
    "llm_generation_time": 2.8376212120056152,
    "sql_execution_time": 0.0049288272857666016,
    "total_token": 2333,
    "success": true
  },
  {
    "query": "How many accounts have a balance higher than the average account balance of their branch?",
    "sql_command": "",
    "answer": "",
    "id": "e635330a-21d5-44db-b6b1-9772ca476a95",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count how many customers have all of their associated cards active (not blocked).",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" cd ON c.customer_id = cd.customer_id\nWHERE cd.is_blocked = FALSE;",
    "answer": "64",
    "id": "f3c2b1ac-e01e-4c5a-94e4-69876896396d",
    "llm_generation_time": 1.2836265563964844,
    "sql_execution_time": 0.005141258239746094,
    "total_token": 2350,
    "success": true
  },
  {
    "query": "How many deposits are scheduled to mature in the next calendar quarter?",
    "sql_command": "SELECT COUNT(*) AS \"Number_of_Deposits_Scheduled_to_Mature\"\nFROM banking_new.\"Deposits\"\nWHERE end_date >= CURRENT_DATE\nAND end_date < CURRENT_DATE + INTERVAL '3 months';",
    "answer": "4",
    "id": "803e9b7b-8a76-4e58-a291-577818758f24",
    "llm_generation_time": 1.3090441226959229,
    "sql_execution_time": 0.005068778991699219,
    "total_token": 2351,
    "success": true
  },
  {
    "query": "What is the total number of transactions made by customers who currently have a 'Home Equity' loan?",
    "sql_command": "SELECT COUNT(DISTINCT t.transaction_id)\nFROM banking_new.\"Transactions\" t\nJOIN banking_new.\"Accounts\" a ON t.account_id = a.account_id\nJOIN banking_new.\"Customers\" c ON a.customer_id = c.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"LoanTypes\" lt ON l.loan_type_id = lt.loan_type_id\nWHERE lt.type = 'Home Equity';",
    "answer": "0",
    "id": "811ef808-51f9-4824-9d1f-4fcdc824de3f",
    "llm_generation_time": 3.611074209213257,
    "sql_execution_time": 0.005637645721435547,
    "total_token": 2410,
    "success": true
  },
  {
    "query": "How many customers have a total outstanding loan balance of more than $500,000?",
    "sql_command": "SELECT COUNT(DISTINCT customer_id) AS high_loan_customers\nFROM banking_new.\"Loans\"\nWHERE balance > 500000;",
    "answer": "0",
    "id": "c7337c65-af80-43c6-9721-dedf63e17fb4",
    "llm_generation_time": 2.8931658267974854,
    "sql_execution_time": 0.0044977664947509766,
    "total_token": 2340,
    "success": true
  },
  {
    "query": "What is the total number of transactions that occurred on a weekend (Saturday or Sunday)?",
    "sql_command": "SELECT COUNT(*) AS total_weekend_transactions\nFROM banking_new.\"Transactions\"\nWHERE EXTRACT(DOW FROM transaction_date) IN (6, 0);",
    "answer": "286",
    "id": "6c9e135d-ba83-451b-a726-87537e691277",
    "llm_generation_time": 2.875664710998535,
    "sql_execution_time": 0.0045773983001708984,
    "total_token": 2343,
    "success": true
  },
  {
    "query": "How many customers are registered with the branch located at '123 Finance St'?",
    "sql_command": "SELECT COUNT(DISTINCT \"Customers\".customer_id)\nFROM banking_new.\"Customers\"\nJOIN banking_new.\"Branches\" ON \"Customers\".branch_id = \"Branches\".branch_id\nWHERE \"Branches\".branch_address = '123 Finance St';",
    "answer": "0",
    "id": "6273428e-a53e-4559-8fdd-9af06df6a045",
    "llm_generation_time": 3.69350528717041,
    "sql_execution_time": 0.0043642520904541016,
    "total_token": 2362,
    "success": true
  },
  {
    "query": "How many loan types have an average interest rate below 3.5%?",
    "sql_command": "SELECT COUNT(DISTINCT loan_type_id) AS low_interest_loan_types\nFROM banking_new.\"LoanTypes\"\nWHERE type IS NOT NULL;",
    "answer": "10",
    "id": "e1b07a8a-44d1-4b5c-9318-dc3f42eac30b",
    "llm_generation_time": 3.010118246078491,
    "sql_execution_time": 0.005853176116943359,
    "total_token": 2339,
    "success": true
  },
  {
    "query": "Count the number of customers who have deposits with the bank but have no loans.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nLEFT JOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nWHERE l.loan_id IS NULL;",
    "answer": "41",
    "id": "e9fb2ec1-464a-4157-bf76-2a11dbfb38dc",
    "llm_generation_time": 3.4262757301330566,
    "sql_execution_time": 0.005017518997192383,
    "total_token": 2372,
    "success": true
  },
  {
    "query": "What is the total account balance for customers under the age of 30?",
    "sql_command": "SELECT \n    c.customer_id,\n    SUM(a.account_balance) AS total_account_balance\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nWHERE \n    EXTRACT(YEAR FROM AGE(c.date_of_birth)) < 30\nGROUP BY \n    c.customer_id;",
    "answer": "74803.99",
    "id": "30efa799-043e-45f0-bf4e-f1fc82996cb7",
    "llm_generation_time": 3.614759922027588,
    "sql_execution_time": 0.0062482357025146484,
    "total_token": 2382,
    "success": true
  },
  {
    "query": "How many branches have an average customer account balance greater than $25,000?",
    "sql_command": "SELECT \n    b.branch_code,\n    AVG(a.account_balance) AS average_account_balance\nFROM \n    banking_new.\"Branches\" b\nJOIN \n    banking_new.\"Customers\" c ON b.branch_id = c.branch_id\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nGROUP BY \n    b.branch_id, b.branch_code\nHAVING \n    AVG(a.account_balance) > 25000;",
    "answer": "4",
    "id": "030f9044-5634-49ff-a190-7d1e8c06796c",
    "llm_generation_time": 3.7425239086151123,
    "sql_execution_time": 0.0050427913665771484,
    "total_token": 2402,
    "success": true
  },
  {
    "query": "Count the number of active (not blocked) cards that expire in or after the year 2030.",
    "sql_command": "SELECT COUNT(*) AS active_cards_count\nFROM banking_new.\"Cards\"\nWHERE is_blocked = FALSE\nAND EXTRACT(YEAR FROM expiration_date) >= 2030;",
    "answer": "7",
    "id": "35a5b582-51fd-4f6b-98dd-d2387342543a",
    "llm_generation_time": 3.263395309448242,
    "sql_execution_time": 0.0049686431884765625,
    "total_token": 2350,
    "success": true
  },
  {
    "query": "What is the total transaction amount from accounts that were opened in the last 6 months?",
    "sql_command": "SELECT SUM(transaction_amount) AS total_transaction_amount\nFROM banking_new.\"Transactions\"\nJOIN banking_new.\"Accounts\" ON banking_new.\"Transactions\".account_id = banking_new.\"Accounts\".account_id\nWHERE banking_new.\"Accounts\".created_at >= CURRENT_DATE - INTERVAL '6 months';",
    "answer": "191026.83",
    "id": "5574860f-755f-4972-8ec5-7766117815b5",
    "llm_generation_time": 3.1635076999664307,
    "sql_execution_time": 0.004994869232177734,
    "total_token": 2369,
    "success": true
  },
  {
    "query": "How many customers have a '@yahoo.com' email address?",
    "sql_command": "SELECT COUNT(DISTINCT customer_id) AS yahoo_email_customers\nFROM banking_new.\"Customers\"\nWHERE email ILIKE '%@yahoo.com';",
    "answer": "0",
    "id": "17ebb2a6-e42c-4008-905d-6df407851c3f",
    "llm_generation_time": 2.951601028442383,
    "sql_execution_time": 0.004770517349243164,
    "total_token": 2336,
    "success": true
  },
  {
    "query": "How many customers have a total loan balance that is higher than their combined total balance from accounts and deposits?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nWHERE l.balance > (a.account_balance + d.balance);",
    "answer": "0",
    "id": "6daba985-2483-43b8-8807-82aae339f9e3",
    "llm_generation_time": 3.54982328414917,
    "sql_execution_time": 0.006296634674072266,
    "total_token": 2396,
    "success": true
  },
  {
    "query": "Count customers whose average transaction amount last month exceeded the bank's overall average transaction amount.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id) AS customer_count\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE t.transaction_date >= CURRENT_DATE - INTERVAL '1 month'\nAND t.transaction_date < CURRENT_DATE\nGROUP BY c.customer_id\nHAVING AVG(t.transaction_amount) > (\n    SELECT AVG(transaction_amount)\n    FROM banking_new.\"Transactions\"\n    WHERE transaction_date >= CURRENT_DATE - INTERVAL '1 month'\n    AND transaction_date < CURRENT_DATE\n);",
    "answer": "6",
    "id": "b6a83dea-54da-447b-bac8-85225c31111b",
    "llm_generation_time": 4.236450433731079,
    "sql_execution_time": 0.005351543426513672,
    "total_token": 2436,
    "success": true
  },
  {
    "query": "How many customers took out their first loan within 60 days of opening their first account?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN (\n    SELECT customer_id, MIN(created_at) AS first_account_date\n    FROM banking_new.\"Accounts\"\n    GROUP BY customer_id\n) a ON c.customer_id = a.customer_id\nJOIN (\n    SELECT customer_id, MIN(created_at) AS first_loan_date\n    FROM banking_new.\"Loans\"\n    GROUP BY customer_id\n) l ON c.customer_id = l.customer_id\nWHERE DATE_PART('day', l.first_loan_date - a.first_account_date) <= 60;",
    "answer": "101",
    "id": "cbc347e3-5c65-4033-9093-f48170d4c224",
    "llm_generation_time": 3.9602129459381104,
    "sql_execution_time": 0.006075620651245117,
    "total_token": 2431,
    "success": true
  },
  {
    "query": "Count the number of customers who hold active loans from three or more different loan categories.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id) AS active_loan_customers\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nWHERE l.end_date IS NULL;",
    "answer": "0",
    "id": "c10ff004-b58f-457f-83da-bb441a702c41",
    "llm_generation_time": 1.350398063659668,
    "sql_execution_time": 0.0050048828125,
    "total_token": 2359,
    "success": true
  },
  {
    "query": "How many customers have made a single transaction that was larger than their current total account balance?",
    "sql_command": "SELECT COUNT(DISTINCT t.account_id) AS customers_with_large_transaction\nFROM banking_new.\"Transactions\" t\nJOIN banking_new.\"Accounts\" a ON t.account_id = a.account_id\nWHERE t.transaction_amount > a.account_balance;",
    "answer": "31",
    "id": "bbf57fdc-16c2-45f3-a5e7-427d9ffab96b",
    "llm_generation_time": 3.1734113693237305,
    "sql_execution_time": 0.005310535430908203,
    "total_token": 2361,
    "success": true
  },
  {
    "query": "How many customers made at least one transaction in every month of the previous calendar year?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE t.transaction_date >= DATE_TRUNC('year', CURRENT_DATE - INTERVAL '1 year') \n  AND t.transaction_date < DATE_TRUNC('year', CURRENT_DATE)\nGROUP BY c.customer_id\nHAVING COUNT(DISTINCT EXTRACT(MONTH FROM t.transaction_date)) = 12;",
    "answer": "",
    "id": "4aee0d54-1ab8-4f6e-b266-0bedfa8f250a",
    "llm_generation_time": 3.9148800373077393,
    "sql_execution_time": 0.005259513854980469,
    "total_token": 2420,
    "success": true
  },
  {
    "query": "How many customers are in the top 5% based on their total deposit balance?",
    "sql_command": "SELECT COUNT(*) AS top_5_percent_customers\nFROM (\n    SELECT customer_id, SUM(balance) AS total_deposit_balance\n    FROM banking_new.\"Deposits\"\n    GROUP BY customer_id\n    ORDER BY total_deposit_balance DESC\n    LIMIT (SELECT COUNT(DISTINCT customer_id) * 0.05 FROM banking_new.\"Deposits\")\n) AS top_customers;",
    "answer": "7",
    "id": "d8cd03c5-dbc5-4c5d-9df4-ec93503a5638",
    "llm_generation_time": 1.7171931266784668,
    "sql_execution_time": 0.00547027587890625,
    "total_token": 2391,
    "success": true
  },
  {
    "query": "How many customers have a loan with an interest rate higher than the average deposit interest rate at their branch?",
    "sql_command": "SELECT COUNT(DISTINCT l.customer_id) AS high_interest_loan_customers\nFROM banking_new.\"Loans\" l\nJOIN banking_new.\"Customers\" c ON l.customer_id = c.customer_id\nJOIN banking_new.\"Branches\" b ON c.branch_id = b.branch_id\nWHERE l.interest_rate > (\n    SELECT AVG(d.interest_rate)\n    FROM banking_new.\"Deposits\" d\n    JOIN banking_new.\"Customers\" c2 ON d.customer_id = c2.customer_id\n    JOIN banking_new.\"Branches\" b2 ON c2.branch_id = b2.branch_id\n    WHERE b2.branch_id = b.branch_id\n);",
    "answer": "74",
    "id": "3730a8f7-2e9f-4342-bb06-18e6bb45c5cc",
    "llm_generation_time": 4.369429588317871,
    "sql_execution_time": 0.013097286224365234,
    "total_token": 2452,
    "success": true
  },
  {
    "query": "Find the number of customers who opened an account, took a loan, and got a card all within the same calendar year.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id\nWHERE \n    EXTRACT(YEAR FROM a.created_at) = EXTRACT(YEAR FROM l.created_at)\n    AND EXTRACT(YEAR FROM a.created_at) = EXTRACT(YEAR FROM cr.created_at);",
    "answer": "58",
    "id": "9c86b5fa-15df-4599-ae04-51edae950609",
    "llm_generation_time": 2.0458297729492188,
    "sql_execution_time": 0.005759239196777344,
    "total_token": 2429,
    "success": true
  },
  {
    "query": "Count customers whose transaction count increased by 100% from the month before last to last month.",
    "sql_command": "SELECT \n    c.customer_id,\n    COUNT(t.transaction_id) AS transaction_count_last_month,\n    COUNT(t2.transaction_id) AS transaction_count_month_before_last\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nJOIN \n    banking_new.\"Transactions\" t2 ON a.account_id = t2.account_id\nWHERE \n    t.transaction_date >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month') \n    AND t.transaction_date < DATE_TRUNC('month', CURRENT_DATE)\n    AND t2.transaction_date >= DATE_TRUNC('month', CURRENT_DATE - INTERVAL '2 months') \n    AND t2.transaction_date < DATE_TRUNC('month', CURRENT_DATE - INTERVAL '1 month')\nGROUP BY \n    c.customer_id\nHAVING \n    COUNT(t.transaction_id) = 2 * COUNT(t2.transaction_id)\nORDER BY \n    c.customer_id;",
    "answer": "",
    "id": "61414436-89fd-4334-8b90-fdc9c88313d4",
    "llm_generation_time": 3.167029619216919,
    "sql_execution_time": 0.006516218185424805,
    "total_token": 2524,
    "success": true
  },
  {
    "query": "How many customers have a 'Mortgage' where their total account balance is less than a single monthly payment (balance/payment_term)?",
    "sql_command": "",
    "answer": "",
    "id": "cfed2afc-4fa1-4f59-b097-6e95ba474596",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Find the number of customers who have made transactions on more than 5 consecutive days.",
    "sql_command": "",
    "answer": "",
    "id": "7f4a4704-b4d5-40fc-92a0-9bac975322cb",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers' total deposit term (sum of months) is greater than their total loan payment term (sum of months)?",
    "sql_command": "SELECT COUNT(*) AS customer_count\nFROM (\n    SELECT \n        c.customer_id,\n        SUM(DATE_PART('month', d.end_date) - DATE_PART('month', d.start_date)) AS total_deposit_term_months,\n        SUM(DATE_PART('month', l.end_date) - DATE_PART('month', l.start_date)) AS total_loan_payment_term_months\n    FROM banking_new.\"Customers\" c\n    LEFT JOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\n    LEFT JOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\n    GROUP BY c.customer_id\n) AS customer_terms\nWHERE total_deposit_term_months > total_loan_payment_term_months;",
    "answer": "0",
    "id": "e38568f2-4ef2-4c2d-bbff-e48788fb44f6",
    "llm_generation_time": 4.3625407218933105,
    "sql_execution_time": 0.005510091781616211,
    "total_token": 2466,
    "success": true
  },
  {
    "query": "Count customers whose second loan was of a different type than their first ever loan.",
    "sql_command": "",
    "answer": "",
    "id": "7a53e634-1ca1-4a0b-ab17-e7f0eca1d0a3",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers have a total transaction value that's over 20 times the balance of their oldest account?",
    "sql_command": "",
    "answer": "",
    "id": "5e50406b-7b38-4586-836a-168a66dd6d18",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count 'dormant whales': customers with over $1M in total balance (accounts+deposits) but no transactions in 6 months.",
    "sql_command": "SELECT \n    c.customer_id,\n    c.customer_name,\n    SUM(a.account_balance) AS total_account_balance,\n    SUM(d.balance) AS total_deposit_balance,\n    COALESCE(SUM(a.account_balance), 0) + COALESCE(SUM(d.balance), 0) AS total_balance\nFROM \n    banking_new.\"Customers\" c\nLEFT JOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nLEFT JOIN \n    banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nWHERE \n    c.customer_id NOT IN (\n        SELECT DISTINCT \n            t.account_id\n        FROM \n            banking_new.\"Transactions\" t\n        WHERE \n            t.transaction_date >= CURRENT_DATE - INTERVAL '6 months'\n    )\nGROUP BY \n    c.customer_id, c.customer_name\nHAVING \n    COALESCE(SUM(a.account_balance), 0) + COALESCE(SUM(d.balance), 0) > 1000000;",
    "answer": "1",
    "id": "036bbba9-ad32-4dcb-a582-25c7686772f9",
    "llm_generation_time": 5.94940710067749,
    "sql_execution_time": 0.007049083709716797,
    "total_token": 2531,
    "success": true
  },
  {
    "query": "How many customers' average deposit term is longer than the average loan term for their entire branch?",
    "sql_command": "",
    "answer": "",
    "id": "6db0f386-a459-4d4f-8849-1dbf99e2c27c",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers have only one type of product with the bank (e.g., only accounts, or only loans, but not both)?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM banking_new.\"Accounts\" a\n    WHERE a.customer_id = c.customer_id\n    INTERSECT\n    SELECT 1\n    FROM banking_new.\"Deposits\" d\n    WHERE d.customer_id = c.customer_id\n    INTERSECT\n    SELECT 1\n    FROM banking_new.\"Loans\" l\n    WHERE l.customer_id = c.customer_id\n    INTERSECT\n    SELECT 1\n    FROM banking_new.\"Cards\" ca\n    WHERE ca.customer_id = c.customer_id\n)\nAND (\n    EXISTS (\n        SELECT 1\n        FROM banking_new.\"Accounts\" a\n        WHERE a.customer_id = c.customer_id\n        UNION\n        SELECT 1\n        FROM banking_new.\"Deposits\" d\n        WHERE d.customer_id = c.customer_id\n        UNION\n        SELECT 1\n        FROM banking_new.\"Loans\" l\n        WHERE l.customer_id = c.customer_id\n        UNION\n        SELECT 1\n        FROM banking_new.\"Cards\" ca\n        WHERE ca.customer_id = c.customer_id\n    )\n);",
    "answer": "158",
    "id": "acfcfafd-cdd8-455f-9a64-0670fb77577e",
    "llm_generation_time": 3.6538245677948,
    "sql_execution_time": 0.021922826766967773,
    "total_token": 2574,
    "success": true
  },
  {
    "query": "How many customers have a card balance that is greater than the average account balance of all customers in their branch?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" cd ON c.customer_id = cd.customer_id\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Branches\" b ON c.branch_id = b.branch_id\nWHERE cd.balance > (\n    SELECT AVG(a2.account_balance)\n    FROM banking_new.\"Accounts\" a2\n    JOIN banking_new.\"Customers\" c2 ON a2.customer_id = c2.customer_id\n    JOIN banking_new.\"Branches\" b2 ON c2.branch_id = b2.branch_id\n    WHERE b2.branch_id = b.branch_id\n);",
    "answer": "0",
    "id": "1383308a-f033-400b-841d-393e89846f86",
    "llm_generation_time": 4.738460540771484,
    "sql_execution_time": 0.011854171752929688,
    "total_token": 2459,
    "success": true
  },
  {
    "query": "Count customers with a trend of at least 4 consecutively increasing transaction amounts.",
    "sql_command": "",
    "answer": "",
    "id": "5011a56f-79f9-4808-a372-b23420a8856c",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers have a loan that started on the same day of the week they were born?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"LoanTypes\" lt ON l.loan_type_id = lt.loan_type_id\nWHERE EXTRACT(DOW FROM l.start_date) = EXTRACT(DOW FROM c.date_of_birth);",
    "answer": "32",
    "id": "1c35c086-2ddf-4fa0-8ce6-8588e2f4edb6",
    "llm_generation_time": 3.5354909896850586,
    "sql_execution_time": 0.005170106887817383,
    "total_token": 2390,
    "success": true
  },
  {
    "query": "Count customers where the time gap between their 2nd and 3rd loan was shorter than between their 1st and 2nd.",
    "sql_command": "SELECT COUNT(*) AS customer_count\nFROM (\n    SELECT \n        l1.customer_id,\n        l1.loan_id AS first_loan_id,\n        l2.loan_id AS second_loan_id,\n        l3.loan_id AS third_loan_id,\n        l2.start_date - l1.start_date AS gap_1_2,\n        l3.start_date - l2.start_date AS gap_2_3\n    FROM \n        banking_new.\"Loans\" l1\n    JOIN \n        banking_new.\"Loans\" l2 ON l1.customer_id = l2.customer_id AND l2.start_date > l1.start_date\n    JOIN \n        banking_new.\"Loans\" l3 ON l2.customer_id = l3.customer_id AND l3.start_date > l2.start_date\n    WHERE \n        l1.customer_id IN (\n            SELECT customer_id\n            FROM banking_new.\"Loans\"\n            GROUP BY customer_id\n            HAVING COUNT(*) >= 3\n        )\n) AS loan_gaps\nWHERE \n    gap_2_3 < gap_1_2;",
    "answer": "15",
    "id": "669bfce6-330e-479e-b218-33812c7e62e8",
    "llm_generation_time": 5.077791452407837,
    "sql_execution_time": 0.005177021026611328,
    "total_token": 2549,
    "success": true
  },
  {
    "query": "How many customers have a greater total balance in 'Savings' deposits than in 'Auto' loans?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"DepositTypes\" dt ON d.deposit_type_id = dt.deposit_type_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"LoanTypes\" lt ON l.loan_type_id = lt.loan_type_id\nWHERE dt.type = 'Savings'\nAND lt.type = 'Auto';",
    "answer": "0",
    "id": "bf166cd2-70df-4640-9498-2b4195c2c95a",
    "llm_generation_time": 3.8920676708221436,
    "sql_execution_time": 0.0055277347564697266,
    "total_token": 2425,
    "success": true
  },
  {
    "query": "Count the number of branches where the total loan balance is more than three times the total deposit balance.",
    "sql_command": "",
    "answer": "",
    "id": "034a0ece-b298-4dc5-a97a-708decd04dfb",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers' most frequent transaction day of the week is Friday?",
    "sql_command": "",
    "answer": "",
    "id": "d35ae2ee-5887-425a-bf95-e7657865688b",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count customers who have a deposit whose term in months is greater than their age in months when the deposit started.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"DepositTypes\" dt ON d.deposit_type_id = dt.deposit_type_id\nWHERE EXTRACT(YEAR FROM d.start_date) - EXTRACT(YEAR FROM c.date_of_birth) * 12 + EXTRACT(MONTH FROM d.start_date) - EXTRACT(MONTH FROM c.date_of_birth) < EXTRACT(YEAR FROM d.term::text::interval) * 12 + EXTRACT(MONTH FROM d.term::text::interval);",
    "answer": "131",
    "id": "b5064d57-8979-4226-ac1c-8837af068b9b",
    "llm_generation_time": 4.588123798370361,
    "sql_execution_time": 0.005651712417602539,
    "total_token": 2450,
    "success": true
  },
  {
    "query": "How many customers hold every single type of deposit the bank offers?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id) AS customer_count\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"DepositTypes\" dt ON d.deposit_type_id = dt.deposit_type_id\nGROUP BY c.customer_id\nHAVING COUNT(DISTINCT dt.deposit_type_id) = (SELECT COUNT(*) FROM banking_new.\"DepositTypes\");",
    "answer": "",
    "id": "1c79da5b-8515-43b2-bc7f-b2e1a83b2fbd",
    "llm_generation_time": 3.8941197395324707,
    "sql_execution_time": 0.005089282989501953,
    "total_token": 2398,
    "success": true
  },
  {
    "query": "Count customers whose most recent transaction was for a lower amount than their overall average transaction amount.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id) AS low_transaction_customers\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE t.transaction_id = (\n    SELECT t2.transaction_id\n    FROM banking_new.\"Transactions\" t2\n    WHERE t2.account_id = a.account_id\n    ORDER BY t2.transaction_date DESC\n    LIMIT 1\n)\nAND t.transaction_amount < (\n    SELECT AVG(t3.transaction_amount)\n    FROM banking_new.\"Transactions\" t3\n    WHERE t3.account_id = a.account_id\n);",
    "answer": "99",
    "id": "0f6f4718-5983-41cb-a3f0-6bf11272fa49",
    "llm_generation_time": 4.730807781219482,
    "sql_execution_time": 0.04051661491394043,
    "total_token": 2453,
    "success": true
  },
  {
    "query": "How many unique addresses are shared by two or more customers?",
    "sql_command": "SELECT COUNT(DISTINCT address) AS shared_addresses\nFROM banking_new.\"Customers\"\nWHERE address IS NOT NULL\nGROUP BY address\nHAVING COUNT(DISTINCT customer_id) >= 2;",
    "answer": "",
    "id": "7c820db4-238f-4e9c-9121-eccbfb0a8c25",
    "llm_generation_time": 3.3579981327056885,
    "sql_execution_time": 0.005028963088989258,
    "total_token": 2347,
    "success": true
  },
  {
    "query": "Count customers who make more transactions on weekends (Sat, Sun) than on weekdays (Mon-Fri).",
    "sql_command": "",
    "answer": "",
    "id": "ff9aa417-17aa-491c-9a4a-d1fa361a66e9",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers have a card expiring in the same month and year as their oldest loan's end date?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" ca ON c.customer_id = ca.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nWHERE EXTRACT(YEAR FROM ca.expiration_date) = EXTRACT(YEAR FROM l.end_date)\nAND EXTRACT(MONTH FROM ca.expiration_date) = EXTRACT(MONTH FROM l.end_date)\nAND l.end_date = (\n    SELECT MIN(end_date)\n    FROM banking_new.\"Loans\"\n    WHERE customer_id = c.customer_id\n);",
    "answer": "1",
    "id": "81cb353f-1b17-4aad-8390-d3d52884f7de",
    "llm_generation_time": 4.048691987991333,
    "sql_execution_time": 0.00568079948425293,
    "total_token": 2441,
    "success": true
  },
  {
    "query": "How many customers have a loan-to-assets ratio (total loans / total accounts+deposits) greater than 0.9?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN (\n    SELECT customer_id, SUM(balance) AS total_loans\n    FROM banking_new.\"Loans\"\n    GROUP BY customer_id\n) l ON c.customer_id = l.customer_id\nJOIN (\n    SELECT customer_id, SUM(account_balance) AS total_accounts\n    FROM banking_new.\"Accounts\"\n    GROUP BY customer_id\n) a ON c.customer_id = a.customer_id\nJOIN (\n    SELECT customer_id, SUM(balance) AS total_deposits\n    FROM banking_new.\"Deposits\"\n    GROUP BY customer_id\n) d ON c.customer_id = d.customer_id\nWHERE (l.total_loans / (a.total_accounts + d.total_deposits)) > 0.9;",
    "answer": "1",
    "id": "494cc3b6-1068-46d3-99a5-0ee9b34e7b7f",
    "llm_generation_time": 4.539281606674194,
    "sql_execution_time": 0.006860971450805664,
    "total_token": 2484,
    "success": true
  },
  {
    "query": "Count customers who have never made a transaction larger than the bank's overall average transaction amount.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nLEFT JOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nLEFT JOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE t.transaction_amount <= (\n    SELECT AVG(transaction_amount)\n    FROM banking_new.\"Transactions\"\n) AND t.transaction_amount IS NOT NULL;",
    "answer": "140",
    "id": "1a31e4b4-1934-4be5-a0b7-5a13b3fc30d7",
    "llm_generation_time": 3.586705446243286,
    "sql_execution_time": 0.005374431610107422,
    "total_token": 2392,
    "success": true
  },
  {
    "query": "How many customers have active deposits but all of their checking/savings accounts are overdrawn?",
    "sql_command": "",
    "answer": "",
    "id": "c2c8cb55-0f92-4528-9f78-1ded6b928f71",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers have at least one loan for every account they hold?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM banking_new.\"Accounts\" a2\n    WHERE a2.customer_id = c.customer_id\n    AND a2.account_id NOT IN (\n        SELECT DISTINCT account_id\n        FROM banking_new.\"Loans\" l2\n        WHERE l2.customer_id = c.customer_id\n    )\n);",
    "answer": "101",
    "id": "e3a403f8-68b7-4e85-9035-b27bb450e876",
    "llm_generation_time": 2.183305501937866,
    "sql_execution_time": 0.006543397903442383,
    "total_token": 2429,
    "success": true
  },
  {
    "query": "Count loyal customers: those with the bank over 10 years who have at least 3 product types (account, loan, card, deposit).",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id) AS loyal_customers\nFROM banking_new.\"Customers\" c\nJOIN (\n    SELECT DISTINCT customer_id\n    FROM (\n        SELECT customer_id, 'account' AS product_type\n        FROM banking_new.\"Accounts\"\n        UNION ALL\n        SELECT customer_id, 'loan' AS product_type\n        FROM banking_new.\"Loans\"\n        UNION ALL\n        SELECT customer_id, 'card' AS product_type\n        FROM banking_new.\"Cards\"\n        UNION ALL\n        SELECT customer_id, 'deposit' AS product_type\n        FROM banking_new.\"Deposits\"\n    ) AS products\n    GROUP BY customer_id\n    HAVING COUNT(DISTINCT product_type) >= 3\n) AS products_count ON c.customer_id = products_count.customer_id\nWHERE EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM c.date_of_birth) > 10;",
    "answer": "113",
    "id": "c7d31fa2-cf8c-451d-a78a-d63d30a690dc",
    "llm_generation_time": 2.9650685787200928,
    "sql_execution_time": 0.00540614128112793,
    "total_token": 2511,
    "success": true
  },
  {
    "query": "How many customers have a higher total balance in blocked cards than in their active, unblocked cards?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" cc ON c.customer_id = cc.customer_id\nWHERE cc.is_blocked = true\nAND EXISTS (\n    SELECT 1\n    FROM banking_new.\"Cards\" c2\n    WHERE c2.customer_id = c.customer_id\n    AND c2.is_blocked = false\n    AND cc.balance > c2.balance\n);",
    "answer": "10",
    "id": "65213ecf-3c99-4f5f-83b0-8f042fd6f1f1",
    "llm_generation_time": 1.8135027885437012,
    "sql_execution_time": 0.004826068878173828,
    "total_token": 2403,
    "success": true
  },
  {
    "query": "Count the number of customers whose full name is a substring of another customer's full name.",
    "sql_command": "SELECT COUNT(DISTINCT c1.customer_id)\nFROM banking_new.\"Customers\" c1\nJOIN banking_new.\"Customers\" c2 ON c1.customer_id <> c2.customer_id\nWHERE c1.customer_name ILIKE '%' || c2.customer_name || '%' OR c2.customer_name ILIKE '%' || c1.customer_name || '%';",
    "answer": "2",
    "id": "d333b22b-f74d-4542-96f2-8247fc6fd881",
    "llm_generation_time": 3.7758967876434326,
    "sql_execution_time": 0.030449867248535156,
    "total_token": 2382,
    "success": true
  },
  {
    "query": "How many customers have a birthday this month and also made more than 10 transactions this month?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id) AS customer_count\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE EXTRACT(MONTH FROM c.date_of_birth) = EXTRACT(MONTH FROM CURRENT_DATE)\nAND EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM CURRENT_DATE)\nGROUP BY c.customer_id\nHAVING COUNT(t.transaction_id) > 10;",
    "answer": "",
    "id": "73e407f0-8f59-4e9d-90e3-523eb1bca70a",
    "llm_generation_time": 3.813220977783203,
    "sql_execution_time": 0.005370140075683594,
    "total_token": 2427,
    "success": true
  },
  {
    "query": "How many customers are suspected duplicates, having the same name and date of birth as another customer?",
    "sql_command": "SELECT COUNT(*) AS duplicate_customer_count\nFROM (\n    SELECT customer_id, customer_name, date_of_birth\n    FROM banking_new.\"Customers\"\n    WHERE customer_name IS NOT NULL AND date_of_birth IS NOT NULL\n    GROUP BY customer_id, customer_name, date_of_birth\n    HAVING COUNT(*) > 1\n) AS duplicates;",
    "answer": "0",
    "id": "c459851b-10f2-449a-865a-067c8e052f44",
    "llm_generation_time": 1.5994925498962402,
    "sql_execution_time": 0.0049779415130615234,
    "total_token": 2384,
    "success": true
  },
  {
    "query": "How many customers more than doubled their total account balance over the last year from net transactions?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id) AS customers_more_than_doubled\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN (\n    SELECT account_id, \n           SUM(CASE WHEN transaction_date >= CURRENT_DATE - INTERVAL '1 year' THEN transaction_amount ELSE 0 END) AS total_net_change\n    FROM banking_new.\"Transactions\"\n    GROUP BY account_id\n) t ON a.account_id = t.account_id\nWHERE t.total_net_change > 2 * a.account_balance;",
    "answer": "22",
    "id": "7b0593f8-a6ce-4e24-8fe9-bc8991c3942b",
    "llm_generation_time": 2.1162526607513428,
    "sql_execution_time": 0.0058536529541015625,
    "total_token": 2428,
    "success": true
  },
  {
    "query": "How many customers have at least one loan that will end after all of their cards have expired?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Cards\" cd ON c.customer_id = cd.customer_id\nWHERE l.end_date > ALL (SELECT expiration_date FROM banking_new.\"Cards\" WHERE customer_id = c.customer_id);",
    "answer": "46",
    "id": "fe0f884f-9d35-4e93-b9aa-220209b0532f",
    "llm_generation_time": 1.6634318828582764,
    "sql_execution_time": 0.006571769714355469,
    "total_token": 2388,
    "success": true
  },
  {
    "query": "Count customers who made transactions from all of their accounts on the exact same day at least once.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nGROUP BY c.customer_id\nHAVING COUNT(DISTINCT t.transaction_date) = 1;",
    "answer": "9",
    "id": "c552df78-871f-4bcb-8857-4d501ed6229b",
    "llm_generation_time": 1.5937879085540771,
    "sql_execution_time": 0.005533933639526367,
    "total_token": 2383,
    "success": true
  },
  {
    "query": "How many customers have a loan with an interest rate in the top 1% for that specific loan type?",
    "sql_command": "SELECT COUNT(DISTINCT l.customer_id) AS top_1_percent_loan_customers\nFROM banking_new.\"Loans\" l\nWHERE l.interest_rate >= (\n    SELECT DISTINCT ON (loan_type_id) interest_rate\n    FROM banking_new.\"Loans\"\n    ORDER BY loan_type_id, interest_rate DESC\n    LIMIT 1\n);",
    "answer": "2",
    "id": "447ff64b-90ba-4aa1-9a73-c8bc808ae65f",
    "llm_generation_time": 1.6256072521209717,
    "sql_execution_time": 0.004815578460693359,
    "total_token": 2388,
    "success": true
  },
  {
    "query": "How many branches have their oldest customer as also their wealthiest customer by total account balance?",
    "sql_command": "",
    "answer": "",
    "id": "5932c9c4-b5c8-4ee2-a902-f63152f22c94",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers started a new deposit in the same month and year as their most recent loan began?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id) AS customer_count\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nWHERE EXTRACT(YEAR FROM d.start_date) = EXTRACT(YEAR FROM l.start_date)\nAND EXTRACT(MONTH FROM d.start_date) = EXTRACT(MONTH FROM l.start_date);",
    "answer": "8",
    "id": "b9894da4-5198-4dd2-ad29-3fc3a03830a9",
    "llm_generation_time": 3.818673849105835,
    "sql_execution_time": 0.005688190460205078,
    "total_token": 2413,
    "success": true
  },
  {
    "query": "How many customers have an account balance standard deviation that is greater than their average account balance?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nGROUP BY c.customer_id\nHAVING STDDEV_SAMP(a.account_balance) > AVG(a.account_balance);",
    "answer": "18",
    "id": "c52574d9-0c4d-485a-a643-4335079f9244",
    "llm_generation_time": 3.5210440158843994,
    "sql_execution_time": 0.00506281852722168,
    "total_token": 2368,
    "success": true
  },
  {
    "query": "Count customers who have taken a new loan before their previous loan's official end date.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l1 ON c.customer_id = l1.customer_id\nJOIN banking_new.\"Loans\" l2 ON c.customer_id = l2.customer_id\nWHERE l1.loan_id < l2.loan_id\nAND l2.end_date > l1.end_date;",
    "answer": "36",
    "id": "f47ff2ae-462c-432b-ae76-c8e73699f3aa",
    "llm_generation_time": 3.8219473361968994,
    "sql_execution_time": 0.004995584487915039,
    "total_token": 2391,
    "success": true
  },
  {
    "query": "How many customers maintained a total monthly transaction amount of at least $500 for every month of the past year?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE t.transaction_date >= CURRENT_DATE - INTERVAL '1 year'\nGROUP BY c.customer_id\nHAVING SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 1 THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 2 THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 3 THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 4 THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 5 THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 6 THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 7 THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 8 THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 9 THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 10 THEN t.transaction_amount ELSE 0 END) >= 500\nAND SUM(CASE WHEN EXTRACT(MONTH FROM t.transaction_date) = EXTRACT(MONTH FROM t.transaction_date) - 11 THEN t.transaction_amount ELSE 0 END) >= 500;",
    "answer": "",
    "id": "c10b890d-4347-4b18-b823-327fa6590a4c",
    "llm_generation_time": 9.424787282943726,
    "sql_execution_time": 0.006612300872802734,
    "total_token": 2887,
    "success": true
  },
  {
    "query": "How many branches have at least one customer who holds every single type of loan product?",
    "sql_command": "",
    "answer": "",
    "id": "39ca1753-1026-4117-9ea4-b16155f76f50",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of customers with deposits and cards.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id;",
    "answer": "66",
    "id": "16aaeb0c-a427-4c21-98bf-9f591c9bd865",
    "llm_generation_time": 3.6691484451293945,
    "sql_execution_time": 0.004670143127441406,
    "total_token": 2356,
    "success": true
  },
  {
    "query": "Count the number of transactions per deposit type with ID 127.",
    "sql_command": "SELECT \n    dt.type AS deposit_type,\n    COUNT(t.transaction_id) AS transaction_count\nFROM \n    banking_new.\"Deposits\" d\nJOIN \n    banking_new.\"DepositTypes\" dt ON d.deposit_type_id = dt.deposit_type_id\nJOIN \n    banking_new.\"Accounts\" a ON d.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE \n    dt.deposit_type_id = 127\nGROUP BY \n    dt.type;",
    "answer": "",
    "id": "cede2e0a-0a75-4ef9-bab7-e23b7b69e71c",
    "llm_generation_time": 2.063066244125366,
    "sql_execution_time": 0.005146026611328125,
    "total_token": 2417,
    "success": true
  },
  {
    "query": "Count the number of loans per loan type with ID 127.",
    "sql_command": "SELECT \"LoanTypes\".type AS loan_type, COUNT(\"Loans\".loan_id) AS loan_count\nFROM banking_new.\"Loans\"\nJOIN banking_new.\"LoanTypes\" ON \"Loans\".loan_type_id = \"LoanTypes\".loan_type_id\nWHERE \"Loans\".loan_type_id = 127\nGROUP BY \"LoanTypes\".type;",
    "answer": "",
    "id": "d4f7e70a-afb2-4fd8-a5b4-95cfa7a95783",
    "llm_generation_time": 3.4397995471954346,
    "sql_execution_time": 0.004742622375488281,
    "total_token": 2381,
    "success": true
  },
  {
    "query": "Count the number of deposits per deposit type with ID 127.",
    "sql_command": "SELECT \n    dt.type AS deposit_type,\n    COUNT(DISTINCT d.deposit_id) AS deposit_count\nFROM \n    banking_new.\"Deposits\" d\nJOIN \n    banking_new.\"DepositTypes\" dt ON d.deposit_type_id = dt.deposit_type_id\nWHERE \n    dt.deposit_type_id = 127\nGROUP BY \n    dt.type;",
    "answer": "",
    "id": "8eafad22-127b-4cb6-8545-5871ff5edc99",
    "llm_generation_time": 1.700664758682251,
    "sql_execution_time": 0.004685878753662109,
    "total_token": 2385,
    "success": true
  },
  {
    "query": "Count the number of accounts with more than 2000 in transactions.",
    "sql_command": "SELECT account_id, COUNT(*) AS transaction_count\nFROM banking_new.\"Transactions\"\nGROUP BY account_id\nHAVING COUNT(*) > 2000;",
    "answer": "",
    "id": "9747aee2-3cef-4877-9ccb-3a67ac1bef1a",
    "llm_generation_time": 3.0479369163513184,
    "sql_execution_time": 0.0046384334564208984,
    "total_token": 2339,
    "success": true
  },
  {
    "query": "Count the number of customers with accounts and loans.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id;",
    "answer": "101",
    "id": "1e799dcf-4b0f-4a4b-9b36-d697dd4c039b",
    "llm_generation_time": 1.3742644786834717,
    "sql_execution_time": 0.005151987075805664,
    "total_token": 2355,
    "success": true
  },
  {
    "query": "Count the number of transactions with amount above 100 in the last 3 months.",
    "sql_command": "SELECT COUNT(*) AS transaction_count\nFROM banking_new.\"Transactions\"\nWHERE transaction_amount > 100\nAND transaction_date >= CURRENT_DATE - INTERVAL '3 months';",
    "answer": "13",
    "id": "73207eee-5371-4929-b5d7-3a0c897138de",
    "llm_generation_time": 1.2014360427856445,
    "sql_execution_time": 0.005839109420776367,
    "total_token": 2344,
    "success": true
  },
  {
    "query": "Count the number of transactions per account with ID 128.",
    "sql_command": "SELECT account_id, COUNT(*) AS transaction_count\nFROM banking_new.\"Transactions\"\nWHERE account_id = 128\nGROUP BY account_id;",
    "answer": "4",
    "id": "aac8812d-f565-4db8-877b-5ff3f4959eba",
    "llm_generation_time": 3.3697879314422607,
    "sql_execution_time": 0.005833864212036133,
    "total_token": 2335,
    "success": true
  },
  {
    "query": "Count the number of deposits per customer with ID 128.",
    "sql_command": "SELECT customer_id, COUNT(*) AS deposit_count\nFROM banking_new.\"Deposits\"\nWHERE customer_id = 128\nGROUP BY customer_id;",
    "answer": "1",
    "id": "e25910c1-8ae1-4ece-8219-bf1325cec35d",
    "llm_generation_time": 3.4181065559387207,
    "sql_execution_time": 0.004862546920776367,
    "total_token": 2337,
    "success": true
  },
  {
    "query": "Count the number of loans per customer with ID 128.",
    "sql_command": "SELECT customers.customer_id, COUNT(loans.loan_id) AS loan_count\nFROM banking_new.\"Customers\" customers\nJOIN banking_new.\"Loans\" loans ON customers.customer_id = loans.customer_id\nWHERE customers.customer_id = 128\nGROUP BY customers.customer_id;",
    "answer": "1",
    "id": "8889cefa-df9b-4adf-b425-94cda451cc77",
    "llm_generation_time": 3.679736375808716,
    "sql_execution_time": 0.0044574737548828125,
    "total_token": 2362,
    "success": true
  },
  {
    "query": "Count the number of cards per customer with ID 128.",
    "sql_command": "SELECT customer_id, COUNT(*) AS card_count\nFROM banking_new.\"Cards\"\nWHERE customer_id = 128\nGROUP BY customer_id;",
    "answer": "1",
    "id": "327be4b5-c2ef-47df-8d53-d1672df5268d",
    "llm_generation_time": 4.925610303878784,
    "sql_execution_time": 0.004885196685791016,
    "total_token": 2335,
    "success": true
  },
  {
    "query": "Count the number of accounts per branch with ID 128.",
    "sql_command": "SELECT \n    b.branch_id, \n    COUNT(a.account_id) AS account_count\nFROM \n    banking_new.\"Branches\" b\nJOIN \n    banking_new.\"Accounts\" a ON b.branch_id = a.customer_id\nWHERE \n    b.branch_id = 128\nGROUP BY \n    b.branch_id;",
    "answer": "",
    "id": "e486bcf0-50c8-4592-adc5-6eb85ab51b86",
    "llm_generation_time": 3.456489086151123,
    "sql_execution_time": 0.004359006881713867,
    "total_token": 2372,
    "success": true
  },
  {
    "query": "Count the number of transactions with amount greater than average per branch.",
    "sql_command": "SELECT \n    b.branch_code,\n    COUNT(t.transaction_id) AS transaction_count\nFROM \n    banking_new.\"Branches\" b\nJOIN \n    banking_new.\"Customers\" c ON b.branch_id = c.branch_id\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nGROUP BY \n    b.branch_code\nHAVING \n    COUNT(t.transaction_id) > (\n        SELECT \n            AVG(transaction_count)\n        FROM (\n            SELECT \n                COUNT(t.transaction_id) AS transaction_count\n            FROM \n                banking_new.\"Branches\" b\n            JOIN \n                banking_new.\"Customers\" c ON b.branch_id = c.branch_id\n            JOIN \n                banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\n            JOIN \n                banking_new.\"Transactions\" t ON a.account_id = t.account_id\n            GROUP BY \n                b.branch_id\n        ) AS branch_avg\n    );",
    "answer": "280",
    "id": "2f8cc0c1-f901-4192-bc54-a5fc932b91d6",
    "llm_generation_time": 3.469107151031494,
    "sql_execution_time": 0.0065157413482666016,
    "total_token": 2519,
    "success": true
  },
  {
    "query": "Count the number of deposits with balance above average per customer type.",
    "sql_command": "SELECT \n    customer_id, \n    COUNT(*) AS deposit_count\nFROM \n    banking_new.\"Deposits\"\nGROUP BY \n    customer_id\nHAVING \n    AVG(balance) > (\n        SELECT \n            AVG(balance) \n        FROM \n            banking_new.\"Deposits\"\n    );",
    "answer": "36",
    "id": "dcd75f18-28ba-4ae3-9f9e-6e70eaa2d39f",
    "llm_generation_time": 1.504626750946045,
    "sql_execution_time": 0.00518488883972168,
    "total_token": 2369,
    "success": true
  },
  {
    "query": "Count the number of loans with balance above average per loan type.",
    "sql_command": "",
    "answer": "",
    "id": "2146dc2d-36cc-4604-96b7-3dcb8cf87dbe",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of customers with more than three accounts.",
    "sql_command": "SELECT COUNT(*) AS customer_count\nFROM (\n    SELECT customer_id\n    FROM banking_new.\"Accounts\"\n    GROUP BY customer_id\n    HAVING COUNT(*) > 3\n) AS customers_with_more_than_three_accounts;",
    "answer": "12",
    "id": "fce39ee9-f16f-4760-ab30-d772a29f9c64",
    "llm_generation_time": 3.2929329872131348,
    "sql_execution_time": 0.004649162292480469,
    "total_token": 2351,
    "success": true
  },
  {
    "query": "Count the number of customers with more than three deposits.",
    "sql_command": "SELECT COUNT(*) AS customer_count\nFROM (\n    SELECT customer_id\n    FROM banking_new.\"Deposits\"\n    GROUP BY customer_id\n    HAVING COUNT(*) > 3\n) AS customers_with_more_than_three_deposits;",
    "answer": "5",
    "id": "c7823fc3-24c3-42c7-b0c7-03ca2c0b6efd",
    "llm_generation_time": 4.06013035774231,
    "sql_execution_time": 0.0046329498291015625,
    "total_token": 2355,
    "success": true
  },
  {
    "query": "Count the number of customers with more than three loans.",
    "sql_command": "SELECT COUNT(*) AS customer_count\nFROM (\n    SELECT customer_id\n    FROM banking_new.\"Loans\"\n    GROUP BY customer_id\n    HAVING COUNT(*) > 3\n) AS customers_with_more_than_three_loans;",
    "answer": "4",
    "id": "a33a034e-6895-4c5b-b3e3-ebbd45ac3e78",
    "llm_generation_time": 3.880434274673462,
    "sql_execution_time": 0.004288434982299805,
    "total_token": 2353,
    "success": true
  },
  {
    "query": "Count the number of customers with more than three cards.",
    "sql_command": "SELECT COUNT(*) AS customer_count\nFROM (\n    SELECT customer_id\n    FROM banking_new.\"Cards\"\n    GROUP BY customer_id\n    HAVING COUNT(*) > 3\n) AS customers_with_more_than_three_cards;",
    "answer": "3",
    "id": "fdf89cb4-55a1-4c5f-bfae-0455816f09ca",
    "llm_generation_time": 1.4371440410614014,
    "sql_execution_time": 0.005414485931396484,
    "total_token": 2351,
    "success": true
  },
  {
    "query": "Count the number of transactions in the last 90 days per account.",
    "sql_command": "SELECT \n    t.account_id, \n    COUNT(*) AS transaction_count\nFROM \n    banking_new.\"Transactions\" t\nWHERE \n    t.transaction_date >= CURRENT_DATE - INTERVAL '90 days'\nGROUP BY \n    t.account_id;",
    "answer": "22",
    "id": "d2d53fb7-6a1d-4e98-8755-df52673d4902",
    "llm_generation_time": 1.443549394607544,
    "sql_execution_time": 0.004858493804931641,
    "total_token": 2357,
    "success": true
  },
  {
    "query": "Count the number of deposits with term greater than 24 months.",
    "sql_command": "",
    "answer": "",
    "id": "56042188-d4db-4b99-a64d-dd688c43da35",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of loans with interest rate above 7%.",
    "sql_command": "SELECT COUNT(*) AS high_interest_loans\nFROM banking_new.\"Loans\"\nWHERE interest_rate > 7;",
    "answer": "69",
    "id": "c889b26f-9320-478f-a320-c936cc74d358",
    "llm_generation_time": 0.32578611373901367,
    "sql_execution_time": 0.004828453063964844,
    "total_token": 2330,
    "success": true
  },
  {
    "query": "Count the number of accounts with balance above 10000 per branch.",
    "sql_command": "SELECT \n    b.branch_id, \n    COUNT(a.account_id) AS account_count\nFROM \n    banking_new.\"Branches\" b\nJOIN \n    banking_new.\"Customers\" c ON b.branch_id = c.branch_id\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nWHERE \n    a.account_balance > 10000\nGROUP BY \n    b.branch_id;",
    "answer": "175",
    "id": "559a4681-4b45-4d12-9bed-5bbdec8f06b5",
    "llm_generation_time": 1.7902193069458008,
    "sql_execution_time": 0.005429744720458984,
    "total_token": 2393,
    "success": true
  },
  {
    "query": "Count the number of transactions with amount between 1000 and 5000.",
    "sql_command": "SELECT COUNT(*) AS transaction_count\nFROM banking_new.\"Transactions\"\nWHERE transaction_amount BETWEEN 1000 AND 5000;",
    "answer": "430",
    "id": "6445a657-3e5d-4364-a8fc-1b4e65935909",
    "llm_generation_time": 1.1227812767028809,
    "sql_execution_time": 0.004823923110961914,
    "total_token": 2336,
    "success": true
  },
  {
    "query": "Count the number of deposits with start date after 2022.",
    "sql_command": "SELECT COUNT(*) AS deposit_count\nFROM banking_new.\"Deposits\"\nWHERE start_date > '2022-12-31';",
    "answer": "200",
    "id": "5e1de881-b56e-4ead-9612-255be7327001",
    "llm_generation_time": 1.146646499633789,
    "sql_execution_time": 0.004520416259765625,
    "total_token": 2335,
    "success": true
  },
  {
    "query": "Count the number of loans with end date before 2024.",
    "sql_command": "SELECT COUNT(*) AS loan_count\nFROM banking_new.\"Loans\"\nWHERE end_date < '2024-01-01';",
    "answer": "0",
    "id": "9679c5cb-baee-40d6-bdc4-05f8a90ae238",
    "llm_generation_time": 1.1321887969970703,
    "sql_execution_time": 0.004108428955078125,
    "total_token": 2334,
    "success": true
  },
  {
    "query": "Count the number of customers with accounts created in 2022.",
    "sql_command": "SELECT COUNT(DISTINCT \"Customers\".customer_id) AS customer_count\nFROM banking_new.\"Customers\"\nJOIN banking_new.\"Accounts\" ON \"Customers\".customer_id = \"Accounts\".customer_id\nWHERE \"Accounts\".created_at >= '2022-01-01' AND \"Accounts\".created_at < '2023-01-01';",
    "answer": "0",
    "id": "d8ec6476-d0ad-488a-83b2-175c0f294a7e",
    "llm_generation_time": 1.668912410736084,
    "sql_execution_time": 0.004893779754638672,
    "total_token": 2378,
    "success": true
  },
  {
    "query": "Count the number of transactions per customer with ID 128.",
    "sql_command": "SELECT \n    c.customer_id, \n    COUNT(t.transaction_id) AS transaction_count\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE \n    c.customer_id = 128\nGROUP BY \n    c.customer_id;",
    "answer": "",
    "id": "0f381964-f9f6-4f3a-a214-d798353599cc",
    "llm_generation_time": 1.7369651794433594,
    "sql_execution_time": 0.005532026290893555,
    "total_token": 2389,
    "success": true
  },
  {
    "query": "Count the number of deposits per branch with ID 128.",
    "sql_command": "SELECT \n    b.branch_id, \n    COUNT(DISTINCT d.deposit_id) AS deposit_count\nFROM \n    banking_new.\"Branches\" b\nJOIN \n    banking_new.\"Customers\" c ON b.branch_id = c.branch_id\nJOIN \n    banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nWHERE \n    b.branch_id = 128\nGROUP BY \n    b.branch_id;",
    "answer": "",
    "id": "4fad9880-426f-42af-a18d-4104d555f163",
    "llm_generation_time": 1.0840439796447754,
    "sql_execution_time": 0.004761934280395508,
    "total_token": 2396,
    "success": true
  },
  {
    "query": "Count the number of loans per branch with ID 128.",
    "sql_command": "SELECT \n    b.branch_id, \n    COUNT(l.loan_id) AS loan_count\nFROM \n    banking_new.\"Branches\" b\nJOIN \n    banking_new.\"Customers\" c ON b.branch_id = c.branch_id\nJOIN \n    banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nWHERE \n    b.branch_id = 128\nGROUP BY \n    b.branch_id;",
    "answer": "",
    "id": "3cbd5f3d-c603-4b13-be4c-7f40ac1e5a2b",
    "llm_generation_time": 1.0393116474151611,
    "sql_execution_time": 0.00482487678527832,
    "total_token": 2392,
    "success": true
  },
  {
    "query": "Count the number of cards per branch with ID 128.",
    "sql_command": "",
    "answer": "",
    "id": "d5fb14e0-3dc7-4cdc-b3de-5de47211ff31",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of transactions with amount greater than 2000 per customer.",
    "sql_command": "SELECT \n    c.customer_id, \n    COUNT(t.transaction_id) AS transaction_count\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE \n    t.transaction_amount > 2000\nGROUP BY \n    c.customer_id;",
    "answer": "58",
    "id": "5f03c0b3-b4b1-4e10-b8d1-70ec4b895faf",
    "llm_generation_time": 1.024487018585205,
    "sql_execution_time": 0.005566596984863281,
    "total_token": 2393,
    "success": true
  },
  {
    "query": "Count the number of deposits with balance below 2000 per customer.",
    "sql_command": "SELECT \n    d.customer_id, \n    COUNT(*) AS deposit_count\nFROM \n    banking_new.\"Deposits\" d\nWHERE \n    d.balance < 2000\nGROUP BY \n    d.customer_id;",
    "answer": "4",
    "id": "965d6e31-257c-4689-b537-cd48be6d3974",
    "llm_generation_time": 1.3366007804870605,
    "sql_execution_time": 0.004773378372192383,
    "total_token": 2354,
    "success": true
  },
  {
    "query": "Count the number of loans with balance below 2000 per customer.",
    "sql_command": "SELECT \n    l.customer_id, \n    COUNT(*) AS loan_count\nFROM \n    banking_new.\"Loans\" l\nWHERE \n    l.balance < 2000\nGROUP BY \n    l.customer_id;",
    "answer": "157",
    "id": "05bc8955-e926-4d4c-b4e5-8936f31854b7",
    "llm_generation_time": 1.316476583480835,
    "sql_execution_time": 0.005402088165283203,
    "total_token": 2353,
    "success": true
  },
  {
    "query": "Count the number of cards expiring before 2024 per customer.",
    "sql_command": "SELECT \n    c.customer_id,\n    COUNT(*) AS card_count\nFROM \n    banking_new.\"Cards\" c\nWHERE \n    c.expiration_date < '2024-01-01'\nGROUP BY \n    c.customer_id;",
    "answer": "",
    "id": "0d1172a4-f608-4b6f-8a70-3a997d76a921",
    "llm_generation_time": 1.3801448345184326,
    "sql_execution_time": 0.004918813705444336,
    "total_token": 2357,
    "success": true
  },
  {
    "query": "Count the number of customers with transactions in 2023.",
    "sql_command": "SELECT COUNT(DISTINCT \"Customers\".customer_id)\nFROM banking_new.\"Customers\"\nJOIN banking_new.\"Transactions\" ON \"Customers\".customer_id = \"Transactions\".account_id\nWHERE DATE_PART('year', \"Transactions\".transaction_date) = 2023;",
    "answer": "94",
    "id": "5097e9cb-72b5-40e4-84f4-48b4854f690f",
    "llm_generation_time": 0.6848831176757812,
    "sql_execution_time": 0.004900217056274414,
    "total_token": 2360,
    "success": true
  },
  {
    "query": "Count the number of deposits with term between 12 and 24 months.",
    "sql_command": "SELECT COUNT(*) AS deposit_count\nFROM banking_new.\"Deposits\"\nWHERE term BETWEEN '12 months' AND '24 months';",
    "answer": "44",
    "id": "97ee289d-5d07-4b41-bdb3-07afdf4fcde6",
    "llm_generation_time": 1.1211957931518555,
    "sql_execution_time": 0.004665374755859375,
    "total_token": 2337,
    "success": true
  },
  {
    "query": "Count the number of loans with payment term between 24 and 36 months.",
    "sql_command": "SELECT COUNT(*) AS loan_count\nFROM banking_new.\"Loans\"\nWHERE payment_term BETWEEN '24 months' AND '36 months';",
    "answer": "0",
    "id": "cd2c8d94-0c83-43fe-8035-041ace667c8a",
    "llm_generation_time": 1.1250925064086914,
    "sql_execution_time": 0.004668235778808594,
    "total_token": 2338,
    "success": true
  },
  {
    "query": "Count the number of transactions updated in the last 60 days.",
    "sql_command": "SELECT COUNT(*) AS transaction_count\nFROM banking_new.\"Transactions\"\nWHERE updated_at >= CURRENT_DATE - INTERVAL '60 days';",
    "answer": "1000",
    "id": "481d3899-ce17-43bc-ba20-066805ddbb6b",
    "llm_generation_time": 1.0924715995788574,
    "sql_execution_time": 0.005326271057128906,
    "total_token": 2333,
    "success": true
  },
  {
    "query": "Count the number of customers with more than 2000 in deposits.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nWHERE d.balance > 2000;",
    "answer": "131",
    "id": "5419c31d-8c4e-4ed3-a3de-5fbaad539f72",
    "llm_generation_time": 1.3091073036193848,
    "sql_execution_time": 0.005557537078857422,
    "total_token": 2352,
    "success": true
  },
  {
    "query": "Count the number of accounts with transactions in the last 60 days.",
    "sql_command": "SELECT COUNT(DISTINCT account_id) AS account_count\nFROM banking_new.\"Transactions\"\nWHERE transaction_date >= CURRENT_DATE - INTERVAL '60 days';",
    "answer": "28",
    "id": "6d5e7717-25d3-48f5-b215-9cba1d367c2c",
    "llm_generation_time": 1.1394879817962646,
    "sql_execution_time": 0.005148172378540039,
    "total_token": 2339,
    "success": true
  },
  {
    "query": "Count the number of deposits with end date in the next 3 months.",
    "sql_command": "SELECT COUNT(*) AS deposit_count\nFROM banking_new.\"Deposits\"\nWHERE end_date BETWEEN CURRENT_DATE AND CURRENT_DATE + INTERVAL '3 months';",
    "answer": "4",
    "id": "ba0aaf8e-83ce-4444-815a-41942c07850d",
    "llm_generation_time": 1.1331965923309326,
    "sql_execution_time": 0.004633665084838867,
    "total_token": 2340,
    "success": true
  },
  {
    "query": "Count the number of loans with interest rate between 2% and 4%.",
    "sql_command": "SELECT COUNT(*) AS loan_count\nFROM banking_new.\"Loans\"\nWHERE interest_rate BETWEEN 2 AND 4;",
    "answer": "45",
    "id": "d3503c49-5688-4a80-aba7-8f4bbc522239",
    "llm_generation_time": 1.0679967403411865,
    "sql_execution_time": 0.00459742546081543,
    "total_token": 2335,
    "success": true
  },
  {
    "query": "Count the number of transactions per deposit type with ID 128.",
    "sql_command": "SELECT \n    dt.type AS deposit_type,\n    COUNT(t.transaction_id) AS transaction_count\nFROM \n    banking_new.\"Deposits\" d\nJOIN \n    banking_new.\"DepositTypes\" dt ON d.deposit_type_id = dt.deposit_type_id\nJOIN \n    banking_new.\"Accounts\" a ON d.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE \n    dt.deposit_type_id = 128\nGROUP BY \n    dt.type;",
    "answer": "",
    "id": "90be39ac-978e-4cda-a4e1-49b8da1d1395",
    "llm_generation_time": 2.046814203262329,
    "sql_execution_time": 0.004682302474975586,
    "total_token": 2417,
    "success": true
  },
  {
    "query": "Count the number of loans per loan type with ID 128.",
    "sql_command": "SELECT loan_type_id, COUNT(*) AS loan_count\nFROM banking_new.\"Loans\"\nWHERE loan_type_id = 128\nGROUP BY loan_type_id;",
    "answer": "",
    "id": "aa087527-35a8-4c5c-a3e4-55afdc83eaa6",
    "llm_generation_time": 0.44693708419799805,
    "sql_execution_time": 0.004767179489135742,
    "total_token": 2340,
    "success": true
  },
  {
    "query": "Count the number of deposits per deposit type with ID 128.",
    "sql_command": "SELECT deposit_type_id, COUNT(*) AS deposit_count\nFROM banking_new.\"Deposits\"\nWHERE deposit_type_id = 128\nGROUP BY deposit_type_id;",
    "answer": "",
    "id": "f1c7d99d-e4dd-40dd-9fdc-54ad19d414a1",
    "llm_generation_time": 0.4594430923461914,
    "sql_execution_time": 0.005263328552246094,
    "total_token": 2341,
    "success": true
  },
  {
    "query": "Count the total number of unique customers with active loans and deposits.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nWHERE l.end_date > CURRENT_DATE AND d.end_date > CURRENT_DATE;",
    "answer": "89",
    "id": "63b316ce-4651-4ca6-8ff8-58cae6f340f2",
    "llm_generation_time": 0.8139071464538574,
    "sql_execution_time": 0.004874706268310547,
    "total_token": 2375,
    "success": true
  },
  {
    "query": "Count the number of transactions per customer with total amount over 5000.",
    "sql_command": "SELECT \n    c.customer_id,\n    COUNT(t.transaction_id) AS transaction_count,\n    SUM(t.transaction_amount) AS total_amount\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nGROUP BY \n    c.customer_id\nHAVING \n    SUM(t.transaction_amount) > 5000;",
    "answer": "34",
    "id": "dc124068-9e6b-40f7-830b-6dfb242ea76d",
    "llm_generation_time": 1.883453369140625,
    "sql_execution_time": 0.0053670406341552734,
    "total_token": 2405,
    "success": true
  },
  {
    "query": "Count the number of customers with average deposit balance above 2000.",
    "sql_command": "",
    "answer": "",
    "id": "2a740e1c-3c13-4dce-93cc-9783597ce819",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of accounts with total transactions exceeding 10000.",
    "sql_command": "SELECT COUNT(*) AS account_count\nFROM banking_new.\"Accounts\"\nWHERE account_id IN (\n    SELECT account_id\n    FROM banking_new.\"Transactions\"\n    GROUP BY account_id\n    HAVING SUM(transaction_amount) > 10000\n);",
    "answer": "12",
    "id": "20b1f5d2-35f1-4416-b190-8ed1574c86e2",
    "llm_generation_time": 0.6544399261474609,
    "sql_execution_time": 0.005305767059326172,
    "total_token": 2357,
    "success": true
  },
  {
    "query": "Count the number of customers with loans expiring in 2025.",
    "sql_command": "SELECT COUNT(DISTINCT \"Loans\".\"customer_id\") AS customer_count\nFROM banking_new.\"Loans\"\nWHERE \"Loans\".\"end_date\" BETWEEN '2025-01-01' AND '2025-12-31';",
    "answer": "11",
    "id": "b5f01b98-0d6a-4dd9-bc22-d5fd98dddefb",
    "llm_generation_time": 1.4340453147888184,
    "sql_execution_time": 0.0046007633209228516,
    "total_token": 2358,
    "success": true
  },
  {
    "query": "Count the number of deposits with term longer than average per branch.",
    "sql_command": "",
    "answer": "",
    "id": "1a24e92b-ef70-4183-8616-761d26e2839d",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of transactions per account with average amount above 500.",
    "sql_command": "SELECT account_id, COUNT(*) AS transaction_count, AVG(transaction_amount) AS average_amount\nFROM banking_new.\"Transactions\"\nGROUP BY account_id\nHAVING AVG(transaction_amount) > 500;",
    "answer": "Based on the provided data, the key answer value is not clearly defined. Please provide more context or specify what key answer value refers to.",
    "id": "849ef141-be0d-4b6e-a614-d26e4996f97d",
    "llm_generation_time": 0.5346975326538086,
    "sql_execution_time": 0.00531768798828125,
    "total_token": 2348,
    "success": true
  },
  {
    "query": "Count the number of customers with total loan balance above 15000.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nGROUP BY c.customer_id\nHAVING SUM(l.balance) > 15000;",
    "answer": "",
    "id": "89efa934-a011-4bb1-bc99-e5f702837f4b",
    "llm_generation_time": 1.4240093231201172,
    "sql_execution_time": 0.005338907241821289,
    "total_token": 2360,
    "success": true
  },
  {
    "query": "Count the number of accounts with more transactions than the branch average.",
    "sql_command": "SELECT \n    c.branch_id,\n    COUNT(DISTINCT a.account_id) AS account_count\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nGROUP BY \n    c.branch_id\nHAVING \n    COUNT(DISTINCT t.transaction_id) > (\n        SELECT \n            AVG(transaction_count)\n        FROM (\n            SELECT \n                c2.branch_id,\n                COUNT(DISTINCT t2.transaction_id) AS transaction_count\n            FROM \n                banking_new.\"Customers\" c2\n            JOIN \n                banking_new.\"Accounts\" a2 ON c2.customer_id = a2.customer_id\n            JOIN \n                banking_new.\"Transactions\" t2 ON a2.account_id = t2.account_id\n            GROUP BY \n                c2.branch_id\n        ) AS branch_avg\n    );",
    "answer": "85",
    "id": "fcd5e8f9-ada0-4507-b4b7-530d9ed0f3d1",
    "llm_generation_time": 2.2877626419067383,
    "sql_execution_time": 0.006903886795043945,
    "total_token": 2504,
    "success": true
  },
  {
    "query": "Count the number of customers with deposits and no loans.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nLEFT JOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nWHERE l.loan_id IS NULL;",
    "answer": "41",
    "id": "f7ee3adb-3da8-483b-9d0b-481f50b88070",
    "llm_generation_time": 1.541630744934082,
    "sql_execution_time": 0.004639148712158203,
    "total_token": 2367,
    "success": true
  },
  {
    "query": "Count the number of loans with interest rate above branch average.",
    "sql_command": "SELECT COUNT(*) AS loan_count\nFROM banking_new.\"Loans\"\nWHERE interest_rate > (\n    SELECT AVG(interest_rate)\n    FROM banking_new.\"Loans\"\n    JOIN banking_new.\"Customers\" ON banking_new.\"Loans\".customer_id = banking_new.\"Customers\".customer_id\n    JOIN banking_new.\"Branches\" ON banking_new.\"Customers\".branch_id = banking_new.\"Branches\".branch_id\n);",
    "answer": "101",
    "id": "d592d366-39ff-471e-b120-22b3e3cb7f69",
    "llm_generation_time": 1.8080451488494873,
    "sql_execution_time": 0.0049173831939697266,
    "total_token": 2393,
    "success": true
  },
  {
    "query": "Count the number of transactions per customer with maximum amount over 2000.",
    "sql_command": "SELECT \n    c.customer_id, \n    COUNT(t.transaction_id) AS transaction_count,\n    MAX(t.transaction_amount) AS max_transaction_amount\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nGROUP BY \n    c.customer_id\nHAVING \n    MAX(t.transaction_amount) > 2000;",
    "answer": "4711.63",
    "id": "2026243a-5cb3-4cf1-8ea3-2a76fae56272",
    "llm_generation_time": 1.897050380706787,
    "sql_execution_time": 0.005736827850341797,
    "total_token": 2407,
    "success": true
  },
  {
    "query": "Count the number of customers with average loan term above 18 months.",
    "sql_command": "",
    "answer": "",
    "id": "b63933ad-dc6d-4913-95ae-e93a84d8df53",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of accounts with total deposits exceeding loans.",
    "sql_command": "SELECT COUNT(*) AS account_count\nFROM banking_new.\"Accounts\"\nWHERE account_id IN (\n    SELECT DISTINCT a.account_id\n    FROM banking_new.\"Accounts\" a\n    JOIN banking_new.\"Deposits\" d ON a.customer_id = d.customer_id\n    JOIN banking_new.\"Loans\" l ON a.customer_id = l.customer_id\n    WHERE d.balance > l.balance\n);",
    "answer": "134",
    "id": "cd450325-b937-4487-abad-389d4a49ad18",
    "llm_generation_time": 0.9671688079833984,
    "sql_execution_time": 0.005606651306152344,
    "total_token": 2386,
    "success": true
  },
  {
    "query": "Count the number of customers with transactions in all branches.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id) AS total_customers_with_transactions_in_all_branches\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nJOIN banking_new.\"Branches\" b ON c.branch_id = b.branch_id\nGROUP BY c.customer_id\nHAVING COUNT(DISTINCT b.branch_id) = (SELECT COUNT(*) FROM banking_new.\"Branches\");",
    "answer": "",
    "id": "14c0ea0a-8855-43e0-a928-981704cab879",
    "llm_generation_time": 1.9765958786010742,
    "sql_execution_time": 0.0056917667388916016,
    "total_token": 2411,
    "success": true
  },
  {
    "query": "Count the number of deposits with balance above 1000 per loan type.",
    "sql_command": "",
    "answer": "",
    "id": "ecbfaba7-046a-4120-a466-7479ad9ad063",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of transactions per customer with total amount below 1000.",
    "sql_command": "SELECT \n    c.customer_id,\n    COUNT(t.transaction_id) AS transaction_count,\n    SUM(t.transaction_amount) AS total_amount\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nGROUP BY \n    c.customer_id\nHAVING \n    SUM(t.transaction_amount) < 1000;",
    "answer": "5",
    "id": "e0e62258-51fc-4564-8d73-3f595f42eef1",
    "llm_generation_time": 1.1700258255004883,
    "sql_execution_time": 0.005382061004638672,
    "total_token": 2405,
    "success": true
  },
  {
    "query": "Count the number of customers with loans and cards expiring before 2026.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id\nWHERE cr.expiration_date < '2026-01-01' AND l.end_date < '2026-01-01';",
    "answer": "0",
    "id": "5ad7e735-c3ec-41ee-ad8e-223a61fe7f4a",
    "llm_generation_time": 1.7420477867126465,
    "sql_execution_time": 0.005026340484619141,
    "total_token": 2388,
    "success": true
  },
  {
    "query": "Count the number of accounts with average transaction amount above 200.",
    "sql_command": "SELECT COUNT(*) AS account_count\nFROM banking_new.\"Accounts\"\nWHERE account_id IN (\n    SELECT account_id\n    FROM banking_new.\"Transactions\"\n    GROUP BY account_id\n    HAVING AVG(transaction_amount) > 200\n);",
    "answer": "147",
    "id": "c1db13ed-2745-4c18-9719-e15b1f6f41e4",
    "llm_generation_time": 1.3618090152740479,
    "sql_execution_time": 0.005946636199951172,
    "total_token": 2356,
    "success": true
  },
  {
    "query": "Count the number of customers with deposits ending in 2025 and loans starting in 2025.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id) AS customer_count\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nWHERE EXTRACT(YEAR FROM d.end_date) = 2025\nAND EXTRACT(YEAR FROM l.start_date) = 2025;",
    "answer": "2",
    "id": "c8a06a30-2ee8-49b3-8896-bbfa2e4122da",
    "llm_generation_time": 1.8085031509399414,
    "sql_execution_time": 0.005487680435180664,
    "total_token": 2401,
    "success": true
  },
  {
    "query": "Count the number of transactions per account with standard deviation above 500.",
    "sql_command": "SELECT \n    account_id, \n    COUNT(*) AS transaction_count,\n    STDDEV(transaction_amount) AS std_dev\nFROM \n    banking_new.\"Transactions\"\nGROUP BY \n    account_id\nHAVING \n    STDDEV(transaction_amount) > 500;",
    "answer": "3448.449650495938",
    "id": "a218fc1d-b651-4ce2-b383-68246bcbabcf",
    "llm_generation_time": 1.4031081199645996,
    "sql_execution_time": 0.006219625473022461,
    "total_token": 2361,
    "success": true
  },
  {
    "query": "Count the number of customers with total balance across all accounts above 10000.",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nWHERE a.account_balance > 10000;",
    "answer": "142",
    "id": "07efca92-932b-4757-adf4-ba8b0ff60c11",
    "llm_generation_time": 1.300262212753296,
    "sql_execution_time": 0.00501561164855957,
    "total_token": 2353,
    "success": true
  },
  {
    "query": "Count the number of deposits per customer with average term above 12 months.",
    "sql_command": "",
    "answer": "",
    "id": "d2f043c8-7d3a-4bc7-9200-7a3587abd1da",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of loans per customer with average interest rate above 4%.",
    "sql_command": "SELECT \n    c.customer_id, \n    COUNT(l.loan_id) AS loan_count, \n    ROUND(AVG(l.interest_rate), 2) AS average_interest_rate\nFROM \n    banking_new.\"Customers\" c\nJOIN \n    banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nGROUP BY \n    c.customer_id\nHAVING \n    AVG(l.interest_rate) > 4;",
    "answer": "18",
    "id": "a65ccdac-bc46-402b-bf1f-2d8a8c1743a3",
    "llm_generation_time": 1.051612377166748,
    "sql_execution_time": 0.005647897720336914,
    "total_token": 2398,
    "success": true
  },
  {
    "query": "Count the number of accounts with more deposits than loans per customer.",
    "sql_command": "SELECT \n    c.customer_id,\n    COUNT(DISTINCT d.deposit_id) AS num_deposits,\n    COUNT(DISTINCT l.loan_id) AS num_loans\nFROM \n    banking_new.\"Customers\" c\nLEFT JOIN \n    banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nLEFT JOIN \n    banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nGROUP BY \n    c.customer_id\nHAVING \n    COUNT(DISTINCT d.deposit_id) > COUNT(DISTINCT l.loan_id);",
    "answer": "14",
    "id": "f7d85cef-77dd-4ad4-8bcd-b5fbc907644b",
    "llm_generation_time": 2.210663080215454,
    "sql_execution_time": 0.006067752838134766,
    "total_token": 2428,
    "success": true
  },
  {
    "query": "Count the number of customers with transactions in the last year per branch.",
    "sql_command": "SELECT \n    b.branch_code,\n    COUNT(DISTINCT c.customer_id) AS customer_count\nFROM \n    banking_new.\"Branches\" b\nJOIN \n    banking_new.\"Customers\" c ON b.branch_id = c.branch_id\nJOIN \n    banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN \n    banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE \n    t.transaction_date >= CURRENT_DATE - INTERVAL '1 year'\nGROUP BY \n    b.branch_code;",
    "answer": "18",
    "id": "71cdb1fe-8f34-44fe-b983-74df00f1069a",
    "llm_generation_time": 2.113569498062134,
    "sql_execution_time": 0.005148887634277344,
    "total_token": 2417,
    "success": true
  },
  {
    "query": "Count the number of deposits with balance above average per customer.",
    "sql_command": "SELECT \n    customer_id, \n    COUNT(*) AS deposit_count\nFROM \n    banking_new.\"Deposits\"\nGROUP BY \n    customer_id\nHAVING \n    AVG(balance) < (SELECT AVG(balance) FROM banking_new.\"Deposits\" WHERE customer_id = banking_new.\"Deposits\".customer_id);",
    "answer": "32",
    "id": "d8cc651d-20c2-41c2-b7bd-cdab1f878d10",
    "llm_generation_time": 1.5369911193847656,
    "sql_execution_time": 0.004901885986328125,
    "total_token": 2373,
    "success": true
  },
  {
    "query": "Count the number of loans with payment term above average per loan type.",
    "sql_command": "",
    "answer": "",
    "id": "231837d2-0b48-4fe0-9040-16e63b8cfea0",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of customers with total transaction amount above 5000 per branch.",
    "sql_command": "",
    "answer": "",
    "id": "284ea351-054c-4dee-81f8-24e47d247b46",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "Count the number of accounts with no transactions in the last 90 days.",
    "sql_command": "SELECT COUNT(*) AS account_count\nFROM banking_new.\"Accounts\" a\nWHERE NOT EXISTS (\n    SELECT 1\n    FROM banking_new.\"Transactions\" t\n    WHERE t.\"account_id\" = a.\"account_id\"\n    AND t.\"transaction_date\" >= CURRENT_DATE - INTERVAL '90 days'\n);",
    "answer": "264",
    "id": "342928fe-cd42-4824-b8f3-a7c8cff3d971",
    "llm_generation_time": 0.7746565341949463,
    "sql_execution_time": 0.004755258560180664,
    "total_token": 2373,
    "success": true
  },
  {
    "query": "How many customers have more than 2 accounts?",
    "sql_command": "SELECT COUNT(DISTINCT customer_id) AS customer_count\nFROM banking_new.\"Customers\"\nWHERE customer_id IN (\n    SELECT customer_id\n    FROM banking_new.\"Accounts\"\n    GROUP BY customer_id\n    HAVING COUNT(account_id) > 2\n);",
    "answer": "40",
    "id": "e4b92796-ae4c-483b-b472-4f0584e5aad3",
    "llm_generation_time": 1.3879003524780273,
    "sql_execution_time": 0.004628896713256836,
    "total_token": 2358,
    "success": true
  },
  {
    "query": "How many customers have more than 1 loan?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nGROUP BY c.customer_id\nHAVING COUNT(l.loan_id) > 1;",
    "answer": "35",
    "id": "09239628-8021-46a1-9b88-84a51cf50b0c",
    "llm_generation_time": 1.3748822212219238,
    "sql_execution_time": 0.005112648010253906,
    "total_token": 2357,
    "success": true
  },
  {
    "query": "How many customers have more than 1 deposit?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nGROUP BY c.customer_id\nHAVING COUNT(d.deposit_id) > 1;",
    "answer": "34",
    "id": "d15e7376-6fd4-4109-9a01-b45e85f26375",
    "llm_generation_time": 1.3907256126403809,
    "sql_execution_time": 0.005162477493286133,
    "total_token": 2358,
    "success": true
  },
  {
    "query": "How many customers have more than 3 cards?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id\nGROUP BY c.customer_id\nHAVING COUNT(cr.card_id) > 3;",
    "answer": "3",
    "id": "8b270f67-1b9a-48bf-8969-eefdb25bf75c",
    "llm_generation_time": 1.3517677783966064,
    "sql_execution_time": 0.005074024200439453,
    "total_token": 2355,
    "success": true
  },
  {
    "query": "How many customers have both loans and cards?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Cards\" cd ON c.customer_id = cd.customer_id;",
    "answer": "70",
    "id": "36d91656-b59f-47b6-8585-f47aecca592d",
    "llm_generation_time": 1.34843111038208,
    "sql_execution_time": 0.004477262496948242,
    "total_token": 2354,
    "success": true
  },
  {
    "query": "How many customers have both deposits and cards?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id;",
    "answer": "66",
    "id": "97333359-a9ba-4452-b0d1-6ab05c8566c3",
    "llm_generation_time": 1.3603754043579102,
    "sql_execution_time": 0.005146503448486328,
    "total_token": 2355,
    "success": true
  },
  {
    "query": "How many customers have both loans and accounts?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id;",
    "answer": "101",
    "id": "5e5b2051-2e54-4175-bc74-43ca448686c2",
    "llm_generation_time": 1.3483717441558838,
    "sql_execution_time": 0.005070686340332031,
    "total_token": 2354,
    "success": true
  },
  {
    "query": "How many customers have both deposits and accounts?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id;",
    "answer": "99",
    "id": "005fdc8d-1efe-49a8-bc37-ddf4a293093c",
    "llm_generation_time": 1.3637094497680664,
    "sql_execution_time": 0.005018472671508789,
    "total_token": 2355,
    "success": true
  },
  {
    "query": "How many customers have at least one blocked card and at least one active loan?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nWHERE cr.is_blocked = TRUE\nAND l.end_date > CURRENT_DATE;",
    "answer": "40",
    "id": "61768143-6755-4ac5-a861-e6abec29c88f",
    "llm_generation_time": 1.521526575088501,
    "sql_execution_time": 0.005218029022216797,
    "total_token": 2376,
    "success": true
  },
  {
    "query": "What is the number of customers who made more than 5 transactions in the last month?",
    "sql_command": "",
    "answer": "",
    "id": "1dc48130-aab7-42dd-8358-297eb18eec4d",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many accounts have balances above the average account balance?",
    "sql_command": "SELECT COUNT(*) AS accounts_above_average\nFROM banking_new.\"Accounts\"\nWHERE account_balance > (SELECT AVG(account_balance) FROM banking_new.\"Accounts\");",
    "answer": "142",
    "id": "520c629c-801e-4230-bbc1-115149d4a275",
    "llm_generation_time": 0.4035952091217041,
    "sql_execution_time": 0.004454135894775391,
    "total_token": 2336,
    "success": true
  },
  {
    "query": "How many loans have balances above the average loan balance?",
    "sql_command": "SELECT COUNT(*) AS loans_above_average\nFROM banking_new.\"Loans\"\nWHERE balance > (SELECT AVG(balance) FROM banking_new.\"Loans\");",
    "answer": "98",
    "id": "e9558e21-6cfb-4c10-b83d-72b665167108",
    "llm_generation_time": 1.1288211345672607,
    "sql_execution_time": 0.0043680667877197266,
    "total_token": 2336,
    "success": true
  },
  {
    "query": "How many deposits have balances above the average deposit balance?",
    "sql_command": "SELECT COUNT(*) AS deposits_above_average\nFROM banking_new.\"Deposits\"\nWHERE balance > (SELECT AVG(balance) FROM banking_new.\"Deposits\");",
    "answer": "108",
    "id": "4b7273d3-1a2e-4d32-80f3-04fe140c2545",
    "llm_generation_time": 1.153275489807129,
    "sql_execution_time": 0.004467010498046875,
    "total_token": 2338,
    "success": true
  },
  {
    "query": "How many cards have balances above the average card balance?",
    "sql_command": "SELECT COUNT(*) AS high_balance_cards\nFROM banking_new.\"Cards\"\nWHERE balance > (SELECT AVG(balance) FROM banking_new.\"Cards\");",
    "answer": "81",
    "id": "7f5ec88a-2c3d-47a6-be5e-d8d5968b528a",
    "llm_generation_time": 1.109452486038208,
    "sql_execution_time": 0.004431009292602539,
    "total_token": 2334,
    "success": true
  },
  {
    "query": "What is the number of customers who have both expired loans and expired deposits?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nWHERE l.end_date < CURRENT_DATE\nAND d.end_date < CURRENT_DATE;",
    "answer": "0",
    "id": "3e2368d1-47d1-4c90-a021-8dd6db5233c2",
    "llm_generation_time": 1.5488808155059814,
    "sql_execution_time": 0.004746437072753906,
    "total_token": 2378,
    "success": true
  },
  {
    "query": "How many customers have only deposits but no loans?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nLEFT JOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nLEFT JOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nWHERE l.loan_id IS NULL\nAND d.deposit_id IS NOT NULL;",
    "answer": "41",
    "id": "dbdf4a18-8fcd-4463-a94d-27dfb670579a",
    "llm_generation_time": 1.5869755744934082,
    "sql_execution_time": 0.005175113677978516,
    "total_token": 2376,
    "success": true
  },
  {
    "query": "How many customers have only loans but no deposits?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nLEFT JOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nLEFT JOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nWHERE d.deposit_id IS NULL\nAND l.loan_id IS NOT NULL;",
    "answer": "36",
    "id": "67f526cf-5f1b-4721-99b8-213d7fc9a489",
    "llm_generation_time": 1.5839414596557617,
    "sql_execution_time": 0.004778623580932617,
    "total_token": 2376,
    "success": true
  },
  {
    "query": "How many customers have both deposits and loans but no cards?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nLEFT JOIN banking_new.\"Cards\" ca ON c.customer_id = ca.customer_id\nWHERE ca.card_id IS NULL;",
    "answer": "41",
    "id": "49d48ff3-bf22-4af8-90ae-df7dc7b6dfe4",
    "llm_generation_time": 1.6420135498046875,
    "sql_execution_time": 0.0048677921295166016,
    "total_token": 2383,
    "success": true
  },
  {
    "query": "How many customers have deposits, loans, and cards all together?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Cards\" ca ON c.customer_id = ca.customer_id;",
    "answer": "49",
    "id": "74e328a6-f3a2-425a-9695-8884826b2a9d",
    "llm_generation_time": 1.5494775772094727,
    "sql_execution_time": 0.005707740783691406,
    "total_token": 2376,
    "success": true
  },
  {
    "query": "How many branches have more than 20 customers?",
    "sql_command": "",
    "answer": "",
    "id": "2be515f2-4952-4bd0-8dd7-33e5369be8fc",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many branches have total loan balances above 1 million?",
    "sql_command": "",
    "answer": "",
    "id": "cc93e4d3-c7d0-4e26-ae36-0c42fd677594",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many branches have average account balances above 50,000?",
    "sql_command": "",
    "answer": "",
    "id": "7ebb2332-6c00-49e4-8c5c-8f62cb454fce",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers made at least one transaction greater than 10,000?",
    "sql_command": "SELECT COUNT(DISTINCT t.account_id)\nFROM banking_new.\"Transactions\" t\nJOIN banking_new.\"Accounts\" a ON t.account_id = a.account_id\nJOIN banking_new.\"Customers\" c ON a.customer_id = c.customer_id\nWHERE t.transaction_amount > 10000;",
    "answer": "0",
    "id": "803b8f10-59d6-442c-8e18-22ec952802b7",
    "llm_generation_time": 0.7482643127441406,
    "sql_execution_time": 0.005038261413574219,
    "total_token": 2368,
    "success": true
  },
  {
    "query": "How many accounts belong to customers who have blocked cards?",
    "sql_command": "SELECT COUNT(DISTINCT a.account_id)\nFROM banking_new.\"Accounts\" a\nJOIN banking_new.\"Cards\" c ON a.customer_id = c.customer_id\nWHERE c.is_blocked = TRUE;",
    "answer": "98",
    "id": "4fe27df6-1189-467a-afff-58819e107d52",
    "llm_generation_time": 1.2428557872772217,
    "sql_execution_time": 0.005228996276855469,
    "total_token": 2346,
    "success": true
  },
  {
    "query": "How many accounts belong to customers who have unblocked cards?",
    "sql_command": "SELECT COUNT(DISTINCT a.account_id)\nFROM banking_new.\"Accounts\" a\nJOIN banking_new.\"Customers\" c ON a.customer_id = c.customer_id\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id\nWHERE cr.is_blocked = false;",
    "answer": "106",
    "id": "aa7c57cb-2b59-4ce1-9d78-696e9a3e3798",
    "llm_generation_time": 1.419691801071167,
    "sql_execution_time": 0.004732370376586914,
    "total_token": 2363,
    "success": true
  },
  {
    "query": "How many customers have loans with interest rates above the average loan interest rate?",
    "sql_command": "",
    "answer": "",
    "id": "7784a09d-281d-47bb-b5ac-ef30976a779e",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers have deposits with interest rates above the average deposit interest rate?",
    "sql_command": "SELECT COUNT(DISTINCT d.customer_id) AS customers_with_higher_interest_rate\nFROM banking_new.\"Deposits\" d\nWHERE d.interest_rate > (\n    SELECT AVG(d2.interest_rate)\n    FROM banking_new.\"Deposits\" d2\n    WHERE d2.interest_rate IS NOT NULL\n);",
    "answer": "83",
    "id": "5ce236d3-92fd-4060-a856-f5cfef318bf1",
    "llm_generation_time": 0.8111257553100586,
    "sql_execution_time": 0.004513740539550781,
    "total_token": 2377,
    "success": true
  },
  {
    "query": "How many customers have both accounts and transactions exceeding the average transaction amount?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE t.transaction_amount > (\n    SELECT AVG(transaction_amount)\n    FROM banking_new.\"Transactions\"\n);",
    "answer": "142",
    "id": "e28b8c37-85be-4b7c-b924-74c92a31b6f6",
    "llm_generation_time": 1.5641674995422363,
    "sql_execution_time": 0.00506591796875,
    "total_token": 2378,
    "success": true
  },
  {
    "query": "How many customers have more than 2 different types of financial products (accounts, loans, deposits, cards)?",
    "sql_command": "",
    "answer": "",
    "id": "71d39d89-e11e-46be-8af7-144ccfc30c8f",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many customers hold both loans of more than 50,000 and deposits of more than 50,000?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Loans\" l ON c.customer_id = l.customer_id\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nWHERE l.balance > 50000\nAND d.balance > 50000;",
    "answer": "0",
    "id": "7eebeb7c-163f-4d4f-8802-d4ea38df4281",
    "llm_generation_time": 0.8938894271850586,
    "sql_execution_time": 0.005120038986206055,
    "total_token": 2386,
    "success": true
  },
  {
    "query": "How many branches have customers with blocked cards?",
    "sql_command": "SELECT COUNT(DISTINCT b.branch_id)\nFROM banking_new.\"Branches\" b\nJOIN banking_new.\"Customers\" c ON b.branch_id = c.branch_id\nJOIN banking_new.\"Cards\" card ON c.customer_id = card.customer_id\nWHERE card.is_blocked = TRUE;",
    "answer": "4",
    "id": "b258bf24-5229-4a1b-ad86-f16ba1a83814",
    "llm_generation_time": 1.4293835163116455,
    "sql_execution_time": 0.0054779052734375,
    "total_token": 2361,
    "success": true
  },
  {
    "query": "How many transactions occurred in branches where the average account balance is above 100,000?",
    "sql_command": "SELECT COUNT(*) AS transaction_count\nFROM banking_new.\"Transactions\"\nJOIN banking_new.\"Accounts\" ON banking_new.\"Transactions\".account_id = banking_new.\"Accounts\".account_id\nJOIN banking_new.\"Customers\" ON banking_new.\"Accounts\".customer_id = banking_new.\"Customers\".customer_id\nJOIN banking_new.\"Branches\" ON banking_new.\"Customers\".branch_id = banking_new.\"Branches\".branch_id\nWHERE (SELECT AVG(account_balance) FROM banking_new.\"Accounts\" WHERE banking_new.\"Accounts\".customer_id = banking_new.\"Customers\".customer_id) > 100000;",
    "answer": "0",
    "id": "3cc1ce2e-2f9b-4ec4-ae2e-a1f387bf33d1",
    "llm_generation_time": 2.160463333129883,
    "sql_execution_time": 0.0065152645111083984,
    "total_token": 2432,
    "success": true
  },
  {
    "query": "How many customers took loans with interest rates higher than their deposit interest rates?",
    "sql_command": "SELECT COUNT(DISTINCT l.customer_id) AS customers_with_higher_loan_interest\nFROM banking_new.\"Loans\" l\nJOIN banking_new.\"Deposits\" d ON l.customer_id = d.customer_id\nWHERE l.interest_rate > d.interest_rate;",
    "answer": "56",
    "id": "60355c3e-316a-434e-92c3-97e76a4f2d86",
    "llm_generation_time": 1.408726692199707,
    "sql_execution_time": 0.004687309265136719,
    "total_token": 2365,
    "success": true
  },
  {
    "query": "How many customers have expired deposits but active loans?",
    "sql_command": "SELECT COUNT(DISTINCT d.customer_id)\nFROM banking_new.\"Deposits\" d\nJOIN banking_new.\"Loans\" l ON d.customer_id = l.customer_id\nWHERE d.end_date < CURRENT_DATE\nAND l.end_date IS NULL;",
    "answer": "0",
    "id": "efb8c729-ced2-4d59-96ff-20e7e881cecb",
    "llm_generation_time": 1.362732172012329,
    "sql_execution_time": 0.004805803298950195,
    "total_token": 2356,
    "success": true
  },
  {
    "query": "How many customers have expired loans but active deposits?",
    "sql_command": "SELECT COUNT(DISTINCT l.customer_id)\nFROM banking_new.\"Loans\" l\nJOIN banking_new.\"Customers\" c ON l.customer_id = c.customer_id\nJOIN banking_new.\"Deposits\" d ON c.customer_id = d.customer_id\nWHERE l.end_date < CURRENT_DATE\nAND d.end_date IS NULL;",
    "answer": "0",
    "id": "99b8054f-6ed6-43c5-9785-fdb7ca20c4c0",
    "llm_generation_time": 1.5407013893127441,
    "sql_execution_time": 0.0045812129974365234,
    "total_token": 2372,
    "success": true
  },
  {
    "query": "How many accounts belong to customers who made transactions last year?",
    "sql_command": "SELECT COUNT(DISTINCT a.account_id)\nFROM banking_new.\"Accounts\" a\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE t.transaction_date >= DATE_TRUNC('year', CURRENT_DATE - INTERVAL '1 year') \n  AND t.transaction_date < CURRENT_DATE;",
    "answer": "199",
    "id": "a3ef7f7d-fb69-4196-a345-c4e5a9d7ce2b",
    "llm_generation_time": 1.4713871479034424,
    "sql_execution_time": 0.0050067901611328125,
    "total_token": 2368,
    "success": true
  },
  {
    "query": "How many customers made no transactions in the last 6 months?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nLEFT JOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nLEFT JOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nWHERE t.transaction_date < CURRENT_DATE - INTERVAL '6 months'\nAND t.transaction_date IS NULL;",
    "answer": "0",
    "id": "39192efa-ddc0-43a9-9885-7dffa8ef7580",
    "llm_generation_time": 1.582648754119873,
    "sql_execution_time": 0.005087375640869141,
    "total_token": 2379,
    "success": true
  },
  {
    "query": "How many customers have both blocked and unblocked cards?",
    "sql_command": "SELECT COUNT(DISTINCT c.customer_id)\nFROM banking_new.\"Customers\" c\nJOIN banking_new.\"Cards\" cr ON c.customer_id = cr.customer_id\nWHERE cr.is_blocked = true\nAND EXISTS (\n    SELECT 1\n    FROM banking_new.\"Cards\" cr2\n    WHERE cr2.customer_id = c.customer_id\n    AND cr2.is_blocked = false\n);",
    "answer": "22",
    "id": "875894fd-32a1-4e0e-aeec-221efce23c2d",
    "llm_generation_time": 1.6701438426971436,
    "sql_execution_time": 0.004781961441040039,
    "total_token": 2385,
    "success": true
  },
  {
    "query": "How many loans belong to customers who also made at least 10 transactions?",
    "sql_command": "",
    "answer": "",
    "id": "7fa8188e-d50c-4696-a730-f4105a12b144",
    "llm_generation_time": 0,
    "sql_execution_time": 0,
    "total_token": 0,
    "success": false
  },
  {
    "query": "How many deposits belong to customers who also made at least 10 transactions?",
    "sql_command": "SELECT COUNT(DISTINCT d.deposit_id)\nFROM banking_new.\"Deposits\" d\nJOIN banking_new.\"Customers\" c ON d.customer_id = c.customer_id\nJOIN banking_new.\"Accounts\" a ON c.customer_id = a.customer_id\nJOIN banking_new.\"Transactions\" t ON a.account_id = t.account_id\nGROUP BY d.customer_id\nHAVING COUNT(DISTINCT t.transaction_id) >= 10;",
    "answer": "1",
    "id": "ec8e0e4e-3f5a-42f6-b4a5-b985d1910379",
    "llm_generation_time": 1.0597822666168213,
    "sql_execution_time": 0.00559234619140625,
    "total_token": 2398,
    "success": true
  }
]